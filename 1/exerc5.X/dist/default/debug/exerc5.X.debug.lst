

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 26 20:17:34 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	nvCOMRAM
    59  00001A                     __pnvCOMRAM:
    60                           	opt stack 0
    61  00001A                     _nivel:
    62                           	opt stack 0
    63  00001A                     	ds	1
    64  0000                     _EECON2	set	4007
    65  0000                     _EEDATA	set	4008
    66  0000                     _EECON1bits	set	4006
    67  0000                     _EEADR	set	4009
    68  0000                     _PORTBbits	set	3969
    69  0000                     _PORTAbits	set	3968
    70  0000                     _TRISBbits	set	3987
    71  0000                     _PORTD	set	3971
    72  0000                     _TRISAbits	set	3986
    73  0000                     _T0CONbits	set	4053
    74  0000                     _INTCONbits	set	4082
    75  0000                     _PORTCbits	set	3970
    76  0000                     _TMR0L	set	4054
    77  0000                     _TMR0H	set	4055
    78  0000                     _TRISE	set	3990
    79  0000                     _TRISD	set	3989
    80  0000                     _TRISC	set	3988
    81  0000                     _TRISB	set	3987
    82  0000                     _TRISA	set	3986
    83  0000                     _ADCON1	set	4033
    84  0000                     _TMR0ON	set	32431
    85                           
    86                           ; #config settings
    87  0000                     
    88                           	psect	cinit
    89  00034C                     __pcinit:
    90                           	opt stack 0
    91  00034C                     start_initialization:
    92                           	opt stack 0
    93  00034C                     __initialization:
    94                           	opt stack 0
    95                           
    96                           ; Clear objects allocated to COMRAM (5 bytes)
    97  00034C  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
    98  00034E  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
    99  000350  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   100  000352  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   101  000354  6A15               	clrf	__pbssCOMRAM& (0+255),c
   102  000356                     end_of_initialization:
   103                           	opt stack 0
   104  000356                     __end_of__initialization:
   105                           	opt stack 0
   106  000356  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   107  000358  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   108  00035A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   109  00035C  6EF8               	movwf	tblptru,c
   110  00035E  0100               	movlb	0
   111  000360  EF86  F001         	goto	_main	;jump to C main() function
   112                           tblptru	equ	0xFF8
   113                           
   114                           	psect	bssCOMRAM
   115  000015                     __pbssCOMRAM:
   116                           	opt stack 0
   117  000015                     _cont2:
   118                           	opt stack 0
   119  000015                     	ds	2
   120  000017                     _cont:
   121                           	opt stack 0
   122  000017                     	ds	2
   123  000019                     _contador:
   124                           	opt stack 0
   125  000019                     	ds	1
   126                           tblptru	equ	0xFF8
   127                           
   128                           	psect	cstackCOMRAM
   129  000001                     __pcstackCOMRAM:
   130                           	opt stack 0
   131  000001                     ??_isr:
   132                           
   133                           ; 1 bytes @ 0x0
   134  000001                     	ds	14
   135  00000F                     ?___awmod:
   136                           	opt stack 0
   137  00000F                     display7s@v:
   138                           	opt stack 0
   139  00000F                     e2prom_r@addr:
   140                           	opt stack 0
   141  00000F                     e2prom_w@val:
   142                           	opt stack 0
   143  00000F                     atraso_ms@valor:
   144                           	opt stack 0
   145  00000F                     ___awmod@dividend:
   146                           	opt stack 0
   147                           
   148                           ; 2 bytes @ 0xE
   149  00000F                     	ds	1
   150  000010                     e2prom_w@addr:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0xF
   154  000010                     	ds	1
   155  000011                     atraso_ms@i:
   156                           	opt stack 0
   157  000011                     ___awmod@divisor:
   158                           	opt stack 0
   159                           
   160                           ; 2 bytes @ 0x10
   161  000011                     	ds	2
   162  000013                     atraso_ms@j1:
   163                           	opt stack 0
   164  000013                     ___awmod@counter:
   165                           	opt stack 0
   166                           
   167                           ; 1 bytes @ 0x12
   168  000013                     	ds	1
   169  000014                     atraso_ms@j2:
   170                           	opt stack 0
   171  000014                     ___awmod@sign:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x13
   175  000014                     	ds	1
   176  000015                     tblptru	equ	0xFF8
   177                           
   178                           ; 1 bytes @ 0x14
   179 ;;
   180 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   181 ;;
   182 ;; *************** function _main *****************
   183 ;; Defined at:
   184 ;;		line 80 in file "config.c"
   185 ;; Parameters:    Size  Location     Type
   186 ;;		None
   187 ;; Auto vars:     Size  Location     Type
   188 ;;		None
   189 ;; Return value:  Size  Location     Type
   190 ;;                  1    wreg      void 
   191 ;; Registers used:
   192 ;;		wreg, status,2, status,0, cstack
   193 ;; Tracked objects:
   194 ;;		On entry : 0/0
   195 ;;		On exit  : 0/0
   196 ;;		Unchanged: 0/0
   197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   198 ;;      Params:         0       0       0       0       0       0       0       0       0
   199 ;;      Locals:         0       0       0       0       0       0       0       0       0
   200 ;;      Temps:          0       0       0       0       0       0       0       0       0
   201 ;;      Totals:         0       0       0       0       0       0       0       0       0
   202 ;;Total ram usage:        0 bytes
   203 ;; Hardware stack levels required when called:    3
   204 ;; This function calls:
   205 ;;		_loop
   206 ;;		_setup
   207 ;; This function is called by:
   208 ;;		Startup code after reset
   209 ;; This function uses a non-reentrant model
   210 ;;
   211                           
   212                           	psect	text0
   213  00030C                     __ptext0:
   214                           	opt stack 0
   215  00030C                     _main:
   216                           	opt stack 28
   217                           
   218                           ;config.c: 82: ADCON1=0x0C;
   219                           
   220                           ;incstack = 0
   221  00030C  0E0C               	movlw	12
   222  00030E  6EC1               	movwf	4033,c	;volatile
   223                           
   224                           ;config.c: 83: TRISA = 0X00;
   225  000310  0E00               	movlw	0
   226  000312  6E92               	movwf	3986,c	;volatile
   227                           
   228                           ;config.c: 84: TRISB = 0X07;
   229  000314  0E07               	movlw	7
   230  000316  6E93               	movwf	3987,c	;volatile
   231                           
   232                           ;config.c: 85: TRISC = 0X01;
   233  000318  0E01               	movlw	1
   234  00031A  6E94               	movwf	3988,c	;volatile
   235                           
   236                           ;config.c: 86: TRISD = 0X00;
   237  00031C  0E00               	movlw	0
   238  00031E  6E95               	movwf	3989,c	;volatile
   239                           
   240                           ;config.c: 87: TRISE = 0X00;
   241  000320  0E00               	movlw	0
   242  000322  6E96               	movwf	3990,c	;volatile
   243                           
   244                           ;config.c: 88: setup();
   245  000324  EC6B  F001         	call	_setup	;wreg free
   246  000328                     l1091:
   247                           
   248                           ;config.c: 90: {
   249                           ;config.c: 91: loop();
   250  000328  EC09  F000         	call	_loop	;wreg free
   251  00032C  D7FD               	goto	l1091
   252  00032E                     __end_of_main:
   253                           	opt stack 0
   254                           tblptru	equ	0xFF8
   255                           
   256 ;; *************** function _setup *****************
   257 ;; Defined at:
   258 ;;		line 29 in file "exerc5.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;		None
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : 0/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   272 ;;      Params:         0       0       0       0       0       0       0       0       0
   273 ;;      Locals:         0       0       0       0       0       0       0       0       0
   274 ;;      Temps:          0       0       0       0       0       0       0       0       0
   275 ;;      Totals:         0       0       0       0       0       0       0       0       0
   276 ;;Total ram usage:        0 bytes
   277 ;; Hardware stack levels used:    1
   278 ;; Hardware stack levels required when called:    2
   279 ;; This function calls:
   280 ;;		_e2prom_r
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text1
   287  0002D6                     __ptext1:
   288                           	opt stack 0
   289  0002D6                     _setup:
   290                           	opt stack 28
   291                           
   292                           ;exerc5.c: 32: T0CONbits.PSA = 0;
   293                           
   294                           ;incstack = 0
   295  0002D6  96D5               	bcf	4053,3,c	;volatile
   296                           
   297                           ;exerc5.c: 33: T0CONbits.T0PS = 0b111;
   298  0002D8  80D5               	bsf	4053,0,c	;volatile
   299  0002DA  82D5               	bsf	4053,1,c	;volatile
   300  0002DC  84D5               	bsf	4053,2,c	;volatile
   301                           
   302                           ;exerc5.c: 34: T0CONbits.T08BIT = 0;
   303  0002DE  9CD5               	bcf	4053,6,c	;volatile
   304                           
   305                           ;exerc5.c: 35: T0CONbits.T0CS = 0;
   306  0002E0  9AD5               	bcf	4053,5,c	;volatile
   307                           
   308                           ;exerc5.c: 36: TMR0H = 11111111;
   309  0002E2  0EC7               	movlw	199
   310  0002E4  6ED7               	movwf	4055,c	;volatile
   311                           
   312                           ;exerc5.c: 37: TMR0L = 11111000;
   313  0002E6  0E58               	movlw	88
   314  0002E8  6ED6               	movwf	4054,c	;volatile
   315                           
   316                           ;exerc5.c: 39: INTCONbits.GIE = 1;
   317  0002EA  8EF2               	bsf	intcon,7,c	;volatile
   318                           
   319                           ;exerc5.c: 40: INTCONbits.TMR0IE = 1;
   320  0002EC  8AF2               	bsf	intcon,5,c	;volatile
   321                           
   322                           ;exerc5.c: 41: INTCONbits.TMR0IF = 0;
   323  0002EE  94F2               	bcf	intcon,2,c	;volatile
   324                           
   325                           ;exerc5.c: 42: TMR0ON = 1;
   326  0002F0  8ED5               	bsf	4053,7,c	;volatile
   327                           
   328                           ;exerc5.c: 44: TRISAbits.RA4 = 0;
   329  0002F2  9892               	bcf	3986,4,c	;volatile
   330                           
   331                           ;exerc5.c: 45: TRISAbits.RA5 = 0;
   332  0002F4  9A92               	bcf	3986,5,c	;volatile
   333                           
   334                           ;exerc5.c: 46: PORTD = 0;
   335  0002F6  0E00               	movlw	0
   336  0002F8  6E83               	movwf	3971,c	;volatile
   337                           
   338                           ;exerc5.c: 47: TRISBbits.RB0 = 1;
   339  0002FA  8093               	bsf	3987,0,c	;volatile
   340                           
   341                           ;exerc5.c: 48: TRISBbits.RB1 = 1;
   342  0002FC  8293               	bsf	3987,1,c	;volatile
   343                           
   344                           ;exerc5.c: 49: TRISBbits.RB2 = 1;
   345  0002FE  8493               	bsf	3987,2,c	;volatile
   346                           
   347                           ;exerc5.c: 50: TRISBbits.RB3 = 1;
   348  000300  8693               	bsf	3987,3,c	;volatile
   349                           
   350                           ;exerc5.c: 51: nivel = e2prom_r(10);
   351  000302  0E0A               	movlw	10
   352  000304  ECB2  F001         	call	_e2prom_r
   353  000308  6E1A               	movwf	_nivel,c
   354  00030A  0012               	return		;funcret
   355  00030C                     __end_of_setup:
   356                           	opt stack 0
   357                           tblptru	equ	0xFF8
   358                           intcon	equ	0xFF2
   359                           
   360 ;; *************** function _e2prom_r *****************
   361 ;; Defined at:
   362 ;;		line 29 in file "eeprom.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;  addr            1    wreg     unsigned char 
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  addr            1   14[COMRAM] unsigned char 
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      unsigned char 
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         1       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         1       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        1 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    1
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_setup
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text2
   391  000364                     __ptext2:
   392                           	opt stack 0
   393  000364                     _e2prom_r:
   394                           	opt stack 28
   395                           
   396                           ;incstack = 0
   397                           ;e2prom_r@addr stored from wreg
   398  000364  6E0F               	movwf	e2prom_r@addr,c
   399                           
   400                           ;eeprom.c: 31: EEADR= addr;
   401  000366  C00F  FFA9         	movff	e2prom_r@addr,4009	;volatile
   402                           
   403                           ;eeprom.c: 32: EECON1bits.RD=1;
   404  00036A  80A6               	bsf	4006,0,c	;volatile
   405                           
   406                           ;eeprom.c: 33: return EEDATA;
   407  00036C  50A8               	movf	4008,w,c	;volatile
   408  00036E  0012               	return	
   409  000370                     __end_of_e2prom_r:
   410                           	opt stack 0
   411                           tblptru	equ	0xFF8
   412                           intcon	equ	0xFF2
   413                           
   414 ;; *************** function _loop *****************
   415 ;; Defined at:
   416 ;;		line 55 in file "exerc5.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : 0/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   430 ;;      Params:         0       0       0       0       0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels used:    1
   436 ;; Hardware stack levels required when called:    2
   437 ;; This function calls:
   438 ;;		___awmod
   439 ;;		_atraso_ms
   440 ;;		_display7s
   441 ;;		_e2prom_w
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           	psect	text3
   448  000012                     __ptext3:
   449                           	opt stack 0
   450  000012                     _loop:
   451                           	opt stack 28
   452                           
   453                           ;exerc5.c: 56: PORTD = display7s(nivel % 10);
   454                           
   455                           ;incstack = 0
   456  000012  C01A  F00F         	movff	_nivel,___awmod@dividend
   457  000016  6A10               	clrf	___awmod@dividend+1,c
   458  000018  0E00               	movlw	0
   459  00001A  6E12               	movwf	___awmod@divisor+1,c
   460  00001C  0E0A               	movlw	10
   461  00001E  6E11               	movwf	___awmod@divisor,c
   462  000020  EC15  F001         	call	___awmod	;wreg free
   463  000024  500F               	movf	?___awmod,w,c
   464  000026  EC70  F000         	call	_display7s
   465  00002A  6E83               	movwf	3971,c	;volatile
   466                           
   467                           ;exerc5.c: 57: PORTAbits.RA5 = 1;
   468  00002C  8A80               	bsf	3968,5,c	;volatile
   469                           
   470                           ;exerc5.c: 58: atraso_ms(3);
   471  00002E  0E00               	movlw	0
   472  000030  6E10               	movwf	atraso_ms@valor+1,c
   473  000032  0E03               	movlw	3
   474  000034  6E0F               	movwf	atraso_ms@valor,c
   475  000036  EC4D  F001         	call	_atraso_ms	;wreg free
   476                           
   477                           ;exerc5.c: 59: PORTAbits.RA5 = 0;
   478  00003A  9A80               	bcf	3968,5,c	;volatile
   479                           
   480                           ;exerc5.c: 61: if (!PORTBbits.RB0) {
   481  00003C  B081               	btfsc	3969,0,c	;volatile
   482  00003E  D014               	goto	l1049
   483                           
   484                           ;exerc5.c: 62: atraso_ms(2);
   485  000040  0E00               	movlw	0
   486  000042  6E10               	movwf	atraso_ms@valor+1,c
   487  000044  0E02               	movlw	2
   488  000046  6E0F               	movwf	atraso_ms@valor,c
   489  000048  EC4D  F001         	call	_atraso_ms	;wreg free
   490                           
   491                           ;exerc5.c: 63: cont++;
   492  00004C  4A17               	infsnz	_cont,f,c
   493  00004E  2A18               	incf	_cont+1,f,c
   494                           
   495                           ;exerc5.c: 64: if (cont == 500) {
   496  000050  0EF4               	movlw	244
   497  000052  1817               	xorwf	_cont,w,c
   498  000054  E10D               	bnz	l1051
   499  000056  0418               	decf	_cont+1,w,c
   500  000058  B4D8               	btfsc	status,2,c
   501                           
   502                           ;exerc5.c: 65: if (!PORTBbits.RB0) {
   503  00005A  B081               	btfsc	3969,0,c	;volatile
   504  00005C  D009               	goto	l1051
   505                           
   506                           ;exerc5.c: 66: if (nivel < 9) {
   507  00005E  0E09               	movlw	9
   508  000060  601A               	cpfslt	_nivel,c
   509  000062  D006               	goto	l1051
   510                           
   511                           ;exerc5.c: 67: nivel = nivel + 1;
   512  000064  281A               	incf	_nivel,w,c
   513  000066  6E1A               	movwf	_nivel,c
   514  000068                     l1049:
   515                           
   516                           ;exerc5.c: 73: cont = 0;
   517  000068  0E00               	movlw	0
   518  00006A  6E18               	movwf	_cont+1,c
   519  00006C  0E00               	movlw	0
   520  00006E  6E17               	movwf	_cont,c
   521  000070                     l1051:
   522                           
   523                           ;exerc5.c: 74: }
   524                           ;exerc5.c: 77: if (!PORTBbits.RB1) {
   525  000070  B281               	btfsc	3969,1,c	;volatile
   526  000072  D014               	goto	l1067
   527                           
   528                           ;exerc5.c: 78: atraso_ms(2);
   529  000074  0E00               	movlw	0
   530  000076  6E10               	movwf	atraso_ms@valor+1,c
   531  000078  0E02               	movlw	2
   532  00007A  6E0F               	movwf	atraso_ms@valor,c
   533  00007C  EC4D  F001         	call	_atraso_ms	;wreg free
   534                           
   535                           ;exerc5.c: 79: cont2++;
   536  000080  4A15               	infsnz	_cont2,f,c
   537  000082  2A16               	incf	_cont2+1,f,c
   538                           
   539                           ;exerc5.c: 80: if(cont2==500){
   540  000084  0EF4               	movlw	244
   541  000086  1815               	xorwf	_cont2,w,c
   542  000088  E10D               	bnz	l1069
   543  00008A  0416               	decf	_cont2+1,w,c
   544  00008C  B4D8               	btfsc	status,2,c
   545                           
   546                           ;exerc5.c: 81: if (!PORTBbits.RB1) {
   547  00008E  B281               	btfsc	3969,1,c	;volatile
   548  000090  D009               	goto	l1069
   549                           
   550                           ;exerc5.c: 82: if (nivel > 0) {
   551  000092  501A               	movf	_nivel,w,c
   552  000094  B4D8               	btfsc	status,2,c
   553  000096  D006               	goto	l1069
   554                           
   555                           ;exerc5.c: 83: nivel = nivel - 1;
   556  000098  041A               	decf	_nivel,w,c
   557  00009A  6E1A               	movwf	_nivel,c
   558  00009C                     l1067:
   559                           
   560                           ;exerc5.c: 89: cont2=0;
   561  00009C  0E00               	movlw	0
   562  00009E  6E16               	movwf	_cont2+1,c
   563  0000A0  0E00               	movlw	0
   564  0000A2  6E15               	movwf	_cont2,c
   565  0000A4                     l1069:
   566                           
   567                           ;exerc5.c: 90: }
   568                           ;exerc5.c: 91: if (!PORTBbits.RB2) {
   569  0000A4  B481               	btfsc	3969,2,c	;volatile
   570  0000A6  D00A               	goto	l1077
   571                           
   572                           ;exerc5.c: 92: atraso_ms(1);
   573  0000A8  0E00               	movlw	0
   574  0000AA  6E10               	movwf	atraso_ms@valor+1,c
   575  0000AC  0E01               	movlw	1
   576  0000AE  6E0F               	movwf	atraso_ms@valor,c
   577  0000B0  EC4D  F001         	call	_atraso_ms	;wreg free
   578                           
   579                           ;exerc5.c: 93: if (!PORTBbits.RB2) {
   580  0000B4  B481               	btfsc	3969,2,c	;volatile
   581  0000B6  D002               	goto	l1077
   582                           
   583                           ;exerc5.c: 94: nivel = 0;
   584  0000B8  0E00               	movlw	0
   585  0000BA  6E1A               	movwf	_nivel,c
   586  0000BC                     l1077:
   587                           
   588                           ;exerc5.c: 95: }
   589                           ;exerc5.c: 96: }
   590                           ;exerc5.c: 97: if (!PORTBbits.RB3) {
   591  0000BC  B681               	btfsc	3969,3,c	;volatile
   592  0000BE  D00A               	goto	l1085
   593                           
   594                           ;exerc5.c: 98: atraso_ms(1);
   595  0000C0  0E00               	movlw	0
   596  0000C2  6E10               	movwf	atraso_ms@valor+1,c
   597  0000C4  0E01               	movlw	1
   598  0000C6  6E0F               	movwf	atraso_ms@valor,c
   599  0000C8  EC4D  F001         	call	_atraso_ms	;wreg free
   600                           
   601                           ;exerc5.c: 99: if (!PORTBbits.RB3) {
   602  0000CC  B681               	btfsc	3969,3,c	;volatile
   603  0000CE  D002               	goto	l1085
   604                           
   605                           ;exerc5.c: 100: nivel = 9;
   606  0000D0  0E09               	movlw	9
   607  0000D2  6E1A               	movwf	_nivel,c
   608  0000D4                     l1085:
   609                           
   610                           ;exerc5.c: 101: }
   611                           ;exerc5.c: 102: }
   612                           ;exerc5.c: 103: e2prom_w(10, nivel);
   613  0000D4  C01A  F00F         	movff	_nivel,e2prom_w@val
   614  0000D8  0E0A               	movlw	10
   615  0000DA  EC97  F001         	call	_e2prom_w
   616  0000DE  0012               	return		;funcret
   617  0000E0                     __end_of_loop:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           intcon	equ	0xFF2
   621                           status	equ	0xFD8
   622                           
   623 ;; *************** function _e2prom_w *****************
   624 ;; Defined at:
   625 ;;		line 37 in file "eeprom.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  addr            1    wreg     unsigned char 
   628 ;;  val             1   14[COMRAM] unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  addr            1   15[COMRAM] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         1       0       0       0       0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_loop
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text4
   655  00032E                     __ptext4:
   656                           	opt stack 0
   657  00032E                     _e2prom_w:
   658                           	opt stack 28
   659                           
   660                           ;incstack = 0
   661                           ;e2prom_w@addr stored from wreg
   662  00032E  6E10               	movwf	e2prom_w@addr,c
   663                           
   664                           ;eeprom.c: 39: EEADR= addr;
   665  000330  C010  FFA9         	movff	e2prom_w@addr,4009	;volatile
   666                           
   667                           ;eeprom.c: 40: EEDATA=val;
   668  000334  C00F  FFA8         	movff	e2prom_w@val,4008	;volatile
   669                           
   670                           ;eeprom.c: 42: EECON1bits.WREN=1;
   671  000338  84A6               	bsf	4006,2,c	;volatile
   672                           
   673                           ;eeprom.c: 44: EECON2=0x55;
   674  00033A  0E55               	movlw	85
   675  00033C  6EA7               	movwf	4007,c	;volatile
   676                           
   677                           ;eeprom.c: 45: EECON2=0xAA;
   678  00033E  0EAA               	movlw	170
   679  000340  6EA7               	movwf	4007,c	;volatile
   680                           
   681                           ;eeprom.c: 47: EECON1bits.WR=1;
   682  000342  82A6               	bsf	4006,1,c	;volatile
   683  000344                     l128:
   684  000344  B2A6               	btfsc	4006,1,c	;volatile
   685  000346  D7FE               	goto	l128
   686                           
   687                           ;eeprom.c: 50: EECON1bits.WREN=0;
   688  000348  94A6               	bcf	4006,2,c	;volatile
   689                           
   690                           ;eeprom.c: 52: return;
   691  00034A  0012               	return		;funcret
   692  00034C                     __end_of_e2prom_w:
   693                           	opt stack 0
   694                           tblptru	equ	0xFF8
   695                           intcon	equ	0xFF2
   696                           status	equ	0xFD8
   697                           
   698 ;; *************** function _display7s *****************
   699 ;; Defined at:
   700 ;;		line 27 in file "display7s.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  v               1    wreg     unsigned char 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  v               1   14[COMRAM] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      unsigned char 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   714 ;;      Params:         0       0       0       0       0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0
   717 ;;      Totals:         1       0       0       0       0       0       0       0       0
   718 ;;Total ram usage:        1 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_loop
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text5
   729  0000E0                     __ptext5:
   730                           	opt stack 0
   731  0000E0                     _display7s:
   732                           	opt stack 28
   733                           
   734                           ;incstack = 0
   735                           ;display7s@v stored from wreg
   736  0000E0  6E0F               	movwf	display7s@v,c
   737                           
   738                           ;display7s.c: 29: switch(v)
   739  0000E2  D022               	goto	l809
   740  0000E4                     l739:
   741                           
   742                           ;display7s.c: 32: return 0x3F;
   743  0000E4  0E3F               	movlw	63
   744  0000E6  0012               	return	
   745  0000E8                     l743:
   746                           
   747                           ;display7s.c: 34: return 0x06;
   748  0000E8  0E06               	movlw	6
   749  0000EA  0012               	return	
   750  0000EC                     l747:
   751                           
   752                           ;display7s.c: 36: return 0x5B;
   753  0000EC  0E5B               	movlw	91
   754  0000EE  0012               	return	
   755  0000F0                     l751:
   756                           
   757                           ;display7s.c: 38: return 0x4F;
   758  0000F0  0E4F               	movlw	79
   759  0000F2  0012               	return	
   760  0000F4                     l755:
   761                           
   762                           ;display7s.c: 40: return 0x66;
   763  0000F4  0E66               	movlw	102
   764  0000F6  0012               	return	
   765  0000F8                     l759:
   766                           
   767                           ;display7s.c: 42: return 0x6D;
   768  0000F8  0E6D               	movlw	109
   769  0000FA  0012               	return	
   770  0000FC                     l763:
   771                           
   772                           ;display7s.c: 44: return 0x7D;
   773  0000FC  0E7D               	movlw	125
   774  0000FE  0012               	return	
   775  000100                     l767:
   776                           
   777                           ;display7s.c: 46: return 0x07;
   778  000100  0E07               	movlw	7
   779  000102  0012               	return	
   780  000104                     l771:
   781                           
   782                           ;display7s.c: 48: return 0x7F;
   783  000104  0E7F               	movlw	127
   784  000106  0012               	return	
   785  000108                     l775:
   786                           
   787                           ;display7s.c: 50: return 0x6F;
   788  000108  0E6F               	movlw	111
   789  00010A  0012               	return	
   790  00010C                     l779:
   791                           
   792                           ;display7s.c: 52: return 0x77;
   793  00010C  0E77               	movlw	119
   794  00010E  0012               	return	
   795  000110                     l783:
   796                           
   797                           ;display7s.c: 54: return 0x7c;
   798  000110  0E7C               	movlw	124
   799  000112  0012               	return	
   800  000114                     l787:
   801                           
   802                           ;display7s.c: 56: return 0x58;
   803  000114  0E58               	movlw	88
   804  000116  0012               	return	
   805  000118                     l791:
   806                           
   807                           ;display7s.c: 58: return 0x5E;
   808  000118  0E5E               	movlw	94
   809  00011A  0012               	return	
   810  00011C                     l795:
   811                           
   812                           ;display7s.c: 60: return 0x79;
   813  00011C  0E79               	movlw	121
   814  00011E  0012               	return	
   815  000120                     l799:
   816                           
   817                           ;display7s.c: 62: return 0x71;
   818  000120  0E71               	movlw	113
   819  000122  0012               	return	
   820  000124                     l803:
   821                           
   822                           ;display7s.c: 64: return 0;
   823  000124  0E00               	movlw	0
   824                           
   825                           ;display7s.c: 65: }
   826  000126  0012               	return	
   827  000128                     l809:
   828  000128  500F               	movf	display7s@v,w,c
   829                           
   830                           ; Switch size 1, requested type "space"
   831                           ; Number of cases is 16, Range of values is 0 to 15
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte           49    25 (average)
   835                           ;	Chosen strategy is simple_byte
   836  00012A  0A00               	xorlw	0	; case 0
   837  00012C  B4D8               	btfsc	status,2,c
   838  00012E  D7DA               	goto	l739
   839  000130  0A01               	xorlw	1	; case 1
   840  000132  B4D8               	btfsc	status,2,c
   841  000134  D7D9               	goto	l743
   842  000136  0A03               	xorlw	3	; case 2
   843  000138  B4D8               	btfsc	status,2,c
   844  00013A  D7D8               	goto	l747
   845  00013C  0A01               	xorlw	1	; case 3
   846  00013E  B4D8               	btfsc	status,2,c
   847  000140  D7D7               	goto	l751
   848  000142  0A07               	xorlw	7	; case 4
   849  000144  B4D8               	btfsc	status,2,c
   850  000146  D7D6               	goto	l755
   851  000148  0A01               	xorlw	1	; case 5
   852  00014A  B4D8               	btfsc	status,2,c
   853  00014C  D7D5               	goto	l759
   854  00014E  0A03               	xorlw	3	; case 6
   855  000150  B4D8               	btfsc	status,2,c
   856  000152  D7D4               	goto	l763
   857  000154  0A01               	xorlw	1	; case 7
   858  000156  B4D8               	btfsc	status,2,c
   859  000158  D7D3               	goto	l767
   860  00015A  0A0F               	xorlw	15	; case 8
   861  00015C  B4D8               	btfsc	status,2,c
   862  00015E  D7D2               	goto	l771
   863  000160  0A01               	xorlw	1	; case 9
   864  000162  B4D8               	btfsc	status,2,c
   865  000164  D7D1               	goto	l775
   866  000166  0A03               	xorlw	3	; case 10
   867  000168  B4D8               	btfsc	status,2,c
   868  00016A  D7D0               	goto	l779
   869  00016C  0A01               	xorlw	1	; case 11
   870  00016E  B4D8               	btfsc	status,2,c
   871  000170  D7CF               	goto	l783
   872  000172  0A07               	xorlw	7	; case 12
   873  000174  B4D8               	btfsc	status,2,c
   874  000176  D7CE               	goto	l787
   875  000178  0A01               	xorlw	1	; case 13
   876  00017A  B4D8               	btfsc	status,2,c
   877  00017C  D7CD               	goto	l791
   878  00017E  0A03               	xorlw	3	; case 14
   879  000180  B4D8               	btfsc	status,2,c
   880  000182  D7CC               	goto	l795
   881  000184  0A01               	xorlw	1	; case 15
   882  000186  B4D8               	btfsc	status,2,c
   883  000188  D7CB               	goto	l799
   884  00018A  D7CC               	goto	l803
   885  00018C                     __end_of_display7s:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           intcon	equ	0xFF2
   889                           status	equ	0xFD8
   890                           
   891 ;; *************** function _atraso_ms *****************
   892 ;; Defined at:
   893 ;;		line 29 in file "atraso.c"
   894 ;; Parameters:    Size  Location     Type
   895 ;;  valor           2   14[COMRAM] unsigned int 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  i               2   16[COMRAM] unsigned int 
   898 ;;  j2              1   19[COMRAM] volatile unsigned char 
   899 ;;  j1              1   18[COMRAM] volatile unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         2       0       0       0       0       0       0       0       0
   910 ;;      Locals:         4       0       0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0
   912 ;;      Totals:         6       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        6 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_loop
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text6
   924  00029A                     __ptext6:
   925                           	opt stack 0
   926  00029A                     _atraso_ms:
   927                           	opt stack 28
   928                           
   929                           ;atraso.c: 31: unsigned int i;
   930                           ;atraso.c: 32: volatile unsigned char j1;
   931                           ;atraso.c: 33: volatile unsigned char j2=0;
   932                           
   933                           ;incstack = 0
   934  00029A  0E00               	movlw	0
   935  00029C  6E14               	movwf	atraso_ms@j2,c	;volatile
   936                           
   937                           ;atraso.c: 35: for (i =0; i< valor; i++)
   938  00029E  0E00               	movlw	0
   939  0002A0  6E12               	movwf	atraso_ms@i+1,c
   940  0002A2  0E00               	movlw	0
   941  0002A4  6E11               	movwf	atraso_ms@i,c
   942  0002A6  D010               	goto	l977
   943  0002A8                     l973:
   944                           
   945                           ;atraso.c: 36: {
   946                           ;atraso.c: 37: j1=(8000000/(4000l*50));
   947  0002A8  0E28               	movlw	40
   948  0002AA  6E13               	movwf	atraso_ms@j1,c	;volatile
   949  0002AC                     l1:
   950  0002AC  0E09               	movlw	9	; 20 j1 ;# 
   951  0002AE  6F14               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
   952  0002B0  F000               	nop		; 180 j2j1 ;# 
   953  0002B2  F000               	nop		; 180 j2j1 ;# 
   954  0002B4  2F14               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
   955                           
   956                           ; 40 2j1 ;# 
   957  0002B6  EF59  F001         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
   958  0002BA  F000               	nop		; 20 j1 ;# 
   959  0002BC  2F13               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
   960                           
   961                           ; 2 2 ;# 
   962  0002BE  EF56  F001         	goto	l1	; 38 2j1 -2 ;# 
   963  0002C2  F000               	nop		; 1 1 ;# 
   964  0002C4  4A11               	infsnz	atraso_ms@i,f,c
   965  0002C6  2A12               	incf	atraso_ms@i+1,f,c
   966  0002C8                     l977:
   967  0002C8  500F               	movf	atraso_ms@valor,w,c
   968  0002CA  5C11               	subwf	atraso_ms@i,w,c
   969  0002CC  5010               	movf	atraso_ms@valor+1,w,c
   970  0002CE  5812               	subwfb	atraso_ms@i+1,w,c
   971  0002D0  B0D8               	btfsc	status,0,c
   972  0002D2  0012               	return	
   973  0002D4  D7E9               	goto	l973
   974  0002D6                     __end_of_atraso_ms:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           intcon	equ	0xFF2
   978                           status	equ	0xFD8
   979                           
   980 ;; *************** function ___awmod *****************
   981 ;; Defined at:
   982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;  dividend        2   14[COMRAM] int 
   985 ;;  divisor         2   16[COMRAM] int 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  sign            1   19[COMRAM] unsigned char 
   988 ;;  counter         1   18[COMRAM] unsigned char 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  2   14[COMRAM] int 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         4       0       0       0       0       0       0       0       0
   999 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1001 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        6 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    1
  1005 ;; This function calls:
  1006 ;;		Nothing
  1007 ;; This function is called by:
  1008 ;;		_loop
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text7
  1013  00022A                     __ptext7:
  1014                           	opt stack 0
  1015  00022A                     ___awmod:
  1016                           	opt stack 28
  1017                           
  1018                           ;incstack = 0
  1019  00022A  0E00               	movlw	0
  1020  00022C  6E14               	movwf	___awmod@sign,c
  1021  00022E  AE10               	btfss	___awmod@dividend+1,7,c
  1022  000230  D006               	goto	l999
  1023  000232  6C0F               	negf	___awmod@dividend,c
  1024  000234  1E10               	comf	___awmod@dividend+1,f,c
  1025  000236  B0D8               	btfsc	status,0,c
  1026  000238  2A10               	incf	___awmod@dividend+1,f,c
  1027  00023A  0E01               	movlw	1
  1028  00023C  6E14               	movwf	___awmod@sign,c
  1029  00023E                     l999:
  1030  00023E  AE12               	btfss	___awmod@divisor+1,7,c
  1031  000240  D004               	goto	l1003
  1032  000242  6C11               	negf	___awmod@divisor,c
  1033  000244  1E12               	comf	___awmod@divisor+1,f,c
  1034  000246  B0D8               	btfsc	status,0,c
  1035  000248  2A12               	incf	___awmod@divisor+1,f,c
  1036  00024A                     l1003:
  1037  00024A  5011               	movf	___awmod@divisor,w,c
  1038  00024C  1012               	iorwf	___awmod@divisor+1,w,c
  1039  00024E  B4D8               	btfsc	status,2,c
  1040  000250  D018               	goto	l1019
  1041  000252  0E01               	movlw	1
  1042  000254  6E13               	movwf	___awmod@counter,c
  1043  000256  D004               	goto	l1009
  1044  000258                     l1007:
  1045  000258  90D8               	bcf	status,0,c
  1046  00025A  3611               	rlcf	___awmod@divisor,f,c
  1047  00025C  3612               	rlcf	___awmod@divisor+1,f,c
  1048  00025E  2A13               	incf	___awmod@counter,f,c
  1049  000260                     l1009:
  1050  000260  AE12               	btfss	___awmod@divisor+1,7,c
  1051  000262  D7FA               	goto	l1007
  1052  000264                     l1011:
  1053  000264  5011               	movf	___awmod@divisor,w,c
  1054  000266  5C0F               	subwf	___awmod@dividend,w,c
  1055  000268  5012               	movf	___awmod@divisor+1,w,c
  1056  00026A  5810               	subwfb	___awmod@dividend+1,w,c
  1057  00026C  A0D8               	btfss	status,0,c
  1058  00026E  D004               	goto	l1015
  1059  000270  5011               	movf	___awmod@divisor,w,c
  1060  000272  5E0F               	subwf	___awmod@dividend,f,c
  1061  000274  5012               	movf	___awmod@divisor+1,w,c
  1062  000276  5A10               	subwfb	___awmod@dividend+1,f,c
  1063  000278                     l1015:
  1064  000278  90D8               	bcf	status,0,c
  1065  00027A  3212               	rrcf	___awmod@divisor+1,f,c
  1066  00027C  3211               	rrcf	___awmod@divisor,f,c
  1067  00027E  2E13               	decfsz	___awmod@counter,f,c
  1068  000280  D7F1               	goto	l1011
  1069  000282                     l1019:
  1070  000282  5014               	movf	___awmod@sign,w,c
  1071  000284  B4D8               	btfsc	status,2,c
  1072  000286  D004               	goto	l1023
  1073  000288  6C0F               	negf	___awmod@dividend,c
  1074  00028A  1E10               	comf	___awmod@dividend+1,f,c
  1075  00028C  B0D8               	btfsc	status,0,c
  1076  00028E  2A10               	incf	___awmod@dividend+1,f,c
  1077  000290                     l1023:
  1078  000290  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1079  000294  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1080  000298  0012               	return	
  1081  00029A                     __end_of___awmod:
  1082                           	opt stack 0
  1083                           tblptru	equ	0xFF8
  1084                           intcon	equ	0xFF2
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _isr *****************
  1088 ;; Defined at:
  1089 ;;		line 16 in file "exerc5.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1105 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1106 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:       14 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		Interrupt level 2
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	intcode
  1117  000008                     __pintcode:
  1118                           	opt stack 0
  1119  000008                     _isr:
  1120                           	opt stack 28
  1121                           
  1122                           ;incstack = 0
  1123  000008  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1124  00000A  EDC6  F000         	call	int_func,f	;refresh shadow registers
  1125                           tblptru	equ	0xFF8
  1126                           intcon	equ	0xFF2
  1127                           status	equ	0xFD8
  1128                           
  1129                           	psect	intcode_body
  1130  00018C                     __pintcode_body:
  1131                           	opt stack 28
  1132  00018C                     int_func:
  1133                           	opt stack 28
  1134  00018C  0006               	pop		; remove dummy address from shadow register refresh
  1135  00018E  CFFA F001          	movff	pclath,??_isr
  1136  000192  CFFB F002          	movff	pclatu,??_isr+1
  1137  000196  CFE9 F003          	movff	fsr0l,??_isr+2
  1138  00019A  CFEA F004          	movff	fsr0h,??_isr+3
  1139  00019E  CFE1 F005          	movff	fsr1l,??_isr+4
  1140  0001A2  CFE2 F006          	movff	fsr1h,??_isr+5
  1141  0001A6  CFD9 F007          	movff	fsr2l,??_isr+6
  1142  0001AA  CFDA F008          	movff	fsr2h,??_isr+7
  1143  0001AE  CFF3 F009          	movff	prodl,??_isr+8
  1144  0001B2  CFF4 F00A          	movff	prodh,??_isr+9
  1145  0001B6  CFF6 F00B          	movff	tblptrl,??_isr+10
  1146  0001BA  CFF7 F00C          	movff	tblptrh,??_isr+11
  1147  0001BE  CFF8 F00D          	movff	tblptru,??_isr+12
  1148  0001C2  CFF5 F00E          	movff	tablat,??_isr+13
  1149                           
  1150                           ;exerc5.c: 17: TMR0H = 11111111;
  1151  0001C6  0EC7               	movlw	199
  1152  0001C8  6ED7               	movwf	4055,c	;volatile
  1153                           
  1154                           ;exerc5.c: 18: TMR0L = 11111000;
  1155  0001CA  0E58               	movlw	88
  1156  0001CC  6ED6               	movwf	4054,c	;volatile
  1157                           
  1158                           ;exerc5.c: 19: if (contador < nivel) {
  1159  0001CE  501A               	movf	_nivel,w,c
  1160  0001D0  5C19               	subwf	_contador,w,c
  1161  0001D2  B0D8               	btfsc	status,0,c
  1162  0001D4  D002               	goto	i2l59
  1163                           
  1164                           ;exerc5.c: 20: PORTCbits.RC5 = 1;
  1165  0001D6  8A82               	bsf	3970,5,c	;volatile
  1166                           
  1167                           ;exerc5.c: 21: } else {
  1168  0001D8  D001               	goto	i2l965
  1169  0001DA                     i2l59:
  1170                           
  1171                           ;exerc5.c: 22: PORTCbits.RC5 = 0;
  1172  0001DA  9A82               	bcf	3970,5,c	;volatile
  1173  0001DC                     i2l965:
  1174                           
  1175                           ;exerc5.c: 23: }
  1176                           ;exerc5.c: 24: contador = contador + 1;
  1177  0001DC  2819               	incf	_contador,w,c
  1178  0001DE  6E19               	movwf	_contador,c
  1179                           
  1180                           ;exerc5.c: 25: if (contador == 10)contador = 0;
  1181  0001E0  0E0A               	movlw	10
  1182  0001E2  1819               	xorwf	_contador,w,c
  1183  0001E4  A4D8               	btfss	status,2,c
  1184  0001E6  D002               	goto	i2l969
  1185  0001E8  0E00               	movlw	0
  1186  0001EA  6E19               	movwf	_contador,c
  1187  0001EC                     i2l969:
  1188                           
  1189                           ;exerc5.c: 26: INTCONbits.TMR0IF = 0;
  1190  0001EC  94F2               	bcf	intcon,2,c	;volatile
  1191  0001EE  C00E  FFF5         	movff	??_isr+13,tablat
  1192  0001F2  C00D  FFF8         	movff	??_isr+12,tblptru
  1193  0001F6  C00C  FFF7         	movff	??_isr+11,tblptrh
  1194  0001FA  C00B  FFF6         	movff	??_isr+10,tblptrl
  1195  0001FE  C00A  FFF4         	movff	??_isr+9,prodh
  1196  000202  C009  FFF3         	movff	??_isr+8,prodl
  1197  000206  C008  FFDA         	movff	??_isr+7,fsr2h
  1198  00020A  C007  FFD9         	movff	??_isr+6,fsr2l
  1199  00020E  C006  FFE2         	movff	??_isr+5,fsr1h
  1200  000212  C005  FFE1         	movff	??_isr+4,fsr1l
  1201  000216  C004  FFEA         	movff	??_isr+3,fsr0h
  1202  00021A  C003  FFE9         	movff	??_isr+2,fsr0l
  1203  00021E  C002  FFFB         	movff	??_isr+1,pclatu
  1204  000222  C001  FFFA         	movff	??_isr,pclath
  1205  000226  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1206  000228  0011               	retfie		f
  1207  00022A                     __end_of_isr:
  1208                           	opt stack 0
  1209  0000                     pclatu	equ	0xFFB
  1210                           pclath	equ	0xFFA
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           prodh	equ	0xFF4
  1216                           prodl	equ	0xFF3
  1217                           intcon	equ	0xFF2
  1218                           fsr0h	equ	0xFEA
  1219                           fsr0l	equ	0xFE9
  1220                           fsr1h	equ	0xFE2
  1221                           fsr1l	equ	0xFE1
  1222                           fsr2h	equ	0xFDA
  1223                           fsr2l	equ	0xFD9
  1224                           status	equ	0xFD8
  1225                           pclatu	equ	0xFFB
  1226                           pclath	equ	0xFFA
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           prodh	equ	0xFF4
  1232                           prodl	equ	0xFF3
  1233                           intcon	equ	0xFF2
  1234                           fsr0h	equ	0xFEA
  1235                           fsr0l	equ	0xFE9
  1236                           fsr1h	equ	0xFE2
  1237                           fsr1l	equ	0xFE1
  1238                           fsr2h	equ	0xFDA
  1239                           fsr2l	equ	0xFD9
  1240                           status	equ	0xFD8
  1241                           
  1242                           	psect	rparam
  1243  0000                     pclatu	equ	0xFFB
  1244                           pclath	equ	0xFFA
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           prodh	equ	0xFF4
  1250                           prodl	equ	0xFF3
  1251                           intcon	equ	0xFF2
  1252                           fsr0h	equ	0xFEA
  1253                           fsr0l	equ	0xFE9
  1254                           fsr1h	equ	0xFE2
  1255                           fsr1l	equ	0xFE1
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260                           	psect	temp
  1261  00001B                     btemp:
  1262                           	opt stack 0
  1263  00001B                     	ds	1
  1264  0000                     int$flags	set	btemp
  1265                           pclatu	equ	0xFFB
  1266                           pclath	equ	0xFFA
  1267                           tblptru	equ	0xFF8
  1268                           tblptrh	equ	0xFF7
  1269                           tblptrl	equ	0xFF6
  1270                           tablat	equ	0xFF5
  1271                           prodh	equ	0xFF4
  1272                           prodl	equ	0xFF3
  1273                           intcon	equ	0xFF2
  1274                           fsr0h	equ	0xFEA
  1275                           fsr0l	equ	0xFE9
  1276                           fsr1h	equ	0xFE2
  1277                           fsr1l	equ	0xFE1
  1278                           fsr2h	equ	0xFDA
  1279                           fsr2l	equ	0xFD9
  1280                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _setup->_e2prom_r
    _loop->___awmod
    _loop->_atraso_ms

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     762
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                           _e2prom_r
 ---------------------------------------------------------------------------------
 (2) _e2prom_r                                             1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     747
                            ___awmod
                          _atraso_ms
                          _display7s
                           _e2prom_w
 ---------------------------------------------------------------------------------
 (2) _e2prom_w                                             2     1      1      87
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     263
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     382
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___awmod
     _atraso_ms
     _display7s
     _e2prom_w
   _setup
     _e2prom_r

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      1A       1       27.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      20        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 26 20:17:34 2017

                      l1 02AC              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l128 0344                      l803 0124                      l751 00F0  
                    l743 00E8                      l809 0128                      l771 0104  
                    l763 00FC                      l755 00F4                      l747 00EC  
                    l739 00E4                      l791 0118                      l783 0110  
                    l775 0108                      l767 0100                      l759 00F8  
                    l795 011C                      l787 0114                      l779 010C  
                    l973 02A8                      l799 0120                      l977 02C8  
                    l999 023E             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000                      _isr 0008             ___awmod@sign 0014  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1011 0264                     l1003 024A                     l1023 0290  
                   l1015 0278                     l1007 0258                     l1009 0260  
                   l1019 0282                     l1051 0070                     l1049 0068  
                   l1067 009C                     l1091 0328                     l1085 00D4  
                   l1077 00BC                     l1069 00A4                     ?_isr 0001  
                   i2l59 01DA                     _cont 0017                     _main 030C  
                   _loop 0012                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 001B                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ??_isr 0001  
          __CFG_PLLDIV$2 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _EEADR 000FA9                    ?_loop 0001          __end_of___awmod 029A  
            atraso_ms@j1 0013              atraso_ms@j2 0014                    i2l965 01DC  
                  i2l969 01EC                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _PORTD 000F83            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _cont2 0015                    _nivel 001A                    _setup 02D6  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 034C             __end_of_main 032E  
           __end_of_loop 00E0         __end_of_e2prom_r 0370         __end_of_e2prom_w 034C  
            e2prom_w@val 000F                   ??_main 0015                   ??_loop 0015  
          __activetblptr 000002                   _ADCON1 000FC1                   _EEDATA 000FA8  
                 _EECON2 000FA7                   ?_setup 0001                   _TMR0ON 007EAF  
         __CFG_XINST$OFF 000000                ??___awmod 0013          ___awmod@divisor 0011  
        ___awmod@counter 0013                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0356  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_setup 030C             e2prom_r@addr 000F             e2prom_w@addr 0010  
     __size_of_display7s 00AC                  ??_setup 0010       __size_of_atraso_ms 003C  
              ?_e2prom_r 0001                ?_e2prom_w 000F               __pnvCOMRAM 001A  
        __CFG_VREGEN$OFF 000000               ??_e2prom_r 000F               ??_e2prom_w 0010  
                __Hparam 0000                  __Lparam 0000        __end_of_display7s 018C  
                ___awmod 022A        __end_of_atraso_ms 02D6          __CFG_STVREN$OFF 000000  
                __pcinit 034C                  __ramtop 0800                  __ptext0 030C  
                __ptext1 02D6                  __ptext2 0364                  __ptext3 0012  
                __ptext4 032E                  __ptext5 00E0                  __ptext6 029A  
                __ptext7 022A                _T0CONbits 000FD5             __size_of_isr 0222  
       ___awmod@dividend 000F           __pintcode_body 018C     end_of_initialization 0356  
          __Lmediumconst 0000                  int_func 018C                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTCbits 000F82                _TRISAbits 000F92  
              _TRISBbits 000F93               display7s@v 000F               atraso_ms@i 0011  
    start_initialization 034C              __end_of_isr 022A        __size_of_e2prom_r 000C  
      __size_of_e2prom_w 001E         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0015  
              __pintcode 0008                 ?___awmod 000F                _display7s 00E0  
              _atraso_ms 029A           __size_of_setup 0036           atraso_ms@valor 000F  
       __CFG_WDTPS$32768 000000               ?_display7s 0001               ?_atraso_ms 000F  
               _e2prom_r 0364                 _e2prom_w 032E               _EECON1bits 000FA6  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awmod 0070  
               _contador 0019            __size_of_main 0022            __size_of_loop 00CE  
               int$flags 001B              ??_display7s 000F    __CFG_CPUDIV$OSC1_PLL2 000000  
            ??_atraso_ms 0011               _INTCONbits 000FF2                 intlevel2 0000  
