

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 06 15:08:13 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTB	set	3969
    53  0000                     _PORTD	set	3971
    54  0000                     _PIE1bits	set	3997
    55  0000                     _TMR1L	set	4046
    56  0000                     _TMR1H	set	4047
    57  0000                     _T1CONbits	set	4045
    58  0000                     _TMR0L	set	4054
    59  0000                     _TMR0H	set	4055
    60  0000                     _T0CONbits	set	4053
    61  0000                     _PIR1bits	set	3998
    62  0000                     _PORTDbits	set	3971
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TRISE	set	3990
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISC	set	3988
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISA	set	3986
    69  0000                     _ADCON1	set	4033
    70                           
    71                           ; #config settings
    72  0000                     
    73                           	psect	cinit
    74  00016A                     __pcinit:
    75                           	opt stack 0
    76  00016A                     start_initialization:
    77                           	opt stack 0
    78  00016A                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (2 bytes)
    82  00016A  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
    83  00016C  6A15               	clrf	__pbssCOMRAM& (0+255),c
    84  00016E                     end_of_initialization:
    85                           	opt stack 0
    86  00016E                     __end_of__initialization:
    87                           	opt stack 0
    88  00016E  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    89  000170  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    90  000172  0100               	movlb	0
    91  000174  EFA4  F000         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94  000015                     __pbssCOMRAM:
    95                           	opt stack 0
    96  000015                     _intrp2:
    97                           	opt stack 0
    98  000015                     	ds	1
    99  000016                     _intrp1:
   100                           	opt stack 0
   101  000016                     	ds	1
   102                           
   103                           	psect	cstackCOMRAM
   104  000001                     __pcstackCOMRAM:
   105                           	opt stack 0
   106  000001                     atraso_ms@valor:
   107                           	opt stack 0
   108                           
   109                           ; 2 bytes @ 0x0
   110  000001                     	ds	2
   111  000003                     atraso_ms@i:
   112                           	opt stack 0
   113                           
   114                           ; 2 bytes @ 0x2
   115  000003                     	ds	2
   116  000005                     atraso_ms@j1:
   117                           	opt stack 0
   118                           
   119                           ; 1 bytes @ 0x4
   120  000005                     	ds	1
   121  000006                     atraso_ms@j2:
   122                           	opt stack 0
   123                           
   124                           ; 1 bytes @ 0x5
   125  000006                     	ds	1
   126  000007                     ??_isr:
   127                           
   128                           ; 1 bytes @ 0x6
   129  000007                     	ds	14
   130  000015                     
   131                           ; 1 bytes @ 0x14
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 80 in file "config.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   151 ;;      Params:         0       0       0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called:    3
   157 ;; This function calls:
   158 ;;		_loop
   159 ;;		_setup
   160 ;; This function is called by:
   161 ;;		Startup code after reset
   162 ;; This function uses a non-reentrant model
   163 ;;
   164                           
   165                           	psect	text0
   166  000148                     __ptext0:
   167                           	opt stack 0
   168  000148                     _main:
   169                           	opt stack 28
   170                           
   171                           ;config.c: 82: ADCON1=0x0C;
   172                           
   173                           ;incstack = 0
   174  000148  0E0C               	movlw	12
   175  00014A  6EC1               	movwf	4033,c	;volatile
   176                           
   177                           ;config.c: 83: TRISA = 0X00;
   178  00014C  0E00               	movlw	0
   179  00014E  6E92               	movwf	3986,c	;volatile
   180                           
   181                           ;config.c: 84: TRISB = 0X07;
   182  000150  0E07               	movlw	7
   183  000152  6E93               	movwf	3987,c	;volatile
   184                           
   185                           ;config.c: 85: TRISC = 0X01;
   186  000154  0E01               	movlw	1
   187  000156  6E94               	movwf	3988,c	;volatile
   188                           
   189                           ;config.c: 86: TRISD = 0X00;
   190  000158  0E00               	movlw	0
   191  00015A  6E95               	movwf	3989,c	;volatile
   192                           
   193                           ;config.c: 87: TRISE = 0X00;
   194  00015C  0E00               	movlw	0
   195  00015E  6E96               	movwf	3990,c	;volatile
   196                           
   197                           ;config.c: 88: setup();
   198  000160  EC68  F000         	call	_setup	;wreg free
   199  000164                     l19:
   200                           
   201                           ;config.c: 90: {
   202                           ;config.c: 91: loop();
   203  000164  ECBC  F000         	call	_loop	;wreg free
   204  000168  D7FD               	goto	l19
   205  00016A                     __end_of_main:
   206                           	opt stack 0
   207                           
   208 ;; *************** function _setup *****************
   209 ;; Defined at:
   210 ;;		line 28 in file "main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  1    wreg      void 
   217 ;; Registers used:
   218 ;;		wreg, status,2
   219 ;; Tracked objects:
   220 ;;		On entry : 0/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   224 ;;      Params:         0       0       0       0       0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0       0       0       0       0
   226 ;;      Temps:          0       0       0       0       0       0       0       0       0
   227 ;;      Totals:         0       0       0       0       0       0       0       0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels used:    1
   230 ;; Hardware stack levels required when called:    2
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		_main
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238                           	psect	text1
   239  0000D0                     __ptext1:
   240                           	opt stack 0
   241  0000D0                     _setup:
   242                           	opt stack 28
   243                           
   244                           ;main.c: 32: T0CONbits.T0CS = 0;
   245                           
   246                           ;incstack = 0
   247  0000D0  9AD5               	bcf	4053,5,c	;volatile
   248                           
   249                           ;main.c: 33: T0CONbits.PSA = 0;
   250  0000D2  96D5               	bcf	4053,3,c	;volatile
   251                           
   252                           ;main.c: 34: T0CONbits.T0PS2 = 1;
   253  0000D4  84D5               	bsf	4053,2,c	;volatile
   254                           
   255                           ;main.c: 35: T0CONbits.T0PS1 = 1;
   256  0000D6  82D5               	bsf	4053,1,c	;volatile
   257                           
   258                           ;main.c: 36: T0CONbits.T0PS0 = 1;
   259  0000D8  80D5               	bsf	4053,0,c	;volatile
   260                           
   261                           ;main.c: 37: T0CONbits.T08BIT = 0;
   262  0000DA  9CD5               	bcf	4053,6,c	;volatile
   263                           
   264                           ;main.c: 38: TMR0H = 0b11111111;
   265  0000DC  68D7               	setf	4055,c	;volatile
   266                           
   267                           ;main.c: 39: TMR0L = 0b11100001;
   268  0000DE  0EE1               	movlw	225
   269  0000E0  6ED6               	movwf	4054,c	;volatile
   270                           
   271                           ;main.c: 40: INTCONbits.TMR0IF = 0;
   272  0000E2  94F2               	bcf	intcon,2,c	;volatile
   273                           
   274                           ;main.c: 44: T1CONbits.TMR1ON = 0;
   275  0000E4  90CD               	bcf	4045,0,c	;volatile
   276                           
   277                           ;main.c: 45: T1CONbits.TMR1CS = 0;
   278  0000E6  92CD               	bcf	4045,1,c	;volatile
   279                           
   280                           ;main.c: 46: T1CONbits.T1CKPS1 = 1;
   281  0000E8  8ACD               	bsf	4045,5,c	;volatile
   282                           
   283                           ;main.c: 47: T1CONbits.T1CKPS0 = 1;
   284  0000EA  88CD               	bsf	4045,4,c	;volatile
   285                           
   286                           ;main.c: 48: TMR1H = 0xF6;
   287  0000EC  0EF6               	movlw	246
   288  0000EE  6ECF               	movwf	4047,c	;volatile
   289                           
   290                           ;main.c: 49: TMR1L = 0x3C;
   291  0000F0  0E3C               	movlw	60
   292  0000F2  6ECE               	movwf	4046,c	;volatile
   293                           
   294                           ;main.c: 50: PIR1bits.TMR1IF = 0;
   295  0000F4  909E               	bcf	3998,0,c	;volatile
   296                           
   297                           ;main.c: 52: INTCONbits.GIE = 1;
   298  0000F6  8EF2               	bsf	intcon,7,c	;volatile
   299                           
   300                           ;main.c: 53: INTCONbits.PEIE = 1;
   301  0000F8  8CF2               	bsf	intcon,6,c	;volatile
   302                           
   303                           ;main.c: 54: INTCONbits.TMR0IE = 1;
   304  0000FA  8AF2               	bsf	intcon,5,c	;volatile
   305                           
   306                           ;main.c: 55: PIE1bits.TMR1IE = 1;
   307  0000FC  809D               	bsf	3997,0,c	;volatile
   308                           
   309                           ;main.c: 57: T0CONbits.TMR0ON = 1;
   310  0000FE  8ED5               	bsf	4053,7,c	;volatile
   311                           
   312                           ;main.c: 58: T1CONbits.TMR1ON = 1;
   313  000100  80CD               	bsf	4045,0,c	;volatile
   314                           
   315                           ;main.c: 60: PORTD=0x00;
   316  000102  0E00               	movlw	0
   317  000104  6E83               	movwf	3971,c	;volatile
   318                           
   319                           ;main.c: 61: PORTB=0x00;
   320  000106  0E00               	movlw	0
   321  000108  6E81               	movwf	3969,c	;volatile
   322  00010A  0012               	return		;funcret
   323  00010C                     __end_of_setup:
   324                           	opt stack 0
   325                           intcon	equ	0xFF2
   326                           
   327 ;; *************** function _loop *****************
   328 ;; Defined at:
   329 ;;		line 64 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		None
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         0       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used:    1
   349 ;; Hardware stack levels required when called:    2
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text2
   358  000178                     __ptext2:
   359                           	opt stack 0
   360  000178                     _loop:
   361                           	opt stack 28
   362                           
   363                           ;incstack = 0
   364  000178  0012               	return		;funcret
   365  00017A                     __end_of_loop:
   366                           	opt stack 0
   367                           intcon	equ	0xFF2
   368                           
   369 ;; *************** function _isr *****************
   370 ;; Defined at:
   371 ;;		line 6 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0, cstack
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   385 ;;      Params:         0       0       0       0       0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0       0       0       0       0
   387 ;;      Temps:         14       0       0       0       0       0       0       0       0
   388 ;;      Totals:        14       0       0       0       0       0       0       0       0
   389 ;;Total ram usage:       14 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; Hardware stack levels required when called:    1
   392 ;; This function calls:
   393 ;;		_atraso_ms
   394 ;; This function is called by:
   395 ;;		Interrupt level 2
   396 ;; This function uses a non-reentrant model
   397 ;;
   398                           
   399                           	psect	intcode
   400  000008                     __pintcode:
   401                           	opt stack 0
   402  000008                     _isr:
   403                           	opt stack 28
   404                           
   405                           ;incstack = 0
   406  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   407  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   408                           intcon	equ	0xFF2
   409                           
   410                           	psect	intcode_body
   411  000012                     __pintcode_body:
   412                           	opt stack 28
   413  000012                     int_func:
   414                           	opt stack 28
   415  000012  0006               	pop		; remove dummy address from shadow register refresh
   416  000014  CFFA F007          	movff	pclath,??_isr
   417  000018  CFFB F008          	movff	pclatu,??_isr+1
   418  00001C  CFE9 F009          	movff	fsr0l,??_isr+2
   419  000020  CFEA F00A          	movff	fsr0h,??_isr+3
   420  000024  CFE1 F00B          	movff	fsr1l,??_isr+4
   421  000028  CFE2 F00C          	movff	fsr1h,??_isr+5
   422  00002C  CFD9 F00D          	movff	fsr2l,??_isr+6
   423  000030  CFDA F00E          	movff	fsr2h,??_isr+7
   424  000034  CFF3 F00F          	movff	prodl,??_isr+8
   425  000038  CFF4 F010          	movff	prodh,??_isr+9
   426  00003C  CFF6 F011          	movff	tblptrl,??_isr+10
   427  000040  CFF7 F012          	movff	tblptrh,??_isr+11
   428  000044  CFF8 F013          	movff	tblptru,??_isr+12
   429  000048  CFF5 F014          	movff	tablat,??_isr+13
   430                           
   431                           ;main.c: 7: if(INTCONbits.INT0IF){
   432  00004C  A2F2               	btfss	intcon,1,c	;volatile
   433  00004E  D010               	goto	i2l765
   434                           
   435                           ;main.c: 8: intrp1++;
   436  000050  2A16               	incf	_intrp1,f,c
   437                           
   438                           ;main.c: 9: if(intrp1==250){
   439  000052  0EFA               	movlw	250
   440  000054  1816               	xorwf	_intrp1,w,c
   441  000056  A4D8               	btfss	status,2,c
   442  000058  D00A               	goto	i2l763
   443                           
   444                           ;main.c: 10: intrp1=0;
   445  00005A  0E00               	movlw	0
   446  00005C  6E16               	movwf	_intrp1,c
   447                           
   448                           ;main.c: 11: PORTDbits.RD0=1;
   449  00005E  8083               	bsf	3971,0,c	;volatile
   450                           
   451                           ;main.c: 12: atraso_ms(5);
   452  000060  0E00               	movlw	0
   453  000062  6E02               	movwf	atraso_ms@valor+1,c
   454  000064  0E05               	movlw	5
   455  000066  6E01               	movwf	atraso_ms@valor,c
   456  000068  EC86  F000         	call	_atraso_ms	;wreg free
   457                           
   458                           ;main.c: 13: PORTDbits.RD0=0;
   459  00006C  9083               	bcf	3971,0,c	;volatile
   460  00006E                     i2l763:
   461                           
   462                           ;main.c: 14: }
   463                           ;main.c: 15: INTCONbits.TMR0IF=0;
   464  00006E  94F2               	bcf	intcon,2,c	;volatile
   465  000070                     i2l765:
   466                           
   467                           ;main.c: 16: }
   468                           ;main.c: 17: if(PIR1bits.TMR1IF){
   469  000070  A09E               	btfss	3998,0,c	;volatile
   470  000072  D010               	goto	i2l59
   471                           
   472                           ;main.c: 18: intrp2++;
   473  000074  2A15               	incf	_intrp2,f,c
   474                           
   475                           ;main.c: 19: if(intrp2==200){
   476  000076  0EC8               	movlw	200
   477  000078  1815               	xorwf	_intrp2,w,c
   478  00007A  A4D8               	btfss	status,2,c
   479  00007C  D00A               	goto	i2l779
   480                           
   481                           ;main.c: 20: intrp2=0;
   482  00007E  0E00               	movlw	0
   483  000080  6E15               	movwf	_intrp2,c
   484                           
   485                           ;main.c: 21: PORTDbits.RD1=1;
   486  000082  8283               	bsf	3971,1,c	;volatile
   487                           
   488                           ;main.c: 22: atraso_ms(5);
   489  000084  0E00               	movlw	0
   490  000086  6E02               	movwf	atraso_ms@valor+1,c
   491  000088  0E05               	movlw	5
   492  00008A  6E01               	movwf	atraso_ms@valor,c
   493  00008C  EC86  F000         	call	_atraso_ms	;wreg free
   494                           
   495                           ;main.c: 23: PORTDbits.RD1=0;
   496  000090  9283               	bcf	3971,1,c	;volatile
   497  000092                     i2l779:
   498                           
   499                           ;main.c: 24: }
   500                           ;main.c: 25: PIR1bits.TMR1IF=0;
   501  000092  909E               	bcf	3998,0,c	;volatile
   502  000094                     i2l59:
   503  000094  C014  FFF5         	movff	??_isr+13,tablat
   504  000098  C013  FFF8         	movff	??_isr+12,tblptru
   505  00009C  C012  FFF7         	movff	??_isr+11,tblptrh
   506  0000A0  C011  FFF6         	movff	??_isr+10,tblptrl
   507  0000A4  C010  FFF4         	movff	??_isr+9,prodh
   508  0000A8  C00F  FFF3         	movff	??_isr+8,prodl
   509  0000AC  C00E  FFDA         	movff	??_isr+7,fsr2h
   510  0000B0  C00D  FFD9         	movff	??_isr+6,fsr2l
   511  0000B4  C00C  FFE2         	movff	??_isr+5,fsr1h
   512  0000B8  C00B  FFE1         	movff	??_isr+4,fsr1l
   513  0000BC  C00A  FFEA         	movff	??_isr+3,fsr0h
   514  0000C0  C009  FFE9         	movff	??_isr+2,fsr0l
   515  0000C4  C008  FFFB         	movff	??_isr+1,pclatu
   516  0000C8  C007  FFFA         	movff	??_isr,pclath
   517  0000CC  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   518  0000CE  0011               	retfie		f
   519  0000D0                     __end_of_isr:
   520                           	opt stack 0
   521                           pclatu	equ	0xFFB
   522                           pclath	equ	0xFFA
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           prodh	equ	0xFF4
   528                           prodl	equ	0xFF3
   529                           intcon	equ	0xFF2
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           fsr1h	equ	0xFE2
   533                           fsr1l	equ	0xFE1
   534                           fsr2h	equ	0xFDA
   535                           fsr2l	equ	0xFD9
   536                           status	equ	0xFD8
   537                           
   538 ;; *************** function _atraso_ms *****************
   539 ;; Defined at:
   540 ;;		line 29 in file "atraso.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  valor           2    0[COMRAM] unsigned int 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  i               2    2[COMRAM] unsigned int 
   545 ;;  j2              1    5[COMRAM] volatile unsigned char 
   546 ;;  j1              1    4[COMRAM] volatile unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   556 ;;      Params:         2       0       0       0       0       0       0       0       0
   557 ;;      Locals:         4       0       0       0       0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0
   559 ;;      Totals:         6       0       0       0       0       0       0       0       0
   560 ;;Total ram usage:        6 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_isr
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text4
   570  00010C                     __ptext4:
   571                           	opt stack 0
   572  00010C                     _atraso_ms:
   573                           	opt stack 28
   574                           
   575                           ;atraso.c: 31: unsigned int i;
   576                           ;atraso.c: 32: volatile unsigned char j1;
   577                           ;atraso.c: 33: volatile unsigned char j2=0;
   578                           
   579                           ;incstack = 0
   580  00010C  0E00               	movlw	0
   581  00010E  6E06               	movwf	atraso_ms@j2,c	;volatile
   582                           
   583                           ;atraso.c: 35: for (i =0; i< valor; i++)
   584  000110  0E00               	movlw	0
   585  000112  6E04               	movwf	atraso_ms@i+1,c
   586  000114  0E00               	movlw	0
   587  000116  6E03               	movwf	atraso_ms@i,c
   588  000118  D010               	goto	i2l747
   589  00011A                     i2l743:
   590                           
   591                           ;atraso.c: 36: {
   592                           ;atraso.c: 37: j1=(8000000/(4000l*50));
   593  00011A  0E28               	movlw	40
   594  00011C  6E05               	movwf	atraso_ms@j1,c	;volatile
   595  00011E                     l1:
   596  00011E  0E09               	movlw	9	; 20 j1 ;# 
   597  000120  6F06               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
   598  000122  F000               	nop		; 180 j2j1 ;# 
   599  000124  F000               	nop		; 180 j2j1 ;# 
   600  000126  2F06               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
   601                           
   602                           ; 40 2j1 ;# 
   603  000128  EF92  F000         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
   604  00012C  F000               	nop		; 20 j1 ;# 
   605  00012E  2F05               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
   606                           
   607                           ; 2 2 ;# 
   608  000130  EF8F  F000         	goto	l1	; 38 2j1 -2 ;# 
   609  000134  F000               	nop		; 1 1 ;# 
   610  000136  4A03               	infsnz	atraso_ms@i,f,c
   611  000138  2A04               	incf	atraso_ms@i+1,f,c
   612  00013A                     i2l747:
   613  00013A  5001               	movf	atraso_ms@valor,w,c
   614  00013C  5C03               	subwf	atraso_ms@i,w,c
   615  00013E  5002               	movf	atraso_ms@valor+1,w,c
   616  000140  5804               	subwfb	atraso_ms@i+1,w,c
   617  000142  B0D8               	btfsc	status,0,c
   618  000144  0012               	return	
   619  000146  D7E9               	goto	i2l743
   620  000148                     __end_of_atraso_ms:
   621                           	opt stack 0
   622  0000                     pclatu	equ	0xFFB
   623                           pclath	equ	0xFFA
   624                           tblptru	equ	0xFF8
   625                           tblptrh	equ	0xFF7
   626                           tblptrl	equ	0xFF6
   627                           tablat	equ	0xFF5
   628                           prodh	equ	0xFF4
   629                           prodl	equ	0xFF3
   630                           intcon	equ	0xFF2
   631                           fsr0h	equ	0xFEA
   632                           fsr0l	equ	0xFE9
   633                           fsr1h	equ	0xFE2
   634                           fsr1l	equ	0xFE1
   635                           fsr2h	equ	0xFDA
   636                           fsr2l	equ	0xFD9
   637                           status	equ	0xFD8
   638                           pclatu	equ	0xFFB
   639                           pclath	equ	0xFFA
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           prodh	equ	0xFF4
   645                           prodl	equ	0xFF3
   646                           intcon	equ	0xFF2
   647                           fsr0h	equ	0xFEA
   648                           fsr0l	equ	0xFE9
   649                           fsr1h	equ	0xFE2
   650                           fsr1l	equ	0xFE1
   651                           fsr2h	equ	0xFDA
   652                           fsr2l	equ	0xFD9
   653                           status	equ	0xFD8
   654                           
   655                           	psect	rparam
   656  0000                     pclatu	equ	0xFFB
   657                           pclath	equ	0xFFA
   658                           tblptru	equ	0xFF8
   659                           tblptrh	equ	0xFF7
   660                           tblptrl	equ	0xFF6
   661                           tablat	equ	0xFF5
   662                           prodh	equ	0xFF4
   663                           prodl	equ	0xFF3
   664                           intcon	equ	0xFF2
   665                           fsr0h	equ	0xFEA
   666                           fsr0l	equ	0xFE9
   667                           fsr1h	equ	0xFE2
   668                           fsr1l	equ	0xFE1
   669                           fsr2h	equ	0xFDA
   670                           fsr2l	equ	0xFD9
   671                           status	equ	0xFD8
   672                           
   673                           	psect	temp
   674  000017                     btemp:
   675                           	opt stack 0
   676  000017                     	ds	1
   677  0000                     int$flags	set	btemp
   678                           pclatu	equ	0xFFB
   679                           pclath	equ	0xFFA
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           prodh	equ	0xFF4
   685                           prodl	equ	0xFF3
   686                           intcon	equ	0xFF2
   687                           fsr0h	equ	0xFEA
   688                           fsr0l	equ	0xFE9
   689                           fsr1h	equ	0xFE2
   690                           fsr1l	equ	0xFE1
   691                           fsr2h	equ	0xFDA
   692                           fsr2l	equ	0xFD9
   693                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_atraso_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                 14    14      0     134
                                              6 COMRAM    14    14      0
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     134
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
   _setup

 _isr (ROOT)
   _atraso_ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      16       1       23.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      20        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 06 15:08:13 2017

                      l1 011E                       l19 0164              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000                      _isr 0008             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     ?_isr 0001  
                   i2l59 0094                     _main 0148                     _loop 0178  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0017                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_isr 0007            __CFG_PLLDIV$2 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    ?_loop 0001  
            atraso_ms@j1 0005              atraso_ms@j2 0006                    i2l743 011A  
                  i2l747 013A                    i2l763 006E                    i2l765 0070  
                  i2l779 0092                    _TMR0H 000FD7                    _TMR1H 000FCF  
                  _TMR0L 000FD6                    _TMR1L 000FCE                    _PORTB 000F81  
                  _PORTD 000F83            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _setup 00D0                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 016A  
           __end_of_main 016A             __end_of_loop 017A                   ??_main 0015  
                 ??_loop 0015            __activetblptr 000000                   _ADCON1 000FC1  
                 ?_setup 0001           __CFG_XINST$OFF 000000                   _intrp1 0016  
                 _intrp2 0015                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 016E  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_setup 010C                  ??_setup 0015       __size_of_atraso_ms 003C  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
      __end_of_atraso_ms 0148          __CFG_STVREN$OFF 000000                  __pcinit 016A  
                __ramtop 0800                  __ptext0 0148                  __ptext1 00D0  
                __ptext2 0178                  __ptext4 010C                _T0CONbits 000FD5  
              _T1CONbits 000FCD             __size_of_isr 00C8           __pintcode_body 0012  
   end_of_initialization 016E                  int_func 0012                _PORTDbits 000F83  
             atraso_ms@i 0003      start_initialization 016A              __end_of_isr 00D0  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0015                __pintcode 0008  
              _atraso_ms 010C           __size_of_setup 003C           atraso_ms@valor 0001  
               _PIE1bits 000F9D                 _PIR1bits 000F9E         __CFG_WDTPS$32768 000000  
             ?_atraso_ms 0001                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0022            __size_of_loop 0002                 int$flags 0017  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0003               _INTCONbits 000FF2  
               intlevel2 0000  
