

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Apr 24 09:17:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTBbits	set	3969
    51  0000                     _PORTD	set	3971
    52  0000                     _PORTB	set	3969
    53  0000                     _TRISE	set	3990
    54  0000                     _TRISD	set	3989
    55  0000                     _TRISC	set	3988
    56  0000                     _TRISB	set	3987
    57  0000                     _TRISA	set	3986
    58  0000                     _ADCON1	set	4033
    59                           
    60                           ; #config settings
    61  0000                     
    62                           	psect	cinit
    63  007E70                     __pcinit:
    64                           	opt stack 0
    65  007E70                     start_initialization:
    66                           	opt stack 0
    67  007E70                     __initialization:
    68                           	opt stack 0
    69                           
    70                           ; Clear objects allocated to COMRAM (2 bytes)
    71  007E70  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    72  007E72  6A07               	clrf	__pbssCOMRAM& (0+255),c
    73  007E74                     end_of_initialization:
    74                           	opt stack 0
    75  007E74                     __end_of__initialization:
    76                           	opt stack 0
    77  007E74  0E00               	movlw	low (__Lmediumconst shr (0+16))
    78  007E76  6EF8               	movwf	tblptru,c
    79  007E78  0100               	movlb	0
    80  007E7A  EF48  F03F         	goto	_main	;jump to C main() function
    81                           tblptru	equ	0xFF8
    82                           
    83                           	psect	bssCOMRAM
    84  000007                     __pbssCOMRAM:
    85                           	opt stack 0
    86  000007                     _x:
    87                           	opt stack 0
    88  000007                     	ds	2
    89                           tblptru	equ	0xFF8
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	opt stack 0
    94  000001                     display7s@v:
    95                           	opt stack 0
    96  000001                     atraso_ms@valor:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x0
   100  000001                     	ds	2
   101  000003                     atraso_ms@i:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x2
   105  000003                     	ds	2
   106  000005                     atraso_ms@j1:
   107                           	opt stack 0
   108                           
   109                           ; 1 bytes @ 0x4
   110  000005                     	ds	1
   111  000006                     atraso_ms@j2:
   112                           	opt stack 0
   113                           
   114                           ; 1 bytes @ 0x5
   115  000006                     	ds	1
   116  000007                     tblptru	equ	0xFF8
   117                           
   118                           ; 1 bytes @ 0x6
   119 ;;
   120 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   121 ;;
   122 ;; *************** function _main *****************
   123 ;; Defined at:
   124 ;;		line 80 in file "config.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;		None
   127 ;; Auto vars:     Size  Location     Type
   128 ;;		None
   129 ;; Return value:  Size  Location     Type
   130 ;;                  1    wreg      void 
   131 ;; Registers used:
   132 ;;		wreg, status,2, status,0, cstack
   133 ;; Tracked objects:
   134 ;;		On entry : 0/0
   135 ;;		On exit  : 0/0
   136 ;;		Unchanged: 0/0
   137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   138 ;;      Params:         0       0       0       0       0       0       0       0       0
   139 ;;      Locals:         0       0       0       0       0       0       0       0       0
   140 ;;      Temps:          0       0       0       0       0       0       0       0       0
   141 ;;      Totals:         0       0       0       0       0       0       0       0       0
   142 ;;Total ram usage:        0 bytes
   143 ;; Hardware stack levels required when called:    2
   144 ;; This function calls:
   145 ;;		_loop
   146 ;;		_setup
   147 ;; This function is called by:
   148 ;;		Startup code after reset
   149 ;; This function uses a non-reentrant model
   150 ;;
   151                           
   152                           	psect	text0
   153  007E90                     __ptext0:
   154                           	opt stack 0
   155  007E90                     _main:
   156                           	opt stack 29
   157                           
   158                           ;config.c: 82: ADCON1=0x0C;
   159                           
   160                           ;incstack = 0
   161  007E90  0E0C               	movlw	12
   162  007E92  6EC1               	movwf	4033,c	;volatile
   163                           
   164                           ;config.c: 83: TRISA = 0XC7;
   165  007E94  0EC7               	movlw	199
   166  007E96  6E92               	movwf	3986,c	;volatile
   167                           
   168                           ;config.c: 84: TRISB = 0X07;
   169  007E98  0E07               	movlw	7
   170  007E9A  6E93               	movwf	3987,c	;volatile
   171                           
   172                           ;config.c: 85: TRISC = 0X01;
   173  007E9C  0E01               	movlw	1
   174  007E9E  6E94               	movwf	3988,c	;volatile
   175                           
   176                           ;config.c: 86: TRISD = 0X00;
   177  007EA0  0E00               	movlw	0
   178  007EA2  6E95               	movwf	3989,c	;volatile
   179                           
   180                           ;config.c: 87: TRISE = 0X00;
   181  007EA4  0E00               	movlw	0
   182  007EA6  6E96               	movwf	3990,c	;volatile
   183                           
   184                           ;config.c: 88: setup();
   185  007EA8  EC3F  F03F         	call	_setup	;wreg free
   186  007EAC                     l822:
   187                           
   188                           ;config.c: 90: {
   189                           ;config.c: 91: loop();
   190  007EAC  EC77  F03F         	call	_loop	;wreg free
   191  007EB0  D7FD               	goto	l822
   192  007EB2                     __end_of_main:
   193                           	opt stack 0
   194                           tblptru	equ	0xFF8
   195                           
   196 ;; *************** function _setup *****************
   197 ;; Defined at:
   198 ;;		line 8 in file "exerc1.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0
   214 ;;      Temps:          0       0       0       0       0       0       0       0       0
   215 ;;      Totals:         0       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels used:    1
   218 ;; This function calls:
   219 ;;		Nothing
   220 ;; This function is called by:
   221 ;;		_main
   222 ;; This function uses a non-reentrant model
   223 ;;
   224                           
   225                           	psect	text1
   226  007E7E                     __ptext1:
   227                           	opt stack 0
   228  007E7E                     _setup:
   229                           	opt stack 30
   230                           
   231                           ;exerc1.c: 10: PORTB = 0;
   232                           
   233                           ;incstack = 0
   234  007E7E  0E00               	movlw	0
   235  007E80  6E81               	movwf	3969,c	;volatile
   236                           
   237                           ;exerc1.c: 11: PORTD = 0;
   238  007E82  0E00               	movlw	0
   239  007E84  6E83               	movwf	3971,c	;volatile
   240                           
   241                           ;exerc1.c: 14: TRISD = 0;
   242  007E86  0E00               	movlw	0
   243  007E88  6E95               	movwf	3989,c	;volatile
   244                           
   245                           ;exerc1.c: 15: TRISB = 1;
   246  007E8A  0E01               	movlw	1
   247  007E8C  6E93               	movwf	3987,c	;volatile
   248  007E8E  0012               	return		;funcret
   249  007E90                     __end_of_setup:
   250                           	opt stack 0
   251                           tblptru	equ	0xFF8
   252                           
   253 ;; *************** function _loop *****************
   254 ;; Defined at:
   255 ;;		line 18 in file "exerc1.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   269 ;;      Params:         0       0       0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used:    1
   275 ;; Hardware stack levels required when called:    1
   276 ;; This function calls:
   277 ;;		_atraso_ms
   278 ;;		_display7s
   279 ;; This function is called by:
   280 ;;		_main
   281 ;; This function uses a non-reentrant model
   282 ;;
   283                           
   284                           	psect	text2
   285  007EEE                     __ptext2:
   286                           	opt stack 0
   287  007EEE                     _loop:
   288                           	opt stack 29
   289                           
   290                           ;exerc1.c: 20: PORTD = display7s(x);
   291                           
   292                           ;incstack = 0
   293  007EEE  5007               	movf	_x,w,c
   294  007EF0  ECAA  F03F         	call	_display7s
   295  007EF4  6E83               	movwf	3971,c	;volatile
   296                           
   297                           ;exerc1.c: 22: if(PORTBbits.RB0 == 0 )
   298  007EF6  B081               	btfsc	3969,0,c	;volatile
   299  007EF8  D016               	goto	l72
   300                           
   301                           ;exerc1.c: 23: {
   302                           ;exerc1.c: 24: atraso_ms(1);
   303  007EFA  0E00               	movlw	0
   304  007EFC  6E02               	movwf	atraso_ms@valor+1,c
   305  007EFE  0E01               	movlw	1
   306  007F00  6E01               	movwf	atraso_ms@valor,c
   307  007F02  EC59  F03F         	call	_atraso_ms	;wreg free
   308                           
   309                           ;exerc1.c: 25: if(PORTBbits.RB0 == 0 && x<9){
   310  007F06  B081               	btfsc	3969,0,c	;volatile
   311  007F08  D00E               	goto	l72
   312  007F0A  5008               	movf	_x+1,w,c
   313  007F0C  E10C               	bnz	l72
   314  007F0E  0E09               	movlw	9
   315  007F10  5C07               	subwf	_x,w,c
   316  007F12  B0D8               	btfsc	status,0,c
   317  007F14  D008               	goto	l72
   318                           
   319                           ;exerc1.c: 26: x = x + 1;
   320  007F16  0E01               	movlw	1
   321  007F18  2407               	addwf	_x,w,c
   322  007F1A  6E07               	movwf	_x,c
   323  007F1C  0E00               	movlw	0
   324  007F1E  2008               	addwfc	_x+1,w,c
   325  007F20  6E08               	movwf	_x+1,c
   326  007F22                     l74:
   327  007F22  A081               	btfss	3969,0,c	;volatile
   328  007F24  D7FE               	goto	l74
   329  007F26                     l72:
   330                           
   331                           ;exerc1.c: 28: }
   332                           ;exerc1.c: 29: }
   333                           ;exerc1.c: 30: if(PORTBbits.RB1 == 0)
   334  007F26  B281               	btfsc	3969,1,c	;volatile
   335  007F28  0012               	return	
   336                           
   337                           ;exerc1.c: 31: {
   338                           ;exerc1.c: 32: atraso_ms(1);
   339  007F2A  0E00               	movlw	0
   340  007F2C  6E02               	movwf	atraso_ms@valor+1,c
   341  007F2E  0E01               	movlw	1
   342  007F30  6E01               	movwf	atraso_ms@valor,c
   343  007F32  EC59  F03F         	call	_atraso_ms	;wreg free
   344                           
   345                           ;exerc1.c: 33: if(PORTBbits.RB1 == 0 && x>0){
   346  007F36  B281               	btfsc	3969,1,c	;volatile
   347  007F38  0012               	return	
   348  007F3A  5007               	movf	_x,w,c
   349  007F3C  1008               	iorwf	_x+1,w,c
   350  007F3E  B4D8               	btfsc	status,2,c
   351  007F40  0012               	return	
   352                           
   353                           ;exerc1.c: 34: x = x - 1;
   354  007F42  0EFF               	movlw	255
   355  007F44  2407               	addwf	_x,w,c
   356  007F46  6E07               	movwf	_x,c
   357  007F48  0EFF               	movlw	255
   358  007F4A  2008               	addwfc	_x+1,w,c
   359  007F4C  6E08               	movwf	_x+1,c
   360  007F4E                     l79:
   361  007F4E  B281               	btfsc	3969,1,c	;volatile
   362  007F50  0012               	return	
   363  007F52  D7FD               	goto	l79
   364  007F54                     __end_of_loop:
   365                           	opt stack 0
   366                           tblptru	equ	0xFF8
   367                           status	equ	0xFD8
   368                           
   369 ;; *************** function _display7s *****************
   370 ;; Defined at:
   371 ;;		line 27 in file "display7s.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;  v               1    wreg     unsigned char 
   374 ;; Auto vars:     Size  Location     Type
   375 ;;  v               1    0[COMRAM] unsigned char 
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      unsigned char 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   385 ;;      Params:         0       0       0       0       0       0       0       0       0
   386 ;;      Locals:         1       0       0       0       0       0       0       0       0
   387 ;;      Temps:          0       0       0       0       0       0       0       0       0
   388 ;;      Totals:         1       0       0       0       0       0       0       0       0
   389 ;;Total ram usage:        1 bytes
   390 ;; Hardware stack levels used:    1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		_loop
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398                           	psect	text3
   399  007F54                     __ptext3:
   400                           	opt stack 0
   401  007F54                     _display7s:
   402                           	opt stack 29
   403                           
   404                           ;incstack = 0
   405                           ;display7s@v stored from wreg
   406  007F54  6E01               	movwf	display7s@v,c
   407                           
   408                           ;display7s.c: 29: switch(v)
   409  007F56  D022               	goto	l760
   410  007F58                     l690:
   411                           
   412                           ;display7s.c: 32: return 0x3F;
   413  007F58  0E3F               	movlw	63
   414  007F5A  0012               	return	
   415  007F5C                     l694:
   416                           
   417                           ;display7s.c: 34: return 0x06;
   418  007F5C  0E06               	movlw	6
   419  007F5E  0012               	return	
   420  007F60                     l698:
   421                           
   422                           ;display7s.c: 36: return 0x5B;
   423  007F60  0E5B               	movlw	91
   424  007F62  0012               	return	
   425  007F64                     l702:
   426                           
   427                           ;display7s.c: 38: return 0x4F;
   428  007F64  0E4F               	movlw	79
   429  007F66  0012               	return	
   430  007F68                     l706:
   431                           
   432                           ;display7s.c: 40: return 0x66;
   433  007F68  0E66               	movlw	102
   434  007F6A  0012               	return	
   435  007F6C                     l710:
   436                           
   437                           ;display7s.c: 42: return 0x6D;
   438  007F6C  0E6D               	movlw	109
   439  007F6E  0012               	return	
   440  007F70                     l714:
   441                           
   442                           ;display7s.c: 44: return 0x7D;
   443  007F70  0E7D               	movlw	125
   444  007F72  0012               	return	
   445  007F74                     l718:
   446                           
   447                           ;display7s.c: 46: return 0x07;
   448  007F74  0E07               	movlw	7
   449  007F76  0012               	return	
   450  007F78                     l722:
   451                           
   452                           ;display7s.c: 48: return 0x7F;
   453  007F78  0E7F               	movlw	127
   454  007F7A  0012               	return	
   455  007F7C                     l726:
   456                           
   457                           ;display7s.c: 50: return 0x6F;
   458  007F7C  0E6F               	movlw	111
   459  007F7E  0012               	return	
   460  007F80                     l730:
   461                           
   462                           ;display7s.c: 52: return 0x77;
   463  007F80  0E77               	movlw	119
   464  007F82  0012               	return	
   465  007F84                     l734:
   466                           
   467                           ;display7s.c: 54: return 0x7c;
   468  007F84  0E7C               	movlw	124
   469  007F86  0012               	return	
   470  007F88                     l738:
   471                           
   472                           ;display7s.c: 56: return 0x58;
   473  007F88  0E58               	movlw	88
   474  007F8A  0012               	return	
   475  007F8C                     l742:
   476                           
   477                           ;display7s.c: 58: return 0x5E;
   478  007F8C  0E5E               	movlw	94
   479  007F8E  0012               	return	
   480  007F90                     l746:
   481                           
   482                           ;display7s.c: 60: return 0x79;
   483  007F90  0E79               	movlw	121
   484  007F92  0012               	return	
   485  007F94                     l750:
   486                           
   487                           ;display7s.c: 62: return 0x71;
   488  007F94  0E71               	movlw	113
   489  007F96  0012               	return	
   490  007F98                     l754:
   491                           
   492                           ;display7s.c: 64: return 0;
   493  007F98  0E00               	movlw	0
   494                           
   495                           ;display7s.c: 65: }
   496  007F9A  0012               	return	
   497  007F9C                     l760:
   498  007F9C  5001               	movf	display7s@v,w,c
   499                           
   500                           ; Switch size 1, requested type "space"
   501                           ; Number of cases is 16, Range of values is 0 to 15
   502                           ; switch strategies available:
   503                           ; Name         Instructions Cycles
   504                           ; simple_byte           49    25 (average)
   505                           ;	Chosen strategy is simple_byte
   506  007F9E  0A00               	xorlw	0	; case 0
   507  007FA0  B4D8               	btfsc	status,2,c
   508  007FA2  D7DA               	goto	l690
   509  007FA4  0A01               	xorlw	1	; case 1
   510  007FA6  B4D8               	btfsc	status,2,c
   511  007FA8  D7D9               	goto	l694
   512  007FAA  0A03               	xorlw	3	; case 2
   513  007FAC  B4D8               	btfsc	status,2,c
   514  007FAE  D7D8               	goto	l698
   515  007FB0  0A01               	xorlw	1	; case 3
   516  007FB2  B4D8               	btfsc	status,2,c
   517  007FB4  D7D7               	goto	l702
   518  007FB6  0A07               	xorlw	7	; case 4
   519  007FB8  B4D8               	btfsc	status,2,c
   520  007FBA  D7D6               	goto	l706
   521  007FBC  0A01               	xorlw	1	; case 5
   522  007FBE  B4D8               	btfsc	status,2,c
   523  007FC0  D7D5               	goto	l710
   524  007FC2  0A03               	xorlw	3	; case 6
   525  007FC4  B4D8               	btfsc	status,2,c
   526  007FC6  D7D4               	goto	l714
   527  007FC8  0A01               	xorlw	1	; case 7
   528  007FCA  B4D8               	btfsc	status,2,c
   529  007FCC  D7D3               	goto	l718
   530  007FCE  0A0F               	xorlw	15	; case 8
   531  007FD0  B4D8               	btfsc	status,2,c
   532  007FD2  D7D2               	goto	l722
   533  007FD4  0A01               	xorlw	1	; case 9
   534  007FD6  B4D8               	btfsc	status,2,c
   535  007FD8  D7D1               	goto	l726
   536  007FDA  0A03               	xorlw	3	; case 10
   537  007FDC  B4D8               	btfsc	status,2,c
   538  007FDE  D7D0               	goto	l730
   539  007FE0  0A01               	xorlw	1	; case 11
   540  007FE2  B4D8               	btfsc	status,2,c
   541  007FE4  D7CF               	goto	l734
   542  007FE6  0A07               	xorlw	7	; case 12
   543  007FE8  B4D8               	btfsc	status,2,c
   544  007FEA  D7CE               	goto	l738
   545  007FEC  0A01               	xorlw	1	; case 13
   546  007FEE  B4D8               	btfsc	status,2,c
   547  007FF0  D7CD               	goto	l742
   548  007FF2  0A03               	xorlw	3	; case 14
   549  007FF4  B4D8               	btfsc	status,2,c
   550  007FF6  D7CC               	goto	l746
   551  007FF8  0A01               	xorlw	1	; case 15
   552  007FFA  B4D8               	btfsc	status,2,c
   553  007FFC  D7CB               	goto	l750
   554  007FFE  D7CC               	goto	l754
   555  008000                     __end_of_display7s:
   556                           	opt stack 0
   557                           tblptru	equ	0xFF8
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _atraso_ms *****************
   561 ;; Defined at:
   562 ;;		line 29 in file "atraso.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  valor           2    0[COMRAM] unsigned int 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  i               2    2[COMRAM] unsigned int 
   567 ;;  j2              1    5[COMRAM] volatile unsigned char 
   568 ;;  j1              1    4[COMRAM] volatile unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   578 ;;      Params:         2       0       0       0       0       0       0       0       0
   579 ;;      Locals:         4       0       0       0       0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0
   581 ;;      Totals:         6       0       0       0       0       0       0       0       0
   582 ;;Total ram usage:        6 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_loop
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text4
   592  007EB2                     __ptext4:
   593                           	opt stack 0
   594  007EB2                     _atraso_ms:
   595                           	opt stack 29
   596                           
   597                           ;atraso.c: 31: unsigned int i;
   598                           ;atraso.c: 32: volatile unsigned char j1;
   599                           ;atraso.c: 33: volatile unsigned char j2=0;
   600                           
   601                           ;incstack = 0
   602  007EB2  0E00               	movlw	0
   603  007EB4  6E06               	movwf	atraso_ms@j2,c	;volatile
   604                           
   605                           ;atraso.c: 35: for (i =0; i< valor; i++)
   606  007EB6  0E00               	movlw	0
   607  007EB8  6E04               	movwf	atraso_ms@i+1,c
   608  007EBA  0E00               	movlw	0
   609  007EBC  6E03               	movwf	atraso_ms@i,c
   610  007EBE  D010               	goto	l796
   611  007EC0                     l792:
   612                           
   613                           ;atraso.c: 36: {
   614                           ;atraso.c: 37: j1=(8000000/(4000l*50));
   615  007EC0  0E28               	movlw	40
   616  007EC2  6E05               	movwf	atraso_ms@j1,c	;volatile
   617  007EC4                     l1:
   618  007EC4  0E09               	movlw	9	; 20 j1 ;# 
   619  007EC6  6F06               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
   620  007EC8  F000               	nop		; 180 j2j1 ;# 
   621  007ECA  F000               	nop		; 180 j2j1 ;# 
   622  007ECC  2F06               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
   623                           
   624                           ; 40 2j1 ;# 
   625  007ECE  EF65  F03F         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
   626  007ED2  F000               	nop		; 20 j1 ;# 
   627  007ED4  2F05               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
   628                           
   629                           ; 2 2 ;# 
   630  007ED6  EF62  F03F         	goto	l1	; 38 2j1 -2 ;# 
   631  007EDA  F000               	nop		; 1 1 ;# 
   632  007EDC  4A03               	infsnz	atraso_ms@i,f,c
   633  007EDE  2A04               	incf	atraso_ms@i+1,f,c
   634  007EE0                     l796:
   635  007EE0  5001               	movf	atraso_ms@valor,w,c
   636  007EE2  5C03               	subwf	atraso_ms@i,w,c
   637  007EE4  5002               	movf	atraso_ms@valor+1,w,c
   638  007EE6  5804               	subwfb	atraso_ms@i+1,w,c
   639  007EE8  B0D8               	btfsc	status,0,c
   640  007EEA  0012               	return	
   641  007EEC  D7E9               	goto	l792
   642  007EEE                     __end_of_atraso_ms:
   643                           	opt stack 0
   644  0000                     tblptru	equ	0xFF8
   645                           status	equ	0xFD8
   646                           tblptru	equ	0xFF8
   647                           status	equ	0xFD8
   648                           
   649                           	psect	rparam
   650  0000                     tblptru	equ	0xFF8
   651                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_atraso_ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     149
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0     149
                          _atraso_ms
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     134
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _atraso_ms
     _display7s
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      6       8       1        8.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8      20        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Apr 24 09:17:38 2017

                      l1 7EC4                        _x 0007                       l72 7F26  
                     l74 7F22                       l79 7F4E              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l710 7F6C                      l702 7F64  
                    l730 7F80                      l722 7F78                      l714 7F70  
                    l706 7F68                      l750 7F94                      l742 7F8C  
                    l734 7F84                      l726 7F7C                      l718 7F74  
                    l822 7EAC                      l760 7F9C                      l754 7F98  
                    l746 7F90                      l738 7F88                      l690 7F58  
                    l694 7F5C                      l792 7EC0                      l698 7F60  
                    l796 7EE0             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7E90                     _loop 7EEE  
                   start 0000            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$2 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 0001                    ?_loop 0001              atraso_ms@j1 0005  
            atraso_ms@j2 0006                    _PORTB 000F81                    _PORTD 000F83  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _setup 7E7E  
                  status 000FD8           __CFG_ICPRT$OFF 000000          __initialization 7E70  
           __end_of_main 7EB2             __end_of_loop 7F54                   ??_main 0007  
                 ??_loop 0007            __activetblptr 000002                   _ADCON1 000FC1  
                 ?_setup 0001           __CFG_XINST$OFF 000000                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 7E74          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_setup 7E90  
     __size_of_display7s 00AC                  ??_setup 0001       __size_of_atraso_ms 003C  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
      __end_of_display7s 8000        __end_of_atraso_ms 7EEE          __CFG_STVREN$OFF 000000  
                __pcinit 7E70                  __ramtop 0800                  __ptext0 7E90  
                __ptext1 7E7E                  __ptext2 7EEE                  __ptext3 7F54  
                __ptext4 7EB2     end_of_initialization 7E74            __Lmediumconst 0000  
              _PORTBbits 000F81               display7s@v 0001               atraso_ms@i 0003  
    start_initialization 7E70         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0007  
              _display7s 7F54                _atraso_ms 7EB2           __size_of_setup 0012  
         atraso_ms@valor 0001         __CFG_WDTPS$32768 000000               ?_display7s 0001  
             ?_atraso_ms 0001                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0022            __size_of_loop 0066              ??_display7s 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0003  
