

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 05 21:33:21 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000424                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _onoff
    63  000424  01                 	db	1
    64  0000                     _PORTBbits	set	3969
    65  0000                     _PORTAbits	set	3968
    66  0000                     _PORTDbits	set	3971
    67  0000                     _PORTD	set	3971
    68  0000                     _PORTA	set	3968
    69  0000                     _TRISAbits	set	3986
    70  0000                     _PIE1bits	set	3997
    71  0000                     _INTCONbits	set	4082
    72  0000                     _PR2	set	4043
    73  0000                     _TMR2	set	4044
    74  0000                     _T2CONbits	set	4042
    75  0000                     _PIR1bits	set	3998
    76  0000                     _TRISE	set	3990
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISC	set	3988
    79  0000                     _TRISB	set	3987
    80  0000                     _TRISA	set	3986
    81  0000                     _ADCON1	set	4033
    82                           
    83                           ; #config settings
    84  0000                     
    85                           	psect	cinit
    86  0003D8                     __pcinit:
    87                           	opt stack 0
    88  0003D8                     start_initialization:
    89                           	opt stack 0
    90  0003D8                     __initialization:
    91                           	opt stack 0
    92                           
    93                           ; Initialize objects allocated to COMRAM (1 bytes)
    94                           ; load TBLPTR registers with __pidataCOMRAM
    95  0003D8  0E24               	movlw	low __pidataCOMRAM
    96  0003DA  6EF6               	movwf	tblptrl,c
    97  0003DC  0E04               	movlw	high __pidataCOMRAM
    98  0003DE  6EF7               	movwf	tblptrh,c
    99  0003E0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   100  0003E2  6EF8               	movwf	tblptru,c
   101  0003E4  0009               	tblrd		*+	;fetch initializer
   102  0003E6  CFF5 F01C          	movff	tablat,__pdataCOMRAM
   103                           
   104                           ; Clear objects allocated to COMRAM (5 bytes)
   105  0003EA  6A1B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   106  0003EC  6A1A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   107  0003EE  6A19               	clrf	(__pbssCOMRAM+2)& (0+255),c
   108  0003F0  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109  0003F2  6A17               	clrf	__pbssCOMRAM& (0+255),c
   110  0003F4                     end_of_initialization:
   111                           	opt stack 0
   112  0003F4                     __end_of__initialization:
   113                           	opt stack 0
   114  0003F4  901D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  0003F6  921D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  0003F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117  0003FA  6EF8               	movwf	tblptru,c
   118  0003FC  0100               	movlb	0
   119  0003FE  EF01  F002         	goto	_main	;jump to C main() function
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           tblptrl	equ	0xFF6
   123                           tablat	equ	0xFF5
   124                           
   125                           	psect	bssCOMRAM
   126  000017                     __pbssCOMRAM:
   127                           	opt stack 0
   128  000017                     _aux:
   129                           	opt stack 0
   130  000017                     	ds	2
   131  000019                     _auxiliar:
   132                           	opt stack 0
   133  000019                     	ds	1
   134  00001A                     _seg:
   135                           	opt stack 0
   136  00001A                     	ds	1
   137  00001B                     _min:
   138                           	opt stack 0
   139  00001B                     	ds	1
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           
   145                           	psect	dataCOMRAM
   146  00001C                     __pdataCOMRAM:
   147                           	opt stack 0
   148  00001C                     _onoff:
   149                           	opt stack 0
   150  00001C                     	ds	1
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           
   156                           	psect	cstackCOMRAM
   157  000001                     __pcstackCOMRAM:
   158                           	opt stack 0
   159  000001                     ??_isr:
   160                           
   161                           ; 1 bytes @ 0x0
   162  000001                     	ds	14
   163  00000F                     ?___awdiv:
   164                           	opt stack 0
   165  00000F                     ?___awmod:
   166                           	opt stack 0
   167  00000F                     display7s@v:
   168                           	opt stack 0
   169  00000F                     atraso_ms@valor:
   170                           	opt stack 0
   171  00000F                     ___awdiv@dividend:
   172                           	opt stack 0
   173  00000F                     ___awmod@dividend:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0xE
   177  00000F                     	ds	2
   178  000011                     atraso_ms@i:
   179                           	opt stack 0
   180  000011                     ___awdiv@divisor:
   181                           	opt stack 0
   182  000011                     ___awmod@divisor:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x10
   186  000011                     	ds	2
   187  000013                     atraso_ms@j1:
   188                           	opt stack 0
   189  000013                     ___awdiv@counter:
   190                           	opt stack 0
   191  000013                     ___awmod@counter:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x12
   195  000013                     	ds	1
   196  000014                     atraso_ms@j2:
   197                           	opt stack 0
   198  000014                     ___awdiv@sign:
   199                           	opt stack 0
   200  000014                     ___awmod@sign:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x13
   204  000014                     	ds	1
   205  000015                     ___awdiv@quotient:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x14
   209  000015                     	ds	2
   210  000017                     tblptru	equ	0xFF8
   211                           tblptrh	equ	0xFF7
   212                           tblptrl	equ	0xFF6
   213                           tablat	equ	0xFF5
   214                           
   215                           ; 1 bytes @ 0x16
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 80 in file "config.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   235 ;;      Params:         0       0       0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0
   237 ;;      Temps:          0       0       0       0       0       0       0       0       0
   238 ;;      Totals:         0       0       0       0       0       0       0       0       0
   239 ;;Total ram usage:        0 bytes
   240 ;; Hardware stack levels required when called:    3
   241 ;; This function calls:
   242 ;;		_loop
   243 ;;		_setup
   244 ;; This function is called by:
   245 ;;		Startup code after reset
   246 ;; This function uses a non-reentrant model
   247 ;;
   248                           
   249                           	psect	text0
   250  000402                     __ptext0:
   251                           	opt stack 0
   252  000402                     _main:
   253                           	opt stack 28
   254                           
   255                           ;config.c: 82: ADCON1=0x0C;
   256                           
   257                           ;incstack = 0
   258  000402  0E0C               	movlw	12
   259  000404  6EC1               	movwf	4033,c	;volatile
   260                           
   261                           ;config.c: 83: TRISA = 0XC7;
   262  000406  0EC7               	movlw	199
   263  000408  6E92               	movwf	3986,c	;volatile
   264                           
   265                           ;config.c: 84: TRISB = 0X07;
   266  00040A  0E07               	movlw	7
   267  00040C  6E93               	movwf	3987,c	;volatile
   268                           
   269                           ;config.c: 85: TRISC = 0X01;
   270  00040E  0E01               	movlw	1
   271  000410  6E94               	movwf	3988,c	;volatile
   272                           
   273                           ;config.c: 86: TRISD = 0X00;
   274  000412  0E00               	movlw	0
   275  000414  6E95               	movwf	3989,c	;volatile
   276                           
   277                           ;config.c: 87: TRISE = 0X00;
   278  000416  0E00               	movlw	0
   279  000418  6E96               	movwf	3990,c	;volatile
   280                           
   281                           ;config.c: 88: setup();
   282  00041A  ECD6  F001         	call	_setup	;wreg free
   283  00041E                     l1110:
   284                           
   285                           ;config.c: 90: {
   286                           ;config.c: 91: loop();
   287  00041E  EC09  F000         	call	_loop	;wreg free
   288  000422  D7FD               	goto	l1110
   289  000424                     __end_of_main:
   290                           	opt stack 0
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           tblptrl	equ	0xFF6
   294                           tablat	equ	0xFF5
   295                           
   296 ;; *************** function _setup *****************
   297 ;; Defined at:
   298 ;;		line 33 in file "main.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;                  1    wreg      void 
   305 ;; Registers used:
   306 ;;		wreg, status,2
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   312 ;;      Params:         0       0       0       0       0       0       0       0       0
   313 ;;      Locals:         0       0       0       0       0       0       0       0       0
   314 ;;      Temps:          0       0       0       0       0       0       0       0       0
   315 ;;      Totals:         0       0       0       0       0       0       0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    1
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_main
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327  0003AC                     __ptext1:
   328                           	opt stack 0
   329  0003AC                     _setup:
   330                           	opt stack 29
   331                           
   332                           ;main.c: 35: PIR1bits.TMR2IF = 0;
   333                           
   334                           ;incstack = 0
   335  0003AC  929E               	bcf	3998,1,c	;volatile
   336                           
   337                           ;main.c: 37: T2CONbits.T2CKPS1 = 1;
   338  0003AE  82CA               	bsf	4042,1,c	;volatile
   339                           
   340                           ;main.c: 38: T2CONbits.T2CKPS0 = 1;
   341  0003B0  80CA               	bsf	4042,0,c	;volatile
   342                           
   343                           ;main.c: 39: T2CONbits.TOUTPS3 = 1;
   344  0003B2  8CCA               	bsf	4042,6,c	;volatile
   345                           
   346                           ;main.c: 40: T2CONbits.TOUTPS2 = 1;
   347  0003B4  8ACA               	bsf	4042,5,c	;volatile
   348                           
   349                           ;main.c: 41: T2CONbits.TOUTPS1 = 1;
   350  0003B6  88CA               	bsf	4042,4,c	;volatile
   351                           
   352                           ;main.c: 42: T2CONbits.TOUTPS0 = 1;
   353  0003B8  86CA               	bsf	4042,3,c	;volatile
   354                           
   355                           ;main.c: 43: TMR2 =0;
   356  0003BA  0E00               	movlw	0
   357  0003BC  6ECC               	movwf	4044,c	;volatile
   358                           
   359                           ;main.c: 44: PR2 = 100;
   360  0003BE  0E64               	movlw	100
   361  0003C0  6ECB               	movwf	4043,c	;volatile
   362                           
   363                           ;main.c: 46: INTCONbits.GIE = 1;
   364  0003C2  8EF2               	bsf	intcon,7,c	;volatile
   365                           
   366                           ;main.c: 47: INTCONbits.PEIE = 1;
   367  0003C4  8CF2               	bsf	intcon,6,c	;volatile
   368                           
   369                           ;main.c: 48: PIE1bits.TMR2IE = 1;
   370  0003C6  829D               	bsf	3997,1,c	;volatile
   371                           
   372                           ;main.c: 50: T2CONbits.TMR2ON = 1;
   373  0003C8  84CA               	bsf	4042,2,c	;volatile
   374                           
   375                           ;main.c: 53: TRISAbits.RA2=0;
   376  0003CA  9492               	bcf	3986,2,c	;volatile
   377                           
   378                           ;main.c: 54: TRISAbits.RA3=0;
   379  0003CC  9692               	bcf	3986,3,c	;volatile
   380                           
   381                           ;main.c: 55: TRISAbits.RA4=0;
   382  0003CE  9892               	bcf	3986,4,c	;volatile
   383                           
   384                           ;main.c: 56: TRISAbits.RA5=0;
   385  0003D0  9A92               	bcf	3986,5,c	;volatile
   386                           
   387                           ;main.c: 57: PORTA=0;
   388  0003D2  0E00               	movlw	0
   389  0003D4  6E80               	movwf	3968,c	;volatile
   390  0003D6  0012               	return		;funcret
   391  0003D8                     __end_of_setup:
   392                           	opt stack 0
   393                           tblptru	equ	0xFF8
   394                           tblptrh	equ	0xFF7
   395                           tblptrl	equ	0xFF6
   396                           tablat	equ	0xFF5
   397                           intcon	equ	0xFF2
   398                           
   399 ;; *************** function _loop *****************
   400 ;; Defined at:
   401 ;;		line 61 in file "main.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   415 ;;      Params:         0       0       0       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used:    1
   421 ;; Hardware stack levels required when called:    2
   422 ;; This function calls:
   423 ;;		___awdiv
   424 ;;		___awmod
   425 ;;		_atraso_ms
   426 ;;		_display7s
   427 ;; This function is called by:
   428 ;;		_main
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           	psect	text2
   433  000012                     __ptext2:
   434                           	opt stack 0
   435  000012                     _loop:
   436                           	opt stack 28
   437                           
   438                           ;main.c: 62: PORTD=display7s(min/10);
   439                           
   440                           ;incstack = 0
   441  000012  C01B  F00F         	movff	_min,___awdiv@dividend
   442  000016  6A10               	clrf	___awdiv@dividend+1,c
   443  000018  0E00               	movlw	0
   444  00001A  6E12               	movwf	___awdiv@divisor+1,c
   445  00001C  0E0A               	movlw	10
   446  00001E  6E11               	movwf	___awdiv@divisor,c
   447  000020  EC3E  F001         	call	___awdiv	;wreg free
   448  000024  500F               	movf	?___awdiv,w,c
   449  000026  ECE8  F000         	call	_display7s
   450  00002A  6E83               	movwf	3971,c	;volatile
   451                           
   452                           ;main.c: 63: PORTDbits.RD7=onoff;
   453  00002C  B01C               	btfsc	_onoff,0,c
   454  00002E  D002               	bra	u405
   455  000030  9E83               	bcf	3971,7,c	;volatile
   456  000032  D001               	bra	u406
   457  000034                     u405:
   458  000034  8E83               	bsf	3971,7,c	;volatile
   459  000036                     u406:
   460                           
   461                           ;main.c: 64: PORTAbits.RA2=1;
   462  000036  8480               	bsf	3968,2,c	;volatile
   463                           
   464                           ;main.c: 65: atraso_ms(3);
   465  000038  0E00               	movlw	0
   466  00003A  6E10               	movwf	atraso_ms@valor+1,c
   467  00003C  0E03               	movlw	3
   468  00003E  6E0F               	movwf	atraso_ms@valor,c
   469  000040  ECB8  F001         	call	_atraso_ms	;wreg free
   470                           
   471                           ;main.c: 66: PORTAbits.RA2=0;
   472  000044  9480               	bcf	3968,2,c	;volatile
   473                           
   474                           ;main.c: 67: PORTD=display7s(min%10);
   475  000046  C01B  F00F         	movff	_min,___awmod@dividend
   476  00004A  6A10               	clrf	___awmod@dividend+1,c
   477  00004C  0E00               	movlw	0
   478  00004E  6E12               	movwf	___awmod@divisor+1,c
   479  000050  0E0A               	movlw	10
   480  000052  6E11               	movwf	___awmod@divisor,c
   481  000054  EC80  F001         	call	___awmod	;wreg free
   482  000058  500F               	movf	?___awmod,w,c
   483  00005A  ECE8  F000         	call	_display7s
   484  00005E  6E83               	movwf	3971,c	;volatile
   485                           
   486                           ;main.c: 68: PORTDbits.RD7=onoff;
   487  000060  B01C               	btfsc	_onoff,0,c
   488  000062  D002               	bra	u415
   489  000064  9E83               	bcf	3971,7,c	;volatile
   490  000066  D001               	bra	u416
   491  000068                     u415:
   492  000068  8E83               	bsf	3971,7,c	;volatile
   493  00006A                     u416:
   494                           
   495                           ;main.c: 69: PORTAbits.RA3=1;
   496  00006A  8680               	bsf	3968,3,c	;volatile
   497                           
   498                           ;main.c: 70: atraso_ms(3);
   499  00006C  0E00               	movlw	0
   500  00006E  6E10               	movwf	atraso_ms@valor+1,c
   501  000070  0E03               	movlw	3
   502  000072  6E0F               	movwf	atraso_ms@valor,c
   503  000074  ECB8  F001         	call	_atraso_ms	;wreg free
   504                           
   505                           ;main.c: 71: PORTAbits.RA3=0;
   506  000078  9680               	bcf	3968,3,c	;volatile
   507                           
   508                           ;main.c: 72: PORTD=display7s(seg/10);
   509  00007A  C01A  F00F         	movff	_seg,___awdiv@dividend
   510  00007E  6A10               	clrf	___awdiv@dividend+1,c
   511  000080  0E00               	movlw	0
   512  000082  6E12               	movwf	___awdiv@divisor+1,c
   513  000084  0E0A               	movlw	10
   514  000086  6E11               	movwf	___awdiv@divisor,c
   515  000088  EC3E  F001         	call	___awdiv	;wreg free
   516  00008C  500F               	movf	?___awdiv,w,c
   517  00008E  ECE8  F000         	call	_display7s
   518  000092  6E83               	movwf	3971,c	;volatile
   519                           
   520                           ;main.c: 73: PORTDbits.RD7=onoff;
   521  000094  B01C               	btfsc	_onoff,0,c
   522  000096  D002               	bra	u425
   523  000098  9E83               	bcf	3971,7,c	;volatile
   524  00009A  D001               	bra	u426
   525  00009C                     u425:
   526  00009C  8E83               	bsf	3971,7,c	;volatile
   527  00009E                     u426:
   528                           
   529                           ;main.c: 74: PORTAbits.RA4=1;
   530  00009E  8880               	bsf	3968,4,c	;volatile
   531                           
   532                           ;main.c: 75: atraso_ms(3);
   533  0000A0  0E00               	movlw	0
   534  0000A2  6E10               	movwf	atraso_ms@valor+1,c
   535  0000A4  0E03               	movlw	3
   536  0000A6  6E0F               	movwf	atraso_ms@valor,c
   537  0000A8  ECB8  F001         	call	_atraso_ms	;wreg free
   538                           
   539                           ;main.c: 76: PORTAbits.RA4=0;
   540  0000AC  9880               	bcf	3968,4,c	;volatile
   541                           
   542                           ;main.c: 77: PORTD=display7s(seg%10);
   543  0000AE  C01A  F00F         	movff	_seg,___awmod@dividend
   544  0000B2  6A10               	clrf	___awmod@dividend+1,c
   545  0000B4  0E00               	movlw	0
   546  0000B6  6E12               	movwf	___awmod@divisor+1,c
   547  0000B8  0E0A               	movlw	10
   548  0000BA  6E11               	movwf	___awmod@divisor,c
   549  0000BC  EC80  F001         	call	___awmod	;wreg free
   550  0000C0  500F               	movf	?___awmod,w,c
   551  0000C2  ECE8  F000         	call	_display7s
   552  0000C6  6E83               	movwf	3971,c	;volatile
   553                           
   554                           ;main.c: 78: PORTDbits.RD7=onoff;
   555  0000C8  B01C               	btfsc	_onoff,0,c
   556  0000CA  D002               	bra	u435
   557  0000CC  9E83               	bcf	3971,7,c	;volatile
   558  0000CE  D001               	bra	u436
   559  0000D0                     u435:
   560  0000D0  8E83               	bsf	3971,7,c	;volatile
   561  0000D2                     u436:
   562                           
   563                           ;main.c: 79: PORTAbits.RA5=1;
   564  0000D2  8A80               	bsf	3968,5,c	;volatile
   565                           
   566                           ;main.c: 80: atraso_ms(3);
   567  0000D4  0E00               	movlw	0
   568  0000D6  6E10               	movwf	atraso_ms@valor+1,c
   569  0000D8  0E03               	movlw	3
   570  0000DA  6E0F               	movwf	atraso_ms@valor,c
   571  0000DC  ECB8  F001         	call	_atraso_ms	;wreg free
   572                           
   573                           ;main.c: 81: PORTAbits.RA5=0;
   574  0000E0  9A80               	bcf	3968,5,c	;volatile
   575                           
   576                           ;main.c: 82: if(PORTBbits.RB0==0){
   577  0000E2  B081               	btfsc	3969,0,c	;volatile
   578  0000E4  D014               	goto	l1100
   579                           
   580                           ;main.c: 83: if(auxiliar){
   581  0000E6  5019               	movf	_auxiliar,w,c
   582  0000E8  B4D8               	btfsc	status,2,c
   583  0000EA  D011               	goto	l1100
   584                           
   585                           ;main.c: 84: atraso_ms(6);
   586  0000EC  0E00               	movlw	0
   587  0000EE  6E10               	movwf	atraso_ms@valor+1,c
   588  0000F0  0E06               	movlw	6
   589  0000F2  6E0F               	movwf	atraso_ms@valor,c
   590  0000F4  ECB8  F001         	call	_atraso_ms	;wreg free
   591                           
   592                           ;main.c: 85: if(PORTBbits.RB0 == 0){
   593  0000F8  B081               	btfsc	3969,0,c	;volatile
   594  0000FA  D009               	goto	l1100
   595                           
   596                           ;main.c: 86: auxiliar=0;
   597  0000FC  0E00               	movlw	0
   598  0000FE  6E19               	movwf	_auxiliar,c
   599                           
   600                           ;main.c: 87: T2CONbits.TMR2ON ^=1;
   601  000100  74CA               	btg	4042,2,c	;volatile
   602                           
   603                           ;main.c: 88: if(T2CONbits.TMR2ON==1){
   604  000102  A4CA               	btfss	4042,2,c	;volatile
   605  000104  D002               	goto	l1098
   606                           
   607                           ;main.c: 89: onoff=1;
   608  000106  0E01               	movlw	1
   609  000108  D001               	goto	L1
   610  00010A                     l1098:
   611  00010A  0E00               	movlw	0
   612  00010C                     L1:
   613  00010C  6E1C               	movwf	_onoff,c
   614  00010E                     l1100:
   615                           
   616                           ;main.c: 91: }
   617                           ;main.c: 92: }
   618                           ;main.c: 93: }
   619                           ;main.c: 95: if(PORTBbits.RB1==0){
   620  00010E  B281               	btfsc	3969,1,c	;volatile
   621  000110  D005               	goto	l1104
   622                           
   623                           ;main.c: 96: seg=0;
   624  000112  0E00               	movlw	0
   625  000114  6E1A               	movwf	_seg,c
   626                           
   627                           ;main.c: 97: min=0;
   628  000116  0E00               	movlw	0
   629  000118  6E1B               	movwf	_min,c
   630                           
   631                           ;main.c: 98: }else auxiliar=1;
   632  00011A  0012               	return	
   633  00011C                     l1104:
   634  00011C  0E01               	movlw	1
   635  00011E  6E19               	movwf	_auxiliar,c
   636  000120  0012               	return	
   637  000122                     __end_of_loop:
   638                           	opt stack 0
   639                           tblptru	equ	0xFF8
   640                           tblptrh	equ	0xFF7
   641                           tblptrl	equ	0xFF6
   642                           tablat	equ	0xFF5
   643                           intcon	equ	0xFF2
   644                           status	equ	0xFD8
   645                           
   646 ;; *************** function _display7s *****************
   647 ;; Defined at:
   648 ;;		line 27 in file "display7s.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  v               1    wreg     unsigned char 
   651 ;; Auto vars:     Size  Location     Type
   652 ;;  v               1   14[COMRAM] unsigned char 
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      unsigned char 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   662 ;;      Params:         0       0       0       0       0       0       0       0       0
   663 ;;      Locals:         1       0       0       0       0       0       0       0       0
   664 ;;      Temps:          0       0       0       0       0       0       0       0       0
   665 ;;      Totals:         1       0       0       0       0       0       0       0       0
   666 ;;Total ram usage:        1 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_loop
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text3
   677  0001D0                     __ptext3:
   678                           	opt stack 0
   679  0001D0                     _display7s:
   680                           	opt stack 28
   681                           
   682                           ;incstack = 0
   683                           ;display7s@v stored from wreg
   684  0001D0  6E0F               	movwf	display7s@v,c
   685                           
   686                           ;display7s.c: 29: switch(v)
   687  0001D2  D022               	goto	l786
   688  0001D4                     l716:
   689                           
   690                           ;display7s.c: 32: return 0x3F;
   691  0001D4  0E3F               	movlw	63
   692  0001D6  0012               	return	
   693  0001D8                     l720:
   694                           
   695                           ;display7s.c: 34: return 0x06;
   696  0001D8  0E06               	movlw	6
   697  0001DA  0012               	return	
   698  0001DC                     l724:
   699                           
   700                           ;display7s.c: 36: return 0x5B;
   701  0001DC  0E5B               	movlw	91
   702  0001DE  0012               	return	
   703  0001E0                     l728:
   704                           
   705                           ;display7s.c: 38: return 0x4F;
   706  0001E0  0E4F               	movlw	79
   707  0001E2  0012               	return	
   708  0001E4                     l732:
   709                           
   710                           ;display7s.c: 40: return 0x66;
   711  0001E4  0E66               	movlw	102
   712  0001E6  0012               	return	
   713  0001E8                     l736:
   714                           
   715                           ;display7s.c: 42: return 0x6D;
   716  0001E8  0E6D               	movlw	109
   717  0001EA  0012               	return	
   718  0001EC                     l740:
   719                           
   720                           ;display7s.c: 44: return 0x7D;
   721  0001EC  0E7D               	movlw	125
   722  0001EE  0012               	return	
   723  0001F0                     l744:
   724                           
   725                           ;display7s.c: 46: return 0x07;
   726  0001F0  0E07               	movlw	7
   727  0001F2  0012               	return	
   728  0001F4                     l748:
   729                           
   730                           ;display7s.c: 48: return 0x7F;
   731  0001F4  0E7F               	movlw	127
   732  0001F6  0012               	return	
   733  0001F8                     l752:
   734                           
   735                           ;display7s.c: 50: return 0x6F;
   736  0001F8  0E6F               	movlw	111
   737  0001FA  0012               	return	
   738  0001FC                     l756:
   739                           
   740                           ;display7s.c: 52: return 0x77;
   741  0001FC  0E77               	movlw	119
   742  0001FE  0012               	return	
   743  000200                     l760:
   744                           
   745                           ;display7s.c: 54: return 0x7c;
   746  000200  0E7C               	movlw	124
   747  000202  0012               	return	
   748  000204                     l764:
   749                           
   750                           ;display7s.c: 56: return 0x58;
   751  000204  0E58               	movlw	88
   752  000206  0012               	return	
   753  000208                     l768:
   754                           
   755                           ;display7s.c: 58: return 0x5E;
   756  000208  0E5E               	movlw	94
   757  00020A  0012               	return	
   758  00020C                     l772:
   759                           
   760                           ;display7s.c: 60: return 0x79;
   761  00020C  0E79               	movlw	121
   762  00020E  0012               	return	
   763  000210                     l776:
   764                           
   765                           ;display7s.c: 62: return 0x71;
   766  000210  0E71               	movlw	113
   767  000212  0012               	return	
   768  000214                     l780:
   769                           
   770                           ;display7s.c: 64: return 0;
   771  000214  0E00               	movlw	0
   772                           
   773                           ;display7s.c: 65: }
   774  000216  0012               	return	
   775  000218                     l786:
   776  000218  500F               	movf	display7s@v,w,c
   777                           
   778                           ; Switch size 1, requested type "space"
   779                           ; Number of cases is 16, Range of values is 0 to 15
   780                           ; switch strategies available:
   781                           ; Name         Instructions Cycles
   782                           ; simple_byte           49    25 (average)
   783                           ;	Chosen strategy is simple_byte
   784  00021A  0A00               	xorlw	0	; case 0
   785  00021C  B4D8               	btfsc	status,2,c
   786  00021E  D7DA               	goto	l716
   787  000220  0A01               	xorlw	1	; case 1
   788  000222  B4D8               	btfsc	status,2,c
   789  000224  D7D9               	goto	l720
   790  000226  0A03               	xorlw	3	; case 2
   791  000228  B4D8               	btfsc	status,2,c
   792  00022A  D7D8               	goto	l724
   793  00022C  0A01               	xorlw	1	; case 3
   794  00022E  B4D8               	btfsc	status,2,c
   795  000230  D7D7               	goto	l728
   796  000232  0A07               	xorlw	7	; case 4
   797  000234  B4D8               	btfsc	status,2,c
   798  000236  D7D6               	goto	l732
   799  000238  0A01               	xorlw	1	; case 5
   800  00023A  B4D8               	btfsc	status,2,c
   801  00023C  D7D5               	goto	l736
   802  00023E  0A03               	xorlw	3	; case 6
   803  000240  B4D8               	btfsc	status,2,c
   804  000242  D7D4               	goto	l740
   805  000244  0A01               	xorlw	1	; case 7
   806  000246  B4D8               	btfsc	status,2,c
   807  000248  D7D3               	goto	l744
   808  00024A  0A0F               	xorlw	15	; case 8
   809  00024C  B4D8               	btfsc	status,2,c
   810  00024E  D7D2               	goto	l748
   811  000250  0A01               	xorlw	1	; case 9
   812  000252  B4D8               	btfsc	status,2,c
   813  000254  D7D1               	goto	l752
   814  000256  0A03               	xorlw	3	; case 10
   815  000258  B4D8               	btfsc	status,2,c
   816  00025A  D7D0               	goto	l756
   817  00025C  0A01               	xorlw	1	; case 11
   818  00025E  B4D8               	btfsc	status,2,c
   819  000260  D7CF               	goto	l760
   820  000262  0A07               	xorlw	7	; case 12
   821  000264  B4D8               	btfsc	status,2,c
   822  000266  D7CE               	goto	l764
   823  000268  0A01               	xorlw	1	; case 13
   824  00026A  B4D8               	btfsc	status,2,c
   825  00026C  D7CD               	goto	l768
   826  00026E  0A03               	xorlw	3	; case 14
   827  000270  B4D8               	btfsc	status,2,c
   828  000272  D7CC               	goto	l772
   829  000274  0A01               	xorlw	1	; case 15
   830  000276  B4D8               	btfsc	status,2,c
   831  000278  D7CB               	goto	l776
   832  00027A  D7CC               	goto	l780
   833  00027C                     __end_of_display7s:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           intcon	equ	0xFF2
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _atraso_ms *****************
   843 ;; Defined at:
   844 ;;		line 29 in file "atraso.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  valor           2   14[COMRAM] unsigned int 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  i               2   16[COMRAM] unsigned int 
   849 ;;  j2              1   19[COMRAM] volatile unsigned char 
   850 ;;  j1              1   18[COMRAM] volatile unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         2       0       0       0       0       0       0       0       0
   861 ;;      Locals:         4       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         6       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        6 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_loop
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text4
   875  000370                     __ptext4:
   876                           	opt stack 0
   877  000370                     _atraso_ms:
   878                           	opt stack 28
   879                           
   880                           ;atraso.c: 31: unsigned int i;
   881                           ;atraso.c: 32: volatile unsigned char j1;
   882                           ;atraso.c: 33: volatile unsigned char j2=0;
   883                           
   884                           ;incstack = 0
   885  000370  0E00               	movlw	0
   886  000372  6E14               	movwf	atraso_ms@j2,c	;volatile
   887                           
   888                           ;atraso.c: 35: for (i =0; i< valor; i++)
   889  000374  0E00               	movlw	0
   890  000376  6E12               	movwf	atraso_ms@i+1,c
   891  000378  0E00               	movlw	0
   892  00037A  6E11               	movwf	atraso_ms@i,c
   893  00037C  D010               	goto	l974
   894  00037E                     l970:
   895                           
   896                           ;atraso.c: 36: {
   897                           ;atraso.c: 37: j1=(8000000/(4000l*50));
   898  00037E  0E28               	movlw	40
   899  000380  6E13               	movwf	atraso_ms@j1,c	;volatile
   900  000382                     l1:
   901  000382  0E09               	movlw	9	; 20 j1 ;# 
   902  000384  6F14               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
   903  000386  F000               	nop		; 180 j2j1 ;# 
   904  000388  F000               	nop		; 180 j2j1 ;# 
   905  00038A  2F14               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
   906                           
   907                           ; 40 2j1 ;# 
   908  00038C  EFC4  F001         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
   909  000390  F000               	nop		; 20 j1 ;# 
   910  000392  2F13               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
   911                           
   912                           ; 2 2 ;# 
   913  000394  EFC1  F001         	goto	l1	; 38 2j1 -2 ;# 
   914  000398  F000               	nop		; 1 1 ;# 
   915  00039A  4A11               	infsnz	atraso_ms@i,f,c
   916  00039C  2A12               	incf	atraso_ms@i+1,f,c
   917  00039E                     l974:
   918  00039E  500F               	movf	atraso_ms@valor,w,c
   919  0003A0  5C11               	subwf	atraso_ms@i,w,c
   920  0003A2  5010               	movf	atraso_ms@valor+1,w,c
   921  0003A4  5812               	subwfb	atraso_ms@i+1,w,c
   922  0003A6  B0D8               	btfsc	status,0,c
   923  0003A8  0012               	return	
   924  0003AA  D7E9               	goto	l970
   925  0003AC                     __end_of_atraso_ms:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           intcon	equ	0xFF2
   932                           status	equ	0xFD8
   933                           
   934 ;; *************** function ___awmod *****************
   935 ;; Defined at:
   936 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  dividend        2   14[COMRAM] int 
   939 ;;  divisor         2   16[COMRAM] int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  sign            1   19[COMRAM] unsigned char 
   942 ;;  counter         1   18[COMRAM] unsigned char 
   943 ;; Return value:  Size  Location     Type
   944 ;;                  2   14[COMRAM] int 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   952 ;;      Params:         4       0       0       0       0       0       0       0       0
   953 ;;      Locals:         2       0       0       0       0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0       0       0
   955 ;;      Totals:         6       0       0       0       0       0       0       0       0
   956 ;;Total ram usage:        6 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_loop
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text5
   967  000300                     __ptext5:
   968                           	opt stack 0
   969  000300                     ___awmod:
   970                           	opt stack 28
   971                           
   972                           ;incstack = 0
   973  000300  0E00               	movlw	0
   974  000302  6E14               	movwf	___awmod@sign,c
   975  000304  AE10               	btfss	___awmod@dividend+1,7,c
   976  000306  D006               	goto	l1028
   977  000308  6C0F               	negf	___awmod@dividend,c
   978  00030A  1E10               	comf	___awmod@dividend+1,f,c
   979  00030C  B0D8               	btfsc	status,0,c
   980  00030E  2A10               	incf	___awmod@dividend+1,f,c
   981  000310  0E01               	movlw	1
   982  000312  6E14               	movwf	___awmod@sign,c
   983  000314                     l1028:
   984  000314  AE12               	btfss	___awmod@divisor+1,7,c
   985  000316  D004               	goto	l1032
   986  000318  6C11               	negf	___awmod@divisor,c
   987  00031A  1E12               	comf	___awmod@divisor+1,f,c
   988  00031C  B0D8               	btfsc	status,0,c
   989  00031E  2A12               	incf	___awmod@divisor+1,f,c
   990  000320                     l1032:
   991  000320  5011               	movf	___awmod@divisor,w,c
   992  000322  1012               	iorwf	___awmod@divisor+1,w,c
   993  000324  B4D8               	btfsc	status,2,c
   994  000326  D018               	goto	l1048
   995  000328  0E01               	movlw	1
   996  00032A  6E13               	movwf	___awmod@counter,c
   997  00032C  D004               	goto	l1038
   998  00032E                     l1036:
   999  00032E  90D8               	bcf	status,0,c
  1000  000330  3611               	rlcf	___awmod@divisor,f,c
  1001  000332  3612               	rlcf	___awmod@divisor+1,f,c
  1002  000334  2A13               	incf	___awmod@counter,f,c
  1003  000336                     l1038:
  1004  000336  AE12               	btfss	___awmod@divisor+1,7,c
  1005  000338  D7FA               	goto	l1036
  1006  00033A                     l1040:
  1007  00033A  5011               	movf	___awmod@divisor,w,c
  1008  00033C  5C0F               	subwf	___awmod@dividend,w,c
  1009  00033E  5012               	movf	___awmod@divisor+1,w,c
  1010  000340  5810               	subwfb	___awmod@dividend+1,w,c
  1011  000342  A0D8               	btfss	status,0,c
  1012  000344  D004               	goto	l1044
  1013  000346  5011               	movf	___awmod@divisor,w,c
  1014  000348  5E0F               	subwf	___awmod@dividend,f,c
  1015  00034A  5012               	movf	___awmod@divisor+1,w,c
  1016  00034C  5A10               	subwfb	___awmod@dividend+1,f,c
  1017  00034E                     l1044:
  1018  00034E  90D8               	bcf	status,0,c
  1019  000350  3212               	rrcf	___awmod@divisor+1,f,c
  1020  000352  3211               	rrcf	___awmod@divisor,f,c
  1021  000354  2E13               	decfsz	___awmod@counter,f,c
  1022  000356  D7F1               	goto	l1040
  1023  000358                     l1048:
  1024  000358  5014               	movf	___awmod@sign,w,c
  1025  00035A  B4D8               	btfsc	status,2,c
  1026  00035C  D004               	goto	l1052
  1027  00035E  6C0F               	negf	___awmod@dividend,c
  1028  000360  1E10               	comf	___awmod@dividend+1,f,c
  1029  000362  B0D8               	btfsc	status,0,c
  1030  000364  2A10               	incf	___awmod@dividend+1,f,c
  1031  000366                     l1052:
  1032  000366  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1033  00036A  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1034  00036E  0012               	return	
  1035  000370                     __end_of___awmod:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           intcon	equ	0xFF2
  1042                           status	equ	0xFD8
  1043                           
  1044 ;; *************** function ___awdiv *****************
  1045 ;; Defined at:
  1046 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  dividend        2   14[COMRAM] int 
  1049 ;;  divisor         2   16[COMRAM] int 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  quotient        2   20[COMRAM] int 
  1052 ;;  sign            1   19[COMRAM] unsigned char 
  1053 ;;  counter         1   18[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2   14[COMRAM] int 
  1056 ;; Registers used:
  1057 ;;		wreg, status,2, status,0
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1063 ;;      Params:         4       0       0       0       0       0       0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1066 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1067 ;;Total ram usage:        8 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_loop
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text6
  1078  00027C                     __ptext6:
  1079                           	opt stack 0
  1080  00027C                     ___awdiv:
  1081                           	opt stack 28
  1082                           
  1083                           ;incstack = 0
  1084  00027C  0E00               	movlw	0
  1085  00027E  6E14               	movwf	___awdiv@sign,c
  1086  000280  AE12               	btfss	___awdiv@divisor+1,7,c
  1087  000282  D006               	goto	l984
  1088  000284  6C11               	negf	___awdiv@divisor,c
  1089  000286  1E12               	comf	___awdiv@divisor+1,f,c
  1090  000288  B0D8               	btfsc	status,0,c
  1091  00028A  2A12               	incf	___awdiv@divisor+1,f,c
  1092  00028C  0E01               	movlw	1
  1093  00028E  6E14               	movwf	___awdiv@sign,c
  1094  000290                     l984:
  1095  000290  AE10               	btfss	___awdiv@dividend+1,7,c
  1096  000292  D006               	goto	l990
  1097  000294  6C0F               	negf	___awdiv@dividend,c
  1098  000296  1E10               	comf	___awdiv@dividend+1,f,c
  1099  000298  B0D8               	btfsc	status,0,c
  1100  00029A  2A10               	incf	___awdiv@dividend+1,f,c
  1101  00029C  0E01               	movlw	1
  1102  00029E  1A14               	xorwf	___awdiv@sign,f,c
  1103  0002A0                     l990:
  1104  0002A0  0E00               	movlw	0
  1105  0002A2  6E16               	movwf	___awdiv@quotient+1,c
  1106  0002A4  0E00               	movlw	0
  1107  0002A6  6E15               	movwf	___awdiv@quotient,c
  1108  0002A8  5011               	movf	___awdiv@divisor,w,c
  1109  0002AA  1012               	iorwf	___awdiv@divisor+1,w,c
  1110  0002AC  B4D8               	btfsc	status,2,c
  1111  0002AE  D01C               	goto	l1012
  1112  0002B0  0E01               	movlw	1
  1113  0002B2  6E13               	movwf	___awdiv@counter,c
  1114  0002B4  D004               	goto	l998
  1115  0002B6                     l996:
  1116  0002B6  90D8               	bcf	status,0,c
  1117  0002B8  3611               	rlcf	___awdiv@divisor,f,c
  1118  0002BA  3612               	rlcf	___awdiv@divisor+1,f,c
  1119  0002BC  2A13               	incf	___awdiv@counter,f,c
  1120  0002BE                     l998:
  1121  0002BE  AE12               	btfss	___awdiv@divisor+1,7,c
  1122  0002C0  D7FA               	goto	l996
  1123  0002C2                     l1000:
  1124  0002C2  90D8               	bcf	status,0,c
  1125  0002C4  3615               	rlcf	___awdiv@quotient,f,c
  1126  0002C6  3616               	rlcf	___awdiv@quotient+1,f,c
  1127  0002C8  5011               	movf	___awdiv@divisor,w,c
  1128  0002CA  5C0F               	subwf	___awdiv@dividend,w,c
  1129  0002CC  5012               	movf	___awdiv@divisor+1,w,c
  1130  0002CE  5810               	subwfb	___awdiv@dividend+1,w,c
  1131  0002D0  A0D8               	btfss	status,0,c
  1132  0002D2  D005               	goto	l1008
  1133  0002D4  5011               	movf	___awdiv@divisor,w,c
  1134  0002D6  5E0F               	subwf	___awdiv@dividend,f,c
  1135  0002D8  5012               	movf	___awdiv@divisor+1,w,c
  1136  0002DA  5A10               	subwfb	___awdiv@dividend+1,f,c
  1137  0002DC  8015               	bsf	___awdiv@quotient,0,c
  1138  0002DE                     l1008:
  1139  0002DE  90D8               	bcf	status,0,c
  1140  0002E0  3212               	rrcf	___awdiv@divisor+1,f,c
  1141  0002E2  3211               	rrcf	___awdiv@divisor,f,c
  1142  0002E4  2E13               	decfsz	___awdiv@counter,f,c
  1143  0002E6  D7ED               	goto	l1000
  1144  0002E8                     l1012:
  1145  0002E8  5014               	movf	___awdiv@sign,w,c
  1146  0002EA  B4D8               	btfsc	status,2,c
  1147  0002EC  D004               	goto	l1016
  1148  0002EE  6C15               	negf	___awdiv@quotient,c
  1149  0002F0  1E16               	comf	___awdiv@quotient+1,f,c
  1150  0002F2  B0D8               	btfsc	status,0,c
  1151  0002F4  2A16               	incf	___awdiv@quotient+1,f,c
  1152  0002F6                     l1016:
  1153  0002F6  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  1154  0002FA  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1155  0002FE  0012               	return	
  1156  000300                     __end_of___awdiv:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           intcon	equ	0xFF2
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function _isr *****************
  1166 ;; Defined at:
  1167 ;;		line 14 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1183 ;;      Temps:         14       0       0       0       0       0       0       0       0
  1184 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1185 ;;Total ram usage:       14 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		Interrupt level 2
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	intcode
  1195  000008                     __pintcode:
  1196                           	opt stack 0
  1197  000008                     _isr:
  1198                           	opt stack 28
  1199                           
  1200                           ;incstack = 0
  1201  000008  821D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1202  00000A  ED91  F000         	call	int_func,f	;refresh shadow registers
  1203                           tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           intcon	equ	0xFF2
  1208                           status	equ	0xFD8
  1209                           
  1210                           	psect	intcode_body
  1211  000122                     __pintcode_body:
  1212                           	opt stack 28
  1213  000122                     int_func:
  1214                           	opt stack 28
  1215  000122  0006               	pop		; remove dummy address from shadow register refresh
  1216  000124  CFFA F001          	movff	pclath,??_isr
  1217  000128  CFFB F002          	movff	pclatu,??_isr+1
  1218  00012C  CFE9 F003          	movff	fsr0l,??_isr+2
  1219  000130  CFEA F004          	movff	fsr0h,??_isr+3
  1220  000134  CFE1 F005          	movff	fsr1l,??_isr+4
  1221  000138  CFE2 F006          	movff	fsr1h,??_isr+5
  1222  00013C  CFD9 F007          	movff	fsr2l,??_isr+6
  1223  000140  CFDA F008          	movff	fsr2h,??_isr+7
  1224  000144  CFF3 F009          	movff	prodl,??_isr+8
  1225  000148  CFF4 F00A          	movff	prodh,??_isr+9
  1226  00014C  CFF6 F00B          	movff	tblptrl,??_isr+10
  1227  000150  CFF7 F00C          	movff	tblptrh,??_isr+11
  1228  000154  CFF8 F00D          	movff	tblptru,??_isr+12
  1229  000158  CFF5 F00E          	movff	tablat,??_isr+13
  1230                           
  1231                           ;main.c: 15: if (PIR1bits.TMR2IF) {
  1232  00015C  A29E               	btfss	3998,1,c	;volatile
  1233  00015E  D01A               	goto	i2l91
  1234                           
  1235                           ;main.c: 17: PIR1bits.TMR2IF = 0;
  1236  000160  929E               	bcf	3998,1,c	;volatile
  1237                           
  1238                           ;main.c: 18: aux++;
  1239  000162  4A17               	infsnz	_aux,f,c
  1240  000164  2A18               	incf	_aux+1,f,c
  1241                           
  1242                           ;main.c: 19: if (aux == 77){
  1243  000166  0E4D               	movlw	77
  1244  000168  1817               	xorwf	_aux,w,c
  1245  00016A  1018               	iorwf	_aux+1,w,c
  1246  00016C  A4D8               	btfss	status,2,c
  1247  00016E  D012               	goto	i2l91
  1248                           
  1249                           ;main.c: 20: seg++;
  1250  000170  2A1A               	incf	_seg,f,c
  1251                           
  1252                           ;main.c: 21: aux = 0;
  1253  000172  0E00               	movlw	0
  1254  000174  6E18               	movwf	_aux+1,c
  1255  000176  0E00               	movlw	0
  1256  000178  6E17               	movwf	_aux,c
  1257                           
  1258                           ;main.c: 22: if(seg == 60){
  1259  00017A  0E3C               	movlw	60
  1260  00017C  181A               	xorwf	_seg,w,c
  1261  00017E  A4D8               	btfss	status,2,c
  1262  000180  D009               	goto	i2l91
  1263                           
  1264                           ;main.c: 23: seg=0;
  1265  000182  0E00               	movlw	0
  1266  000184  6E1A               	movwf	_seg,c
  1267                           
  1268                           ;main.c: 24: min++;
  1269  000186  2A1B               	incf	_min,f,c
  1270                           
  1271                           ;main.c: 25: if(min==60){
  1272  000188  0E3C               	movlw	60
  1273  00018A  181B               	xorwf	_min,w,c
  1274  00018C  A4D8               	btfss	status,2,c
  1275  00018E  D002               	goto	i2l91
  1276                           
  1277                           ;main.c: 26: min=0;
  1278  000190  0E00               	movlw	0
  1279  000192  6E1B               	movwf	_min,c
  1280  000194                     i2l91:
  1281  000194  C00E  FFF5         	movff	??_isr+13,tablat
  1282  000198  C00D  FFF8         	movff	??_isr+12,tblptru
  1283  00019C  C00C  FFF7         	movff	??_isr+11,tblptrh
  1284  0001A0  C00B  FFF6         	movff	??_isr+10,tblptrl
  1285  0001A4  C00A  FFF4         	movff	??_isr+9,prodh
  1286  0001A8  C009  FFF3         	movff	??_isr+8,prodl
  1287  0001AC  C008  FFDA         	movff	??_isr+7,fsr2h
  1288  0001B0  C007  FFD9         	movff	??_isr+6,fsr2l
  1289  0001B4  C006  FFE2         	movff	??_isr+5,fsr1h
  1290  0001B8  C005  FFE1         	movff	??_isr+4,fsr1l
  1291  0001BC  C004  FFEA         	movff	??_isr+3,fsr0h
  1292  0001C0  C003  FFE9         	movff	??_isr+2,fsr0l
  1293  0001C4  C002  FFFB         	movff	??_isr+1,pclatu
  1294  0001C8  C001  FFFA         	movff	??_isr,pclath
  1295  0001CC  921D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1296  0001CE  0011               	retfie		f
  1297  0001D0                     __end_of_isr:
  1298                           	opt stack 0
  1299  0000                     pclatu	equ	0xFFB
  1300                           pclath	equ	0xFFA
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           prodh	equ	0xFF4
  1306                           prodl	equ	0xFF3
  1307                           intcon	equ	0xFF2
  1308                           fsr0h	equ	0xFEA
  1309                           fsr0l	equ	0xFE9
  1310                           fsr1h	equ	0xFE2
  1311                           fsr1l	equ	0xFE1
  1312                           fsr2h	equ	0xFDA
  1313                           fsr2l	equ	0xFD9
  1314                           status	equ	0xFD8
  1315                           pclatu	equ	0xFFB
  1316                           pclath	equ	0xFFA
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           prodh	equ	0xFF4
  1322                           prodl	equ	0xFF3
  1323                           intcon	equ	0xFF2
  1324                           fsr0h	equ	0xFEA
  1325                           fsr0l	equ	0xFE9
  1326                           fsr1h	equ	0xFE2
  1327                           fsr1l	equ	0xFE1
  1328                           fsr2h	equ	0xFDA
  1329                           fsr2l	equ	0xFD9
  1330                           status	equ	0xFD8
  1331                           
  1332                           	psect	rparam
  1333  0000                     pclatu	equ	0xFFB
  1334                           pclath	equ	0xFFA
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           prodh	equ	0xFF4
  1340                           prodl	equ	0xFF3
  1341                           intcon	equ	0xFF2
  1342                           fsr0h	equ	0xFEA
  1343                           fsr0l	equ	0xFE9
  1344                           fsr1h	equ	0xFE2
  1345                           fsr1l	equ	0xFE1
  1346                           fsr2h	equ	0xFDA
  1347                           fsr2l	equ	0xFD9
  1348                           status	equ	0xFD8
  1349                           
  1350                           	psect	temp
  1351  00001D                     btemp:
  1352                           	opt stack 0
  1353  00001D                     	ds	1
  1354  0000                     int$flags	set	btemp
  1355                           pclatu	equ	0xFFB
  1356                           pclath	equ	0xFFA
  1357                           tblptru	equ	0xFF8
  1358                           tblptrh	equ	0xFF7
  1359                           tblptrl	equ	0xFF6
  1360                           tablat	equ	0xFF5
  1361                           prodh	equ	0xFF4
  1362                           prodl	equ	0xFF3
  1363                           intcon	equ	0xFF2
  1364                           fsr0h	equ	0xFEA
  1365                           fsr0l	equ	0xFE9
  1366                           fsr1h	equ	0xFE2
  1367                           fsr1l	equ	0xFE1
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      28
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->___awdiv

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1218
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1218
                            ___awdiv
                            ___awmod
                          _atraso_ms
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     263
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     468
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     472
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___awdiv
     ___awmod
     _atraso_ms
     _display7s
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      1C       1       29.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1C      20        0.0%
DATA                 0      0      1C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 05 21:33:21 2017

                      l1 0382             ___awdiv@sign 0014              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l720 01D8                      l740 01EC  
                    l732 01E4                      l724 01DC                      l716 01D4  
                    l760 0200                      l752 01F8                      l744 01F0  
                    l736 01E8                      l728 01E0                      l780 0214  
                    l772 020C                      l764 0204                      l756 01FC  
                    l748 01F4                      l776 0210                      l768 0208  
                    l970 037E                      l786 0218                      l990 02A0  
                    l974 039E                      l984 0290                      l996 02B6  
                    l998 02BE             __CFG_CPB$OFF 000000                      u405 0034  
                    u406 0036                      _PR2 000FCB                      u415 0068  
                    u416 006A                      u425 009C                      u426 009E  
           __CFG_CPD$OFF 000000                      u435 00D0                      u436 00D2  
           __CFG_BOR$OFF 000000                      _aux 0017                      _min 001B  
                    _isr 0008                      _seg 001A             ___awmod@sign 0014  
           __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l1000 02C2                     l1012 02E8                     l1100 010E  
                   l1110 041E                     l1016 02F6                     l1008 02DE  
                   l1040 033A                     l1032 0320                     l1104 011C  
                   l1052 0366                     l1044 034E                     l1036 032E  
                   l1028 0314                     l1038 0336                     l1048 0358  
                   l1098 010A                     ?_isr 0001                     i2l91 0194  
                   _TMR2 000FCC                     _main 0402                     _loop 0012  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 001D                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ??_isr 0001            __CFG_PLLDIV$2 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001          __end_of___awdiv 0300  
                  ?_loop 0001          __end_of___awmod 0370              atraso_ms@j1 0013  
            atraso_ms@j2 0014          ___awdiv@divisor 0011          ___awdiv@counter 0013  
                  _PORTA 000F80                    _PORTD 000F83            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _onoff 001C                    _setup 03AC  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
         __CFG_ICPRT$OFF 000000          __initialization 03D8             __end_of_main 0424  
           __end_of_loop 0122                   ??_main 0017                   ??_loop 0017  
          __activetblptr 000002                   _ADCON1 000FC1         ___awdiv@dividend 000F  
                 ?_setup 0001           __CFG_XINST$OFF 000000                ??___awdiv 0013  
              ??___awmod 0013         ___awdiv@quotient 0015          ___awmod@divisor 0011  
        ___awmod@counter 0013             __pdataCOMRAM 001C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 03F4          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_setup 03D8       __size_of_display7s 00AC  
                ??_setup 000F       __size_of_atraso_ms 003C          __CFG_VREGEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000        __end_of_display7s 027C  
                ___awdiv 027C                  ___awmod 0300        __end_of_atraso_ms 03AC  
        __CFG_STVREN$OFF 000000                  __pcinit 03D8                  __ramtop 0800  
                __ptext0 0402                  __ptext1 03AC                  __ptext2 0012  
                __ptext3 01D0                  __ptext4 0370                  __ptext5 0300  
                __ptext6 027C                _T2CONbits 000FCA             __size_of_isr 01C8  
       ___awmod@dividend 000F           __pintcode_body 0122     end_of_initialization 03F4  
          __Lmediumconst 0000                  int_func 0122                _PORTAbits 000F80  
              _PORTBbits 000F81                _PORTDbits 000F83                _TRISAbits 000F92  
             display7s@v 000F               atraso_ms@i 0011            __pidataCOMRAM 0424  
    start_initialization 03D8              __end_of_isr 01D0         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0017                __pintcode 0008                 ?___awdiv 000F  
               ?___awmod 000F                _display7s 01D0                _atraso_ms 0370  
         __size_of_setup 002C           atraso_ms@valor 000F                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000               ?_display7s 0001  
             ?_atraso_ms 000F                 __Hrparam 0000                 __Lrparam 0000  
       __size_of___awdiv 0084         __size_of___awmod 0070                 _auxiliar 0019  
          __size_of_main 0022            __size_of_loop 0110                 int$flags 001D  
            ??_display7s 000F    __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0011  
             _INTCONbits 000FF2                 intlevel2 0000  
