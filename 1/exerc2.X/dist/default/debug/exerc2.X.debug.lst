

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 26 20:20:42 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.41
    22                           ; Generated 25/01/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  007CF0                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _n
    61  007CF0  000A               	dw	10
    62                           
    63                           	psect	nvCOMRAM
    64  00000E                     __pnvCOMRAM:
    65                           	opt stack 0
    66  00000E                     _r:
    67                           	opt stack 0
    68  00000E                     	ds	2
    69  0000                     _PORTAbits	set	3968
    70  0000                     _PORTD	set	3971
    71  0000                     _TRISE	set	3990
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISB	set	3987
    75  0000                     _TRISA	set	3986
    76  0000                     _ADCON1	set	4033
    77                           
    78                           ; #config settings
    79  0000                     
    80                           	psect	cinit
    81  007D14                     __pcinit:
    82                           	opt stack 0
    83  007D14                     start_initialization:
    84                           	opt stack 0
    85  007D14                     __initialization:
    86                           	opt stack 0
    87                           
    88                           ; Initialize objects allocated to COMRAM (2 bytes)
    89                           ; load TBLPTR registers with __pidataCOMRAM
    90  007D14  0EF0               	movlw	low __pidataCOMRAM
    91  007D16  6EF6               	movwf	tblptrl,c
    92  007D18  0E7C               	movlw	high __pidataCOMRAM
    93  007D1A  6EF7               	movwf	tblptrh,c
    94  007D1C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    95  007D1E  6EF8               	movwf	tblptru,c
    96  007D20  0009               	tblrd		*+	;fetch initializer
    97  007D22  CFF5 F010          	movff	tablat,__pdataCOMRAM
    98  007D26  0009               	tblrd		*+	;fetch initializer
    99  007D28  CFF5 F011          	movff	tablat,__pdataCOMRAM+1
   100  007D2C                     end_of_initialization:
   101                           	opt stack 0
   102  007D2C                     __end_of__initialization:
   103                           	opt stack 0
   104  007D2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105  007D2E  6EF8               	movwf	tblptru,c
   106  007D30  0100               	movlb	0
   107  007D32  EF79  F03E         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           tblptrl	equ	0xFF6
   111                           tablat	equ	0xFF5
   112                           
   113                           	psect	dataCOMRAM
   114  000010                     __pdataCOMRAM:
   115                           	opt stack 0
   116  000010                     _n:
   117                           	opt stack 0
   118  000010                     	ds	2
   119                           tblptru	equ	0xFF8
   120                           tblptrh	equ	0xFF7
   121                           tblptrl	equ	0xFF6
   122                           tablat	equ	0xFF5
   123                           
   124                           	psect	cstackCOMRAM
   125  000001                     __pcstackCOMRAM:
   126                           	opt stack 0
   127  000001                     ?___wmul:
   128                           	opt stack 0
   129  000001                     ?___lwmod:
   130                           	opt stack 0
   131  000001                     display7s@v:
   132                           	opt stack 0
   133  000001                     atraso_ms@valor:
   134                           	opt stack 0
   135  000001                     ___wmul@multiplier:
   136                           	opt stack 0
   137  000001                     ___lwmod@dividend:
   138                           	opt stack 0
   139                           
   140                           ; 2 bytes @ 0x0
   141  000001                     	ds	2
   142  000003                     atraso_ms@i:
   143                           	opt stack 0
   144  000003                     ___wmul@multiplicand:
   145                           	opt stack 0
   146  000003                     ___lwmod@divisor:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x2
   150  000003                     	ds	2
   151  000005                     atraso_ms@j1:
   152                           	opt stack 0
   153  000005                     ___lwmod@counter:
   154                           	opt stack 0
   155  000005                     ___wmul@product:
   156                           	opt stack 0
   157                           
   158                           ; 2 bytes @ 0x4
   159  000005                     	ds	1
   160  000006                     atraso_ms@j2:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0x5
   164  000006                     	ds	1
   165  000007                     ?___lwdiv:
   166                           	opt stack 0
   167  000007                     ___lwdiv@dividend:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x6
   171  000007                     	ds	2
   172  000009                     ___lwdiv@divisor:
   173                           	opt stack 0
   174                           
   175                           ; 2 bytes @ 0x8
   176  000009                     	ds	2
   177  00000B                     ___lwdiv@quotient:
   178                           	opt stack 0
   179                           
   180                           ; 2 bytes @ 0xA
   181  00000B                     	ds	2
   182  00000D                     ___lwdiv@counter:
   183                           	opt stack 0
   184                           
   185                           ; 1 bytes @ 0xC
   186  00000D                     	ds	1
   187  00000E                     tblptru	equ	0xFF8
   188                           tblptrh	equ	0xFF7
   189                           tblptrl	equ	0xFF6
   190                           tablat	equ	0xFF5
   191                           
   192                           ; 1 bytes @ 0xD
   193 ;;
   194 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   195 ;;
   196 ;; *************** function _main *****************
   197 ;; Defined at:
   198 ;;		line 80 in file "config.c"
   199 ;; Parameters:    Size  Location     Type
   200 ;;		None
   201 ;; Auto vars:     Size  Location     Type
   202 ;;		None
   203 ;; Return value:  Size  Location     Type
   204 ;;                  1    wreg      void 
   205 ;; Registers used:
   206 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   207 ;; Tracked objects:
   208 ;;		On entry : 0/0
   209 ;;		On exit  : 0/0
   210 ;;		Unchanged: 0/0
   211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   212 ;;      Params:         0       0       0       0       0       0       0       0       0
   213 ;;      Locals:         0       0       0       0       0       0       0       0       0
   214 ;;      Temps:          0       0       0       0       0       0       0       0       0
   215 ;;      Totals:         0       0       0       0       0       0       0       0       0
   216 ;;Total ram usage:        0 bytes
   217 ;; Hardware stack levels required when called:    2
   218 ;; This function calls:
   219 ;;		_loop
   220 ;;		_setup
   221 ;; This function is called by:
   222 ;;		Startup code after reset
   223 ;; This function uses a non-reentrant model
   224 ;;
   225                           
   226                           	psect	text0
   227  007CF2                     __ptext0:
   228                           	opt stack 0
   229  007CF2                     _main:
   230                           	opt stack 29
   231                           
   232                           ;config.c: 82: ADCON1=0x0C;
   233                           
   234                           ;incstack = 0
   235  007CF2  0E0C               	movlw	12
   236  007CF4  6EC1               	movwf	4033,c	;volatile
   237                           
   238                           ;config.c: 83: TRISA = 0X00;
   239  007CF6  0E00               	movlw	0
   240  007CF8  6E92               	movwf	3986,c	;volatile
   241                           
   242                           ;config.c: 84: TRISB = 0X07;
   243  007CFA  0E07               	movlw	7
   244  007CFC  6E93               	movwf	3987,c	;volatile
   245                           
   246                           ;config.c: 85: TRISC = 0X01;
   247  007CFE  0E01               	movlw	1
   248  007D00  6E94               	movwf	3988,c	;volatile
   249                           
   250                           ;config.c: 86: TRISD = 0X00;
   251  007D02  0E00               	movlw	0
   252  007D04  6E95               	movwf	3989,c	;volatile
   253                           
   254                           ;config.c: 87: TRISE = 0X00;
   255  007D06  0E00               	movlw	0
   256  007D08  6E96               	movwf	3990,c	;volatile
   257                           
   258                           ;config.c: 88: setup();
   259  007D0A  ECAE  F03E         	call	_setup	;wreg free
   260  007D0E                     l898:
   261                           
   262                           ;config.c: 90: {
   263                           ;config.c: 91: loop();
   264  007D0E  EC89  F03F         	call	_loop	;wreg free
   265  007D12  D7FD               	goto	l898
   266  007D14                     __end_of_main:
   267                           	opt stack 0
   268                           tblptru	equ	0xFF8
   269                           tblptrh	equ	0xFF7
   270                           tblptrl	equ	0xFF6
   271                           tablat	equ	0xFF5
   272                           
   273 ;; *************** function _setup *****************
   274 ;; Defined at:
   275 ;;		line 16 in file "exerc2.c"
   276 ;; Parameters:    Size  Location     Type
   277 ;;		None
   278 ;; Auto vars:     Size  Location     Type
   279 ;;		None
   280 ;; Return value:  Size  Location     Type
   281 ;;                  1    wreg      void 
   282 ;; Registers used:
   283 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   284 ;; Tracked objects:
   285 ;;		On entry : 0/0
   286 ;;		On exit  : 0/0
   287 ;;		Unchanged: 0/0
   288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   289 ;;      Params:         0       0       0       0       0       0       0       0       0
   290 ;;      Locals:         0       0       0       0       0       0       0       0       0
   291 ;;      Temps:          0       0       0       0       0       0       0       0       0
   292 ;;      Totals:         0       0       0       0       0       0       0       0       0
   293 ;;Total ram usage:        0 bytes
   294 ;; Hardware stack levels used:    1
   295 ;; Hardware stack levels required when called:    1
   296 ;; This function calls:
   297 ;;		___lwdiv
   298 ;;		___wmul
   299 ;; This function is called by:
   300 ;;		_main
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           	psect	text1
   305  007D5C                     __ptext1:
   306                           	opt stack 0
   307  007D5C                     _setup:
   308                           	opt stack 29
   309                           
   310                           ;exerc2.c: 17: PORTD=0;
   311                           
   312                           ;incstack = 0
   313  007D5C  0E00               	movlw	0
   314  007D5E  6E83               	movwf	3971,c	;volatile
   315                           
   316                           ;exerc2.c: 18: r=((n*873)+32346)/10;
   317  007D60  C010  F001         	movff	_n,___wmul@multiplier
   318  007D64  C011  F002         	movff	_n+1,___wmul@multiplier+1
   319  007D68  0E03               	movlw	3
   320  007D6A  6E04               	movwf	___wmul@multiplicand+1,c
   321  007D6C  0E69               	movlw	105
   322  007D6E  6E03               	movwf	___wmul@multiplicand,c
   323  007D70  EC9B  F03E         	call	___wmul	;wreg free
   324  007D74  0E5A               	movlw	90
   325  007D76  2401               	addwf	?___wmul,w,c
   326  007D78  6E07               	movwf	___lwdiv@dividend,c
   327  007D7A  0E7E               	movlw	126
   328  007D7C  2002               	addwfc	?___wmul+1,w,c
   329  007D7E  6E08               	movwf	___lwdiv@dividend+1,c
   330  007D80  0E00               	movlw	0
   331  007D82  6E0A               	movwf	___lwdiv@divisor+1,c
   332  007D84  0E0A               	movlw	10
   333  007D86  6E09               	movwf	___lwdiv@divisor,c
   334  007D88  EC0A  F03F         	call	___lwdiv	;wreg free
   335  007D8C  C007  F00E         	movff	?___lwdiv,_r
   336  007D90  C008  F00F         	movff	?___lwdiv+1,_r+1
   337  007D94  0012               	return		;funcret
   338  007D96                     __end_of_setup:
   339                           	opt stack 0
   340                           tblptru	equ	0xFF8
   341                           tblptrh	equ	0xFF7
   342                           tblptrl	equ	0xFF6
   343                           tablat	equ	0xFF5
   344                           
   345 ;; *************** function ___wmul *****************
   346 ;; Defined at:
   347 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  multiplier      2    0[COMRAM] unsigned int 
   350 ;;  multiplicand    2    2[COMRAM] unsigned int 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  product         2    4[COMRAM] unsigned int 
   353 ;; Return value:  Size  Location     Type
   354 ;;                  2    0[COMRAM] unsigned int 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, prodl, prodh
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         4       0       0       0       0       0       0       0       0
   363 ;;      Locals:         2       0       0       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0
   365 ;;      Totals:         6       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        6 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; This function calls:
   369 ;;		Nothing
   370 ;; This function is called by:
   371 ;;		_setup
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           	psect	text2
   376  007D36                     __ptext2:
   377                           	opt stack 0
   378  007D36                     ___wmul:
   379                           	opt stack 29
   380                           
   381                           ;incstack = 0
   382  007D36  5001               	movf	___wmul@multiplier,w,c
   383  007D38  0203               	mulwf	___wmul@multiplicand,c
   384  007D3A  CFF3 F005          	movff	prodl,___wmul@product
   385  007D3E  CFF4 F006          	movff	prodh,___wmul@product+1
   386  007D42  5001               	movf	___wmul@multiplier,w,c
   387  007D44  0204               	mulwf	___wmul@multiplicand+1,c
   388  007D46  50F3               	movf	prodl,w,c
   389  007D48  2606               	addwf	___wmul@product+1,f,c
   390  007D4A  5002               	movf	___wmul@multiplier+1,w,c
   391  007D4C  0203               	mulwf	___wmul@multiplicand,c
   392  007D4E  50F3               	movf	prodl,w,c
   393  007D50  2606               	addwf	___wmul@product+1,f,c
   394  007D52  C005  F001         	movff	___wmul@product,?___wmul
   395  007D56  C006  F002         	movff	___wmul@product+1,?___wmul+1
   396  007D5A  0012               	return	
   397  007D5C                     __end_of___wmul:
   398                           	opt stack 0
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           prodh	equ	0xFF4
   404                           prodl	equ	0xFF3
   405                           
   406 ;; *************** function _loop *****************
   407 ;; Defined at:
   408 ;;		line 21 in file "exerc2.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg, status,2, status,0, cstack
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   422 ;;      Params:         0       0       0       0       0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0       0       0       0       0
   425 ;;      Totals:         0       0       0       0       0       0       0       0       0
   426 ;;Total ram usage:        0 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		___lwdiv
   431 ;;		___lwmod
   432 ;;		_atraso_ms
   433 ;;		_display7s
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text3
   440  007F12                     __ptext3:
   441                           	opt stack 0
   442  007F12                     _loop:
   443                           	opt stack 29
   444                           
   445                           ;exerc2.c: 22: PORTD=display7s((r%10000)/1000);
   446                           
   447                           ;incstack = 0
   448  007F12  0E27               	movlw	39
   449  007F14  6E04               	movwf	___lwmod@divisor+1,c
   450  007F16  0E10               	movlw	16
   451  007F18  6E03               	movwf	___lwmod@divisor,c
   452  007F1A  C00E  F001         	movff	_r,___lwmod@dividend
   453  007F1E  C00F  F002         	movff	_r+1,___lwmod@dividend+1
   454  007F22  ECE9  F03E         	call	___lwmod	;wreg free
   455  007F26  C001  F007         	movff	?___lwmod,___lwdiv@dividend
   456  007F2A  C002  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
   457  007F2E  0E03               	movlw	3
   458  007F30  6E0A               	movwf	___lwdiv@divisor+1,c
   459  007F32  0EE8               	movlw	232
   460  007F34  6E09               	movwf	___lwdiv@divisor,c
   461  007F36  EC0A  F03F         	call	___lwdiv	;wreg free
   462  007F3A  5007               	movf	?___lwdiv,w,c
   463  007F3C  EC33  F03F         	call	_display7s
   464  007F40  6E83               	movwf	3971,c	;volatile
   465                           
   466                           ;exerc2.c: 23: PORTAbits.RA2=1;
   467  007F42  8480               	bsf	3968,2,c	;volatile
   468                           
   469                           ;exerc2.c: 24: atraso_ms(3);
   470  007F44  0E00               	movlw	0
   471  007F46  6E02               	movwf	atraso_ms@valor+1,c
   472  007F48  0E03               	movlw	3
   473  007F4A  6E01               	movwf	atraso_ms@valor,c
   474  007F4C  ECCB  F03E         	call	_atraso_ms	;wreg free
   475                           
   476                           ;exerc2.c: 25: PORTAbits.RA2=0;
   477  007F50  9480               	bcf	3968,2,c	;volatile
   478                           
   479                           ;exerc2.c: 26: PORTD=display7s((r%1000)/100);
   480  007F52  0E03               	movlw	3
   481  007F54  6E04               	movwf	___lwmod@divisor+1,c
   482  007F56  0EE8               	movlw	232
   483  007F58  6E03               	movwf	___lwmod@divisor,c
   484  007F5A  C00E  F001         	movff	_r,___lwmod@dividend
   485  007F5E  C00F  F002         	movff	_r+1,___lwmod@dividend+1
   486  007F62  ECE9  F03E         	call	___lwmod	;wreg free
   487  007F66  C001  F007         	movff	?___lwmod,___lwdiv@dividend
   488  007F6A  C002  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
   489  007F6E  0E00               	movlw	0
   490  007F70  6E0A               	movwf	___lwdiv@divisor+1,c
   491  007F72  0E64               	movlw	100
   492  007F74  6E09               	movwf	___lwdiv@divisor,c
   493  007F76  EC0A  F03F         	call	___lwdiv	;wreg free
   494  007F7A  5007               	movf	?___lwdiv,w,c
   495  007F7C  EC33  F03F         	call	_display7s
   496  007F80  6E83               	movwf	3971,c	;volatile
   497                           
   498                           ;exerc2.c: 27: PORTAbits.RA3=1;
   499  007F82  8680               	bsf	3968,3,c	;volatile
   500                           
   501                           ;exerc2.c: 28: atraso_ms(3);
   502  007F84  0E00               	movlw	0
   503  007F86  6E02               	movwf	atraso_ms@valor+1,c
   504  007F88  0E03               	movlw	3
   505  007F8A  6E01               	movwf	atraso_ms@valor,c
   506  007F8C  ECCB  F03E         	call	_atraso_ms	;wreg free
   507                           
   508                           ;exerc2.c: 29: PORTAbits.RA3=0;
   509  007F90  9680               	bcf	3968,3,c	;volatile
   510                           
   511                           ;exerc2.c: 30: PORTD=display7s((r%100)/10);
   512  007F92  0E00               	movlw	0
   513  007F94  6E04               	movwf	___lwmod@divisor+1,c
   514  007F96  0E64               	movlw	100
   515  007F98  6E03               	movwf	___lwmod@divisor,c
   516  007F9A  C00E  F001         	movff	_r,___lwmod@dividend
   517  007F9E  C00F  F002         	movff	_r+1,___lwmod@dividend+1
   518  007FA2  ECE9  F03E         	call	___lwmod	;wreg free
   519  007FA6  C001  F007         	movff	?___lwmod,___lwdiv@dividend
   520  007FAA  C002  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
   521  007FAE  0E00               	movlw	0
   522  007FB0  6E0A               	movwf	___lwdiv@divisor+1,c
   523  007FB2  0E0A               	movlw	10
   524  007FB4  6E09               	movwf	___lwdiv@divisor,c
   525  007FB6  EC0A  F03F         	call	___lwdiv	;wreg free
   526  007FBA  5007               	movf	?___lwdiv,w,c
   527  007FBC  EC33  F03F         	call	_display7s
   528  007FC0  6E83               	movwf	3971,c	;volatile
   529                           
   530                           ;exerc2.c: 31: PORTAbits.RA4=1;
   531  007FC2  8880               	bsf	3968,4,c	;volatile
   532                           
   533                           ;exerc2.c: 32: atraso_ms(3);
   534  007FC4  0E00               	movlw	0
   535  007FC6  6E02               	movwf	atraso_ms@valor+1,c
   536  007FC8  0E03               	movlw	3
   537  007FCA  6E01               	movwf	atraso_ms@valor,c
   538  007FCC  ECCB  F03E         	call	_atraso_ms	;wreg free
   539                           
   540                           ;exerc2.c: 33: PORTAbits.RA4=0;
   541  007FD0  9880               	bcf	3968,4,c	;volatile
   542                           
   543                           ;exerc2.c: 34: PORTD=display7s(r%10);
   544  007FD2  C00E  F001         	movff	_r,___lwmod@dividend
   545  007FD6  C00F  F002         	movff	_r+1,___lwmod@dividend+1
   546  007FDA  0E00               	movlw	0
   547  007FDC  6E04               	movwf	___lwmod@divisor+1,c
   548  007FDE  0E0A               	movlw	10
   549  007FE0  6E03               	movwf	___lwmod@divisor,c
   550  007FE2  ECE9  F03E         	call	___lwmod	;wreg free
   551  007FE6  5001               	movf	?___lwmod,w,c
   552  007FE8  EC33  F03F         	call	_display7s
   553  007FEC  6E83               	movwf	3971,c	;volatile
   554                           
   555                           ;exerc2.c: 35: PORTAbits.RA5=1;
   556  007FEE  8A80               	bsf	3968,5,c	;volatile
   557                           
   558                           ;exerc2.c: 36: atraso_ms(3);
   559  007FF0  0E00               	movlw	0
   560  007FF2  6E02               	movwf	atraso_ms@valor+1,c
   561  007FF4  0E03               	movlw	3
   562  007FF6  6E01               	movwf	atraso_ms@valor,c
   563  007FF8  ECCB  F03E         	call	_atraso_ms	;wreg free
   564                           
   565                           ;exerc2.c: 37: PORTAbits.RA5=0;
   566  007FFC  9A80               	bcf	3968,5,c	;volatile
   567  007FFE  0012               	return		;funcret
   568  008000                     __end_of_loop:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           prodh	equ	0xFF4
   575                           prodl	equ	0xFF3
   576                           
   577 ;; *************** function _display7s *****************
   578 ;; Defined at:
   579 ;;		line 27 in file "display7s.c"
   580 ;; Parameters:    Size  Location     Type
   581 ;;  v               1    wreg     unsigned char 
   582 ;; Auto vars:     Size  Location     Type
   583 ;;  v               1    0[COMRAM] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      unsigned char 
   586 ;; Registers used:
   587 ;;		wreg, status,2, status,0
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   593 ;;      Params:         0       0       0       0       0       0       0       0       0
   594 ;;      Locals:         1       0       0       0       0       0       0       0       0
   595 ;;      Temps:          0       0       0       0       0       0       0       0       0
   596 ;;      Totals:         1       0       0       0       0       0       0       0       0
   597 ;;Total ram usage:        1 bytes
   598 ;; Hardware stack levels used:    1
   599 ;; This function calls:
   600 ;;		Nothing
   601 ;; This function is called by:
   602 ;;		_loop
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text4
   607  007E66                     __ptext4:
   608                           	opt stack 0
   609  007E66                     _display7s:
   610                           	opt stack 29
   611                           
   612                           ;incstack = 0
   613                           ;display7s@v stored from wreg
   614  007E66  6E01               	movwf	display7s@v,c
   615                           
   616                           ;display7s.c: 29: switch(v)
   617  007E68  D022               	goto	l746
   618  007E6A                     l676:
   619                           
   620                           ;display7s.c: 32: return 0x3F;
   621  007E6A  0E3F               	movlw	63
   622  007E6C  0012               	return	
   623  007E6E                     l680:
   624                           
   625                           ;display7s.c: 34: return 0x06;
   626  007E6E  0E06               	movlw	6
   627  007E70  0012               	return	
   628  007E72                     l684:
   629                           
   630                           ;display7s.c: 36: return 0x5B;
   631  007E72  0E5B               	movlw	91
   632  007E74  0012               	return	
   633  007E76                     l688:
   634                           
   635                           ;display7s.c: 38: return 0x4F;
   636  007E76  0E4F               	movlw	79
   637  007E78  0012               	return	
   638  007E7A                     l692:
   639                           
   640                           ;display7s.c: 40: return 0x66;
   641  007E7A  0E66               	movlw	102
   642  007E7C  0012               	return	
   643  007E7E                     l696:
   644                           
   645                           ;display7s.c: 42: return 0x6D;
   646  007E7E  0E6D               	movlw	109
   647  007E80  0012               	return	
   648  007E82                     l700:
   649                           
   650                           ;display7s.c: 44: return 0x7D;
   651  007E82  0E7D               	movlw	125
   652  007E84  0012               	return	
   653  007E86                     l704:
   654                           
   655                           ;display7s.c: 46: return 0x07;
   656  007E86  0E07               	movlw	7
   657  007E88  0012               	return	
   658  007E8A                     l708:
   659                           
   660                           ;display7s.c: 48: return 0x7F;
   661  007E8A  0E7F               	movlw	127
   662  007E8C  0012               	return	
   663  007E8E                     l712:
   664                           
   665                           ;display7s.c: 50: return 0x6F;
   666  007E8E  0E6F               	movlw	111
   667  007E90  0012               	return	
   668  007E92                     l716:
   669                           
   670                           ;display7s.c: 52: return 0x77;
   671  007E92  0E77               	movlw	119
   672  007E94  0012               	return	
   673  007E96                     l720:
   674                           
   675                           ;display7s.c: 54: return 0x7c;
   676  007E96  0E7C               	movlw	124
   677  007E98  0012               	return	
   678  007E9A                     l724:
   679                           
   680                           ;display7s.c: 56: return 0x58;
   681  007E9A  0E58               	movlw	88
   682  007E9C  0012               	return	
   683  007E9E                     l728:
   684                           
   685                           ;display7s.c: 58: return 0x5E;
   686  007E9E  0E5E               	movlw	94
   687  007EA0  0012               	return	
   688  007EA2                     l732:
   689                           
   690                           ;display7s.c: 60: return 0x79;
   691  007EA2  0E79               	movlw	121
   692  007EA4  0012               	return	
   693  007EA6                     l736:
   694                           
   695                           ;display7s.c: 62: return 0x71;
   696  007EA6  0E71               	movlw	113
   697  007EA8  0012               	return	
   698  007EAA                     l740:
   699                           
   700                           ;display7s.c: 64: return 0;
   701  007EAA  0E00               	movlw	0
   702                           
   703                           ;display7s.c: 65: }
   704  007EAC  0012               	return	
   705  007EAE                     l746:
   706  007EAE  5001               	movf	display7s@v,w,c
   707                           
   708                           ; Switch size 1, requested type "space"
   709                           ; Number of cases is 16, Range of values is 0 to 15
   710                           ; switch strategies available:
   711                           ; Name         Instructions Cycles
   712                           ; simple_byte           49    25 (average)
   713                           ;	Chosen strategy is simple_byte
   714  007EB0  0A00               	xorlw	0	; case 0
   715  007EB2  B4D8               	btfsc	status,2,c
   716  007EB4  D7DA               	goto	l676
   717  007EB6  0A01               	xorlw	1	; case 1
   718  007EB8  B4D8               	btfsc	status,2,c
   719  007EBA  D7D9               	goto	l680
   720  007EBC  0A03               	xorlw	3	; case 2
   721  007EBE  B4D8               	btfsc	status,2,c
   722  007EC0  D7D8               	goto	l684
   723  007EC2  0A01               	xorlw	1	; case 3
   724  007EC4  B4D8               	btfsc	status,2,c
   725  007EC6  D7D7               	goto	l688
   726  007EC8  0A07               	xorlw	7	; case 4
   727  007ECA  B4D8               	btfsc	status,2,c
   728  007ECC  D7D6               	goto	l692
   729  007ECE  0A01               	xorlw	1	; case 5
   730  007ED0  B4D8               	btfsc	status,2,c
   731  007ED2  D7D5               	goto	l696
   732  007ED4  0A03               	xorlw	3	; case 6
   733  007ED6  B4D8               	btfsc	status,2,c
   734  007ED8  D7D4               	goto	l700
   735  007EDA  0A01               	xorlw	1	; case 7
   736  007EDC  B4D8               	btfsc	status,2,c
   737  007EDE  D7D3               	goto	l704
   738  007EE0  0A0F               	xorlw	15	; case 8
   739  007EE2  B4D8               	btfsc	status,2,c
   740  007EE4  D7D2               	goto	l708
   741  007EE6  0A01               	xorlw	1	; case 9
   742  007EE8  B4D8               	btfsc	status,2,c
   743  007EEA  D7D1               	goto	l712
   744  007EEC  0A03               	xorlw	3	; case 10
   745  007EEE  B4D8               	btfsc	status,2,c
   746  007EF0  D7D0               	goto	l716
   747  007EF2  0A01               	xorlw	1	; case 11
   748  007EF4  B4D8               	btfsc	status,2,c
   749  007EF6  D7CF               	goto	l720
   750  007EF8  0A07               	xorlw	7	; case 12
   751  007EFA  B4D8               	btfsc	status,2,c
   752  007EFC  D7CE               	goto	l724
   753  007EFE  0A01               	xorlw	1	; case 13
   754  007F00  B4D8               	btfsc	status,2,c
   755  007F02  D7CD               	goto	l728
   756  007F04  0A03               	xorlw	3	; case 14
   757  007F06  B4D8               	btfsc	status,2,c
   758  007F08  D7CC               	goto	l732
   759  007F0A  0A01               	xorlw	1	; case 15
   760  007F0C  B4D8               	btfsc	status,2,c
   761  007F0E  D7CB               	goto	l736
   762  007F10  D7CC               	goto	l740
   763  007F12                     __end_of_display7s:
   764                           	opt stack 0
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           status	equ	0xFD8
   772                           
   773 ;; *************** function _atraso_ms *****************
   774 ;; Defined at:
   775 ;;		line 29 in file "atraso.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  valor           2    0[COMRAM] unsigned int 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  i               2    2[COMRAM] unsigned int 
   780 ;;  j2              1    5[COMRAM] volatile unsigned char 
   781 ;;  j1              1    4[COMRAM] volatile unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         2       0       0       0       0       0       0       0       0
   792 ;;      Locals:         4       0       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         6       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        6 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_loop
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text5
   805  007D96                     __ptext5:
   806                           	opt stack 0
   807  007D96                     _atraso_ms:
   808                           	opt stack 29
   809                           
   810                           ;atraso.c: 31: unsigned int i;
   811                           ;atraso.c: 32: volatile unsigned char j1;
   812                           ;atraso.c: 33: volatile unsigned char j2=0;
   813                           
   814                           ;incstack = 0
   815  007D96  0E00               	movlw	0
   816  007D98  6E06               	movwf	atraso_ms@j2,c	;volatile
   817                           
   818                           ;atraso.c: 35: for (i =0; i< valor; i++)
   819  007D9A  0E00               	movlw	0
   820  007D9C  6E04               	movwf	atraso_ms@i+1,c
   821  007D9E  0E00               	movlw	0
   822  007DA0  6E03               	movwf	atraso_ms@i,c
   823  007DA2  D010               	goto	l826
   824  007DA4                     l822:
   825                           
   826                           ;atraso.c: 36: {
   827                           ;atraso.c: 37: j1=(8000000/(4000l*50));
   828  007DA4  0E28               	movlw	40
   829  007DA6  6E05               	movwf	atraso_ms@j1,c	;volatile
   830  007DA8                     l1:
   831  007DA8  0E09               	movlw	9	; 20 j1 ;# 
   832  007DAA  6F06               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
   833  007DAC  F000               	nop		; 180 j2j1 ;# 
   834  007DAE  F000               	nop		; 180 j2j1 ;# 
   835  007DB0  2F06               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
   836                           
   837                           ; 40 2j1 ;# 
   838  007DB2  EFD7  F03E         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
   839  007DB6  F000               	nop		; 20 j1 ;# 
   840  007DB8  2F05               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
   841                           
   842                           ; 2 2 ;# 
   843  007DBA  EFD4  F03E         	goto	l1	; 38 2j1 -2 ;# 
   844  007DBE  F000               	nop		; 1 1 ;# 
   845  007DC0  4A03               	infsnz	atraso_ms@i,f,c
   846  007DC2  2A04               	incf	atraso_ms@i+1,f,c
   847  007DC4                     l826:
   848  007DC4  5001               	movf	atraso_ms@valor,w,c
   849  007DC6  5C03               	subwf	atraso_ms@i,w,c
   850  007DC8  5002               	movf	atraso_ms@valor+1,w,c
   851  007DCA  5804               	subwfb	atraso_ms@i+1,w,c
   852  007DCC  B0D8               	btfsc	status,0,c
   853  007DCE  0012               	return	
   854  007DD0  D7E9               	goto	l822
   855  007DD2                     __end_of_atraso_ms:
   856                           	opt stack 0
   857                           tblptru	equ	0xFF8
   858                           tblptrh	equ	0xFF7
   859                           tblptrl	equ	0xFF6
   860                           tablat	equ	0xFF5
   861                           prodh	equ	0xFF4
   862                           prodl	equ	0xFF3
   863                           status	equ	0xFD8
   864                           
   865 ;; *************** function ___lwmod *****************
   866 ;; Defined at:
   867 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  dividend        2    0[COMRAM] unsigned int 
   870 ;;  divisor         2    2[COMRAM] unsigned int 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  counter         1    4[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  2    0[COMRAM] unsigned int 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         4       0       0       0       0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         5       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        5 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		_loop
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text6
   896  007DD2                     __ptext6:
   897                           	opt stack 0
   898  007DD2                     ___lwmod:
   899                           	opt stack 29
   900                           
   901                           ;incstack = 0
   902  007DD2  5003               	movf	___lwmod@divisor,w,c
   903  007DD4  1004               	iorwf	___lwmod@divisor+1,w,c
   904  007DD6  B4D8               	btfsc	status,2,c
   905  007DD8  D018               	goto	l481
   906  007DDA  0E01               	movlw	1
   907  007DDC  6E05               	movwf	___lwmod@counter,c
   908  007DDE  D004               	goto	l862
   909  007DE0                     l860:
   910  007DE0  90D8               	bcf	status,0,c
   911  007DE2  3603               	rlcf	___lwmod@divisor,f,c
   912  007DE4  3604               	rlcf	___lwmod@divisor+1,f,c
   913  007DE6  2A05               	incf	___lwmod@counter,f,c
   914  007DE8                     l862:
   915  007DE8  AE04               	btfss	___lwmod@divisor+1,7,c
   916  007DEA  D7FA               	goto	l860
   917  007DEC                     l864:
   918  007DEC  5003               	movf	___lwmod@divisor,w,c
   919  007DEE  5C01               	subwf	___lwmod@dividend,w,c
   920  007DF0  5004               	movf	___lwmod@divisor+1,w,c
   921  007DF2  5802               	subwfb	___lwmod@dividend+1,w,c
   922  007DF4  A0D8               	btfss	status,0,c
   923  007DF6  D004               	goto	l868
   924  007DF8  5003               	movf	___lwmod@divisor,w,c
   925  007DFA  5E01               	subwf	___lwmod@dividend,f,c
   926  007DFC  5004               	movf	___lwmod@divisor+1,w,c
   927  007DFE  5A02               	subwfb	___lwmod@dividend+1,f,c
   928  007E00                     l868:
   929  007E00  90D8               	bcf	status,0,c
   930  007E02  3204               	rrcf	___lwmod@divisor+1,f,c
   931  007E04  3203               	rrcf	___lwmod@divisor,f,c
   932  007E06  2E05               	decfsz	___lwmod@counter,f,c
   933  007E08  D7F1               	goto	l864
   934  007E0A                     l481:
   935  007E0A  C001  F001         	movff	___lwmod@dividend,?___lwmod
   936  007E0E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   937  007E12  0012               	return		;funcret
   938  007E14                     __end_of___lwmod:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           prodh	equ	0xFF4
   945                           prodl	equ	0xFF3
   946                           status	equ	0xFD8
   947                           
   948 ;; *************** function ___lwdiv *****************
   949 ;; Defined at:
   950 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;  dividend        2    6[COMRAM] unsigned int 
   953 ;;  divisor         2    8[COMRAM] unsigned int 
   954 ;; Auto vars:     Size  Location     Type
   955 ;;  quotient        2   10[COMRAM] unsigned int 
   956 ;;  counter         1   12[COMRAM] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  2    6[COMRAM] unsigned int 
   959 ;; Registers used:
   960 ;;		wreg, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   966 ;;      Params:         4       0       0       0       0       0       0       0       0
   967 ;;      Locals:         3       0       0       0       0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0
   969 ;;      Totals:         7       0       0       0       0       0       0       0       0
   970 ;;Total ram usage:        7 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_setup
   976 ;;		_loop
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text7
   981  007E14                     __ptext7:
   982                           	opt stack 0
   983  007E14                     ___lwdiv:
   984                           	opt stack 29
   985                           
   986                           ;incstack = 0
   987  007E14  0E00               	movlw	0
   988  007E16  6E0C               	movwf	___lwdiv@quotient+1,c
   989  007E18  0E00               	movlw	0
   990  007E1A  6E0B               	movwf	___lwdiv@quotient,c
   991  007E1C  5009               	movf	___lwdiv@divisor,w,c
   992  007E1E  100A               	iorwf	___lwdiv@divisor+1,w,c
   993  007E20  B4D8               	btfsc	status,2,c
   994  007E22  D01C               	goto	l471
   995  007E24  0E01               	movlw	1
   996  007E26  6E0D               	movwf	___lwdiv@counter,c
   997  007E28  D004               	goto	l842
   998  007E2A                     l840:
   999  007E2A  90D8               	bcf	status,0,c
  1000  007E2C  3609               	rlcf	___lwdiv@divisor,f,c
  1001  007E2E  360A               	rlcf	___lwdiv@divisor+1,f,c
  1002  007E30  2A0D               	incf	___lwdiv@counter,f,c
  1003  007E32                     l842:
  1004  007E32  AE0A               	btfss	___lwdiv@divisor+1,7,c
  1005  007E34  D7FA               	goto	l840
  1006  007E36                     l844:
  1007  007E36  90D8               	bcf	status,0,c
  1008  007E38  360B               	rlcf	___lwdiv@quotient,f,c
  1009  007E3A  360C               	rlcf	___lwdiv@quotient+1,f,c
  1010  007E3C  5009               	movf	___lwdiv@divisor,w,c
  1011  007E3E  5C07               	subwf	___lwdiv@dividend,w,c
  1012  007E40  500A               	movf	___lwdiv@divisor+1,w,c
  1013  007E42  5808               	subwfb	___lwdiv@dividend+1,w,c
  1014  007E44  A0D8               	btfss	status,0,c
  1015  007E46  D005               	goto	l852
  1016  007E48  5009               	movf	___lwdiv@divisor,w,c
  1017  007E4A  5E07               	subwf	___lwdiv@dividend,f,c
  1018  007E4C  500A               	movf	___lwdiv@divisor+1,w,c
  1019  007E4E  5A08               	subwfb	___lwdiv@dividend+1,f,c
  1020  007E50  800B               	bsf	___lwdiv@quotient,0,c
  1021  007E52                     l852:
  1022  007E52  90D8               	bcf	status,0,c
  1023  007E54  320A               	rrcf	___lwdiv@divisor+1,f,c
  1024  007E56  3209               	rrcf	___lwdiv@divisor,f,c
  1025  007E58  2E0D               	decfsz	___lwdiv@counter,f,c
  1026  007E5A  D7ED               	goto	l844
  1027  007E5C                     l471:
  1028  007E5C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  1029  007E60  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1030  007E64  0012               	return		;funcret
  1031  007E66                     __end_of___lwdiv:
  1032                           	opt stack 0
  1033  0000                     tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           prodh	equ	0xFF4
  1038                           prodl	equ	0xFF3
  1039                           status	equ	0xFD8
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           prodh	equ	0xFF4
  1045                           prodl	equ	0xFF3
  1046                           status	equ	0xFD8
  1047                           
  1048                           	psect	rparam
  1049  0000                     tblptru	equ	0xFF8
  1050                           tblptrh	equ	0xFF7
  1051                           tblptrl	equ	0xFF6
  1052                           tablat	equ	0xFF5
  1053                           prodh	equ	0xFF4
  1054                           prodl	equ	0xFF3
  1055                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     13      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _setup->___lwdiv
    _loop->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1995
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     751
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     245
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1244
                            ___lwdiv
                            ___lwmod
                          _atraso_ms
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _atraso_ms                                            6     4      2     220
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     503
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     506
                                              6 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___lwdiv
       ___lwmod (ARG)
       ___wmul (ARG)
     ___lwmod
     _atraso_ms
     _display7s
   _setup
     ___lwdiv
       ___lwmod (ARG)
       ___wmul (ARG)
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      D      11       1       17.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      20        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 26 20:20:42 2017

                      l1 7DA8                        _n 0010                        _r 000E  
    ___wmul@multiplicand 0003              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l700 7E82                      l471 7E5C                      l720 7E96  
                    l712 7E8E                      l704 7E86                      l481 7E0A  
                    l740 7EAA                      l732 7EA2                      l724 7E9A  
                    l716 7E92                      l708 7E8A                      l822 7DA4  
                    l840 7E2A                      l736 7EA6                      l728 7E9E  
                    l680 7E6E                      l842 7E32                      l826 7DC4  
                    l746 7EAE                      l852 7E52                      l844 7E36  
                    l860 7DE0                      l692 7E7A                      l684 7E72  
                    l676 7E6A                      l862 7DE8                      l864 7DEC  
                    l696 7E7E                      l688 7E76                      l868 7E00  
                    l898 7D0E             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_BOR$OFF 000000             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _main 7CF2                     _loop 7F12  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$2 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  ?_loop 0001              atraso_ms@j1 0005              atraso_ms@j2 0006  
        __end_of___lwdiv 7E66          __end_of___lwmod 7E14                    _PORTD 000F83  
          __CFG_USBDIV$2 000000                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _setup 7D5C  
                  tablat 000FF5                    status 000FD8           __CFG_ICPRT$OFF 000000  
        __initialization 7D14             __end_of_main 7D14             __end_of_loop 8000  
                 ??_main 000E                   ??_loop 000E            __activetblptr 000002  
                 _ADCON1 000FC1                   ?_setup 0001           __CFG_XINST$OFF 000000  
                 ___wmul 7D36                ??___lwdiv 000B                ??___lwmod 0005  
           __pdataCOMRAM 0010                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7D2C  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_setup 7D96       __size_of_display7s 00AC                  ??_setup 000E  
     __size_of_atraso_ms 003C               __pnvCOMRAM 000E                  ?___wmul 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
      __end_of_display7s 7F12          __size_of___wmul 0026                  ___lwdiv 7E14  
                ___lwmod 7DD2        __end_of_atraso_ms 7DD2          __CFG_STVREN$OFF 000000  
                __pcinit 7D14                  __ramtop 0800                  __ptext0 7CF2  
                __ptext1 7D5C                  __ptext2 7D36                  __ptext3 7F12  
                __ptext4 7E66                  __ptext5 7D96                  __ptext6 7DD2  
                __ptext7 7E14     end_of_initialization 7D2C            __Lmediumconst 0000  
              _PORTAbits 000F80               display7s@v 0001               atraso_ms@i 0003  
         __end_of___wmul 7D5C            __pidataCOMRAM 7CF0      start_initialization 7D14  
               ??___wmul 0005         __CFG_LPT1OSC$OFF 000000         ___lwdiv@dividend 0007  
               ?___lwdiv 0007                 ?___lwmod 0001                _display7s 7E66  
              _atraso_ms 7D96         ___lwdiv@quotient 000B           __size_of_setup 003A  
         atraso_ms@valor 0001           ___wmul@product 0005         __CFG_WDTPS$32768 000000  
             ?_display7s 0001        ___wmul@multiplier 0001               ?_atraso_ms 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lwdiv 0052  
       __size_of___lwmod 0042          ___lwdiv@divisor 0009          ___lwdiv@counter 000D  
          __size_of_main 0022            __size_of_loop 00EE              ??_display7s 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0003         ___lwmod@dividend 0001  
        ___lwmod@divisor 0003          ___lwmod@counter 0005  
