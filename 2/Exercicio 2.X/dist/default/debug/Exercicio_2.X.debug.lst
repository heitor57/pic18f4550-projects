

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 21 21:14:39 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36  0000                     
    37                           ; Version 1.41
    38                           ; Generated 25/01/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _ADRESL	set	4035
    72  0000                     _ADRESH	set	4036
    73  0000                     _ADCON0bits	set	4034
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADCON0	set	4034
    76  0000                     _PIR1bits	set	3998
    77  0000                     _PR2	set	4043
    78  0000                     _T2CONbits	set	4042
    79  0000                     _CCPR1L	set	4030
    80  0000                     _PORTCbits	set	3970
    81  0000                     _TRISCbits	set	3988
    82  0000                     _CCP1CON	set	4029
    83  0000                     _PORTEbits	set	3972
    84  0000                     _PORTD	set	3971
    85  0000                     _TRISE	set	3990
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _ADCON1	set	4033
    91                           
    92                           	psect	smallconst
    93  000800                     __psmallconst:
    94                           	opt stack 0
    95  000800  00                 	db	0
    96  000801                     STR_1:
    97  000801  48                 	db	72	;'H'
    98  000802  65                 	db	101	;'e'
    99  000803  69                 	db	105	;'i'
   100  000804  74                 	db	116	;'t'
   101  000805  6F                 	db	111	;'o'
   102  000806  72                 	db	114	;'r'
   103  000807  00                 	db	0
   104                           
   105                           ; #config settings
   106  000808  00                 	db	0	; dummy byte at the end
   107  0000                     
   108                           	psect	cinit
   109  001354                     __pcinit:
   110                           	opt stack 0
   111  001354                     start_initialization:
   112                           	opt stack 0
   113  001354                     __initialization:
   114                           	opt stack 0
   115                           
   116                           ; Clear objects allocated to COMRAM (8 bytes)
   117  001354  EE00  F039         	lfsr	0,__pbssCOMRAM
   118  001358  0E08               	movlw	8
   119  00135A                     clear_0:
   120  00135A  6AEE               	clrf	postinc0,c
   121  00135C  06E8               	decf	wreg,f,c
   122  00135E  E1FD               	bnz	clear_0
   123  001360                     end_of_initialization:
   124                           	opt stack 0
   125  001360                     __end_of__initialization:
   126                           	opt stack 0
   127  001360  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  001362  6EF8               	movwf	tblptru,c
   129  001364  0100               	movlb	0
   130  001366  EF99  F009         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           postinc0	equ	0xFEE
   133                           wreg	equ	0xFE8
   134                           
   135                           	psect	bssCOMRAM
   136  000039                     __pbssCOMRAM:
   137                           	opt stack 0
   138  000039                     _val:
   139                           	opt stack 0
   140  000039                     	ds	2
   141  00003B                     _buffer:
   142                           	opt stack 0
   143  00003B                     	ds	6
   144                           tblptru	equ	0xFF8
   145                           postinc0	equ	0xFEE
   146                           wreg	equ	0xFE8
   147                           
   148                           	psect	cstackCOMRAM
   149  000001                     __pcstackCOMRAM:
   150                           	opt stack 0
   151  000001                     ?_adc_amostra:
   152                           	opt stack 0
   153  000001                     ?___lwmod:
   154                           	opt stack 0
   155  000001                     ?___ftpack:
   156                           	opt stack 0
   157  000001                     ?___lmul:
   158                           	opt stack 0
   159  000001                     lcd_wr@val:
   160                           	opt stack 0
   161  000001                     atraso_ms@valor:
   162                           	opt stack 0
   163  000001                     ___lwmod@dividend:
   164                           	opt stack 0
   165  000001                     ___ftpack@arg:
   166                           	opt stack 0
   167  000001                     ___lmul@multiplier:
   168                           	opt stack 0
   169                           
   170                           ; 4 bytes @ 0x0
   171  000001                     	ds	2
   172  000003                     ??_adc_amostra:
   173  000003                     atraso_ms@i:
   174                           	opt stack 0
   175  000003                     ___lwmod@divisor:
   176                           	opt stack 0
   177                           
   178                           ; 2 bytes @ 0x2
   179  000003                     	ds	1
   180  000004                     ___ftpack@exp:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x3
   184  000004                     	ds	1
   185  000005                     atraso_ms@j1:
   186                           	opt stack 0
   187  000005                     ___ftpack@sign:
   188                           	opt stack 0
   189  000005                     ___lwmod@counter:
   190                           	opt stack 0
   191  000005                     ___lmul@multiplicand:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0x4
   195  000005                     	ds	1
   196  000006                     ??___ftpack:
   197  000006                     ?___lwdiv:
   198                           	opt stack 0
   199  000006                     atraso_ms@j2:
   200                           	opt stack 0
   201  000006                     ___lwdiv@dividend:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x5
   205  000006                     	ds	1
   206  000007                     lcd_cmd@val:
   207                           	opt stack 0
   208  000007                     lcd_dat@val:
   209                           	opt stack 0
   210  000007                     adc_amostra@canal:
   211                           	opt stack 0
   212                           
   213                           ; 1 bytes @ 0x6
   214  000007                     	ds	1
   215  000008                     lcd_str@str:
   216                           	opt stack 0
   217  000008                     ___lwdiv@divisor:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x7
   221  000008                     	ds	1
   222  000009                     ?___lwtoft:
   223                           	opt stack 0
   224  000009                     ___lwtoft@c:
   225                           	opt stack 0
   226  000009                     ___lmul@product:
   227                           	opt stack 0
   228                           
   229                           ; 4 bytes @ 0x8
   230  000009                     	ds	1
   231  00000A                     ??_lcd_str:
   232  00000A                     ___lwdiv@quotient:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x9
   236  00000A                     	ds	2
   237  00000C                     ?___ftdiv:
   238                           	opt stack 0
   239  00000C                     lcd_str@i:
   240                           	opt stack 0
   241  00000C                     ___lwdiv@counter:
   242                           	opt stack 0
   243  00000C                     ___ftdiv@f1:
   244                           	opt stack 0
   245                           
   246                           ; 3 bytes @ 0xB
   247  00000C                     	ds	1
   248  00000D                     ?___aldiv:
   249                           	opt stack 0
   250  00000D                     ?___lldiv:
   251                           	opt stack 0
   252  00000D                     ___aldiv@dividend:
   253                           	opt stack 0
   254  00000D                     ___lldiv@dividend:
   255                           	opt stack 0
   256                           
   257                           ; 4 bytes @ 0xC
   258  00000D                     	ds	2
   259  00000F                     ___ftdiv@f2:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0xE
   263  00000F                     	ds	2
   264  000011                     ___aldiv@divisor:
   265                           	opt stack 0
   266  000011                     ___lldiv@divisor:
   267                           	opt stack 0
   268                           
   269                           ; 4 bytes @ 0x10
   270  000011                     	ds	1
   271  000012                     ??___ftdiv:
   272                           
   273                           ; 1 bytes @ 0x11
   274  000012                     	ds	3
   275  000015                     ___aldiv@counter:
   276                           	opt stack 0
   277  000015                     ___ftdiv@cntr:
   278                           	opt stack 0
   279  000015                     ___lldiv@quotient:
   280                           	opt stack 0
   281                           
   282                           ; 4 bytes @ 0x14
   283  000015                     	ds	1
   284  000016                     ___aldiv@sign:
   285                           	opt stack 0
   286  000016                     ___ftdiv@f3:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x15
   290  000016                     	ds	1
   291  000017                     ___aldiv@quotient:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0x16
   295  000017                     	ds	2
   296  000019                     ___ftdiv@exp:
   297                           	opt stack 0
   298  000019                     ___lldiv@counter:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x18
   302  000019                     	ds	1
   303  00001A                     ??_PWM1_Set_Duty:
   304  00001A                     ___ftdiv@sign:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x19
   308  00001A                     	ds	1
   309  00001B                     ?___ftmul:
   310                           	opt stack 0
   311  00001B                     PWM1_Init@f:
   312                           	opt stack 0
   313  00001B                     itoa@val:
   314                           	opt stack 0
   315  00001B                     ___ftmul@f1:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x1A
   319  00001B                     	ds	1
   320  00001C                     PWM1_Set_Duty@d:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x1B
   324  00001C                     	ds	1
   325  00001D                     ??_PWM1_Init:
   326  00001D                     PWM1_Set_Duty@temp:
   327                           	opt stack 0
   328  00001D                     itoa@str:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x1C
   332  00001D                     	ds	1
   333  00001E                     ___ftmul@f2:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x1D
   337  00001E                     	ds	1
   338  00001F                     
   339                           ; 1 bytes @ 0x1E
   340  00001F                     	ds	2
   341  000021                     ??___ftmul:
   342  000021                     PWM1_Init@temp:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x20
   346  000021                     	ds	2
   347  000023                     
   348                           ; 1 bytes @ 0x22
   349  000023                     	ds	1
   350  000024                     ___ftmul@exp:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x23
   354  000024                     	ds	1
   355  000025                     ___ftmul@f3_as_product:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x24
   359  000025                     	ds	3
   360  000028                     ___ftmul@cntr:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x27
   364  000028                     	ds	1
   365  000029                     ___ftmul@sign:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x28
   369  000029                     	ds	1
   370  00002A                     ?___fttol:
   371                           	opt stack 0
   372  00002A                     ___fttol@f1:
   373                           	opt stack 0
   374                           
   375                           ; 3 bytes @ 0x29
   376  00002A                     	ds	4
   377  00002E                     ??___fttol:
   378                           
   379                           ; 1 bytes @ 0x2D
   380  00002E                     	ds	5
   381  000033                     ___fttol@sign1:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x32
   385  000033                     	ds	1
   386  000034                     ___fttol@lval:
   387                           	opt stack 0
   388                           
   389                           ; 4 bytes @ 0x33
   390  000034                     	ds	4
   391  000038                     ___fttol@exp1:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x37
   395  000038                     	ds	1
   396  000039                     tblptru	equ	0xFF8
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           ; 1 bytes @ 0x38
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 79 in file "config.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   420 ;;      Params:         0       0       0       0       0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels required when called:    4
   426 ;; This function calls:
   427 ;;		_loop
   428 ;;		_setup
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text0
   435  001332                     __ptext0:
   436                           	opt stack 0
   437  001332                     _main:
   438                           	opt stack 27
   439                           
   440                           ;config.c: 81: ADCON1=0x0C;
   441                           
   442                           ;incstack = 0
   443  001332  0E0C               	movlw	12
   444  001334  6EC1               	movwf	4033,c	;volatile
   445                           
   446                           ;config.c: 82: TRISA=0xC7;
   447  001336  0EC7               	movlw	199
   448  001338  6E92               	movwf	3986,c	;volatile
   449                           
   450                           ;config.c: 83: TRISB=0x07;
   451  00133A  0E07               	movlw	7
   452  00133C  6E93               	movwf	3987,c	;volatile
   453                           
   454                           ;config.c: 84: TRISC=0x01;
   455  00133E  0E01               	movlw	1
   456  001340  6E94               	movwf	3988,c	;volatile
   457                           
   458                           ;config.c: 85: TRISD=0x00;
   459  001342  0E00               	movlw	0
   460  001344  6E95               	movwf	3989,c	;volatile
   461                           
   462                           ;config.c: 86: TRISE=0x00;
   463  001346  0E00               	movlw	0
   464  001348  6E96               	movwf	3990,c	;volatile
   465                           
   466                           ;config.c: 88: setup();
   467  00134A  EC41  F009         	call	_setup	;wreg free
   468  00134E                     l1639:
   469                           
   470                           ;config.c: 91: {
   471                           ;config.c: 92: loop();
   472  00134E  EC7D  F005         	call	_loop	;wreg free
   473  001352  D7FD               	goto	l1639
   474  001354                     __end_of_main:
   475                           	opt stack 0
   476                           tblptru	equ	0xFF8
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           
   480 ;; *************** function _setup *****************
   481 ;; Defined at:
   482 ;;		line 17 in file "exercicio2.c"
   483 ;; Parameters:    Size  Location     Type
   484 ;;		None
   485 ;; Auto vars:     Size  Location     Type
   486 ;;		None
   487 ;; Return value:  Size  Location     Type
   488 ;;                  1    wreg      void 
   489 ;; Registers used:
   490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   491 ;; Tracked objects:
   492 ;;		On entry : 0/0
   493 ;;		On exit  : 0/0
   494 ;;		Unchanged: 0/0
   495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   496 ;;      Params:         0       0       0       0       0       0       0       0       0
   497 ;;      Locals:         0       0       0       0       0       0       0       0       0
   498 ;;      Temps:          0       0       0       0       0       0       0       0       0
   499 ;;      Totals:         0       0       0       0       0       0       0       0       0
   500 ;;Total ram usage:        0 bytes
   501 ;; Hardware stack levels used:    1
   502 ;; Hardware stack levels required when called:    3
   503 ;; This function calls:
   504 ;;		_PWM1_Init
   505 ;;		_PWM1_Set_Duty
   506 ;;		_PWM1_Start
   507 ;;		_adc_init
   508 ;;		_lcd_cmd
   509 ;;		_lcd_init
   510 ;;		_lcd_str
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text1
   517  001282                     __ptext1:
   518                           	opt stack 0
   519  001282                     _setup:
   520                           	opt stack 27
   521                           
   522                           ;exercicio2.c: 18: lcd_init();
   523                           
   524                           ;incstack = 0
   525  001282  EC53  F008         	call	_lcd_init	;wreg free
   526                           
   527                           ;exercicio2.c: 19: lcd_cmd(0x01);
   528  001286  0E01               	movlw	1
   529  001288  EC72  F009         	call	_lcd_cmd
   530                           
   531                           ;exercicio2.c: 20: lcd_cmd(0x80);
   532  00128C  0E80               	movlw	128
   533  00128E  EC72  F009         	call	_lcd_cmd
   534                           
   535                           ;exercicio2.c: 21: lcd_str("Heitor");
   536  001292  0E01               	movlw	low STR_1
   537  001294  6E08               	movwf	lcd_str@str,c
   538  001296  0E08               	movlw	high STR_1
   539  001298  6E09               	movwf	lcd_str@str+1,c
   540  00129A  EC15  F008         	call	_lcd_str	;wreg free
   541                           
   542                           ;exercicio2.c: 22: adc_init();
   543  00129E  ECC0  F009         	call	_adc_init	;wreg free
   544                           
   545                           ;exercicio2.c: 24: PWM1_Init(5000);
   546  0012A2  0E13               	movlw	19
   547  0012A4  6E1C               	movwf	PWM1_Init@f+1,c
   548  0012A6  0E88               	movlw	136
   549  0012A8  6E1B               	movwf	PWM1_Init@f,c
   550  0012AA  EC63  F006         	call	_PWM1_Init	;wreg free
   551                           
   552                           ;exercicio2.c: 25: PWM1_Start();
   553  0012AE  ECB5  F009         	call	_PWM1_Start	;wreg free
   554                           
   555                           ;exercicio2.c: 26: PWM1_Set_Duty(120);
   556  0012B2  0E78               	movlw	120
   557  0012B4  EC8B  F007         	call	_PWM1_Set_Duty
   558  0012B8  0012               	return		;funcret
   559  0012BA                     __end_of_setup:
   560                           	opt stack 0
   561                           tblptru	equ	0xFF8
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           
   565 ;; *************** function _lcd_init *****************
   566 ;; Defined at:
   567 ;;		line 57 in file "lcd.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         0       0       0       0       0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         0       0       0       0       0       0       0       0       0
   585 ;;Total ram usage:        0 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    2
   588 ;; This function calls:
   589 ;;		_atraso_ms
   590 ;;		_lcd_cmd
   591 ;; This function is called by:
   592 ;;		_setup
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text2
   597  0010A6                     __ptext2:
   598                           	opt stack 0
   599  0010A6                     _lcd_init:
   600                           	opt stack 27
   601                           
   602                           ;lcd.c: 59: PORTEbits.RE1=0;
   603                           
   604                           ;incstack = 0
   605  0010A6  9284               	bcf	3972,1,c	;volatile
   606                           
   607                           ;lcd.c: 60: PORTEbits.RE2=0;
   608  0010A8  9484               	bcf	3972,2,c	;volatile
   609                           
   610                           ;lcd.c: 61: atraso_ms(20);
   611  0010AA  0E00               	movlw	0
   612  0010AC  6E02               	movwf	atraso_ms@valor+1,c
   613  0010AE  0E14               	movlw	20
   614  0010B0  6E01               	movwf	atraso_ms@valor,c
   615  0010B2  EC23  F009         	call	_atraso_ms	;wreg free
   616                           
   617                           ;lcd.c: 62: PORTEbits.RE1=1;
   618  0010B6  8284               	bsf	3972,1,c	;volatile
   619                           
   620                           ;lcd.c: 64: lcd_cmd(0x38);
   621  0010B8  0E38               	movlw	56
   622  0010BA  EC72  F009         	call	_lcd_cmd
   623                           
   624                           ;lcd.c: 65: atraso_ms(5);
   625  0010BE  0E00               	movlw	0
   626  0010C0  6E02               	movwf	atraso_ms@valor+1,c
   627  0010C2  0E05               	movlw	5
   628  0010C4  6E01               	movwf	atraso_ms@valor,c
   629  0010C6  EC23  F009         	call	_atraso_ms	;wreg free
   630                           
   631                           ;lcd.c: 66: lcd_cmd(0x38);
   632  0010CA  0E38               	movlw	56
   633  0010CC  EC72  F009         	call	_lcd_cmd
   634                           
   635                           ;lcd.c: 67: atraso_ms(1);
   636  0010D0  0E00               	movlw	0
   637  0010D2  6E02               	movwf	atraso_ms@valor+1,c
   638  0010D4  0E01               	movlw	1
   639  0010D6  6E01               	movwf	atraso_ms@valor,c
   640  0010D8  EC23  F009         	call	_atraso_ms	;wreg free
   641                           
   642                           ;lcd.c: 68: lcd_cmd(0x38);
   643  0010DC  0E38               	movlw	56
   644  0010DE  EC72  F009         	call	_lcd_cmd
   645                           
   646                           ;lcd.c: 69: lcd_cmd(0x08);
   647  0010E2  0E08               	movlw	8
   648  0010E4  EC72  F009         	call	_lcd_cmd
   649                           
   650                           ;lcd.c: 70: lcd_cmd(0x0F);
   651  0010E8  0E0F               	movlw	15
   652  0010EA  EC72  F009         	call	_lcd_cmd
   653                           
   654                           ;lcd.c: 71: lcd_cmd(0x01);
   655  0010EE  0E01               	movlw	1
   656  0010F0  EC72  F009         	call	_lcd_cmd
   657                           
   658                           ;lcd.c: 72: lcd_cmd(0x38);
   659  0010F4  0E38               	movlw	56
   660  0010F6  EC72  F009         	call	_lcd_cmd
   661                           
   662                           ;lcd.c: 73: lcd_cmd(0x80);
   663  0010FA  0E80               	movlw	128
   664  0010FC  EC72  F009         	call	_lcd_cmd
   665  001100  0012               	return		;funcret
   666  001102                     __end_of_lcd_init:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           postinc0	equ	0xFEE
   670                           wreg	equ	0xFE8
   671                           
   672 ;; *************** function _adc_init *****************
   673 ;; Defined at:
   674 ;;		line 30 in file "adc.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   688 ;;      Params:         0       0       0       0       0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; This function calls:
   695 ;;		Nothing
   696 ;; This function is called by:
   697 ;;		_setup
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text3
   702  001380                     __ptext3:
   703                           	opt stack 0
   704  001380                     _adc_init:
   705                           	opt stack 29
   706                           
   707                           ;adc.c: 36: ADCON0=0x01;
   708                           
   709                           ;incstack = 0
   710  001380  0E01               	movlw	1
   711  001382  6EC2               	movwf	4034,c	;volatile
   712                           
   713                           ;adc.c: 37: ADCON1=0x0C;
   714  001384  0E0C               	movlw	12
   715  001386  6EC1               	movwf	4033,c	;volatile
   716                           
   717                           ;adc.c: 38: ADCON2=0x01;
   718  001388  0E01               	movlw	1
   719  00138A  6EC0               	movwf	4032,c	;volatile
   720  00138C  0012               	return		;funcret
   721  00138E                     __end_of_adc_init:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           
   727 ;; *************** function _PWM1_Start *****************
   728 ;; Defined at:
   729 ;;		line 79 in file "pwm.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, status,2
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   743 ;;      Params:         0       0       0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels used:    1
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_setup
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text4
   757  00136A                     __ptext4:
   758                           	opt stack 0
   759  00136A                     _PWM1_Start:
   760                           	opt stack 29
   761                           
   762                           ;pwm.c: 82: TRISCbits.TRISC2=0;
   763                           
   764                           ;incstack = 0
   765  00136A  9494               	bcf	3988,2,c	;volatile
   766                           
   767                           ;pwm.c: 84: CCP1CON=0x0C;
   768  00136C  0E0C               	movlw	12
   769  00136E  6EBD               	movwf	4029,c	;volatile
   770                           
   771                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
   772  001370  84CA               	bsf	4042,2,c	;volatile
   773                           
   774                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
   775  001372  929E               	bcf	3998,1,c	;volatile
   776  001374                     l70:
   777  001374  A29E               	btfss	3998,1,c	;volatile
   778  001376  D7FE               	goto	l70
   779                           
   780                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
   781  001378  929E               	bcf	3998,1,c	;volatile
   782  00137A                     l73:
   783  00137A  B29E               	btfsc	3998,1,c	;volatile
   784  00137C  0012               	return	
   785  00137E  D7FD               	goto	l73
   786  001380                     __end_of_PWM1_Start:
   787                           	opt stack 0
   788                           tblptru	equ	0xFF8
   789                           postinc0	equ	0xFEE
   790                           wreg	equ	0xFE8
   791                           
   792 ;; *************** function _PWM1_Init *****************
   793 ;; Defined at:
   794 ;;		line 31 in file "pwm.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  f               2   26[COMRAM] unsigned int 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  temp            2   32[COMRAM] unsigned int 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   808 ;;      Params:         2       0       0       0       0       0       0       0       0
   809 ;;      Locals:         2       0       0       0       0       0       0       0       0
   810 ;;      Temps:          4       0       0       0       0       0       0       0       0
   811 ;;      Totals:         8       0       0       0       0       0       0       0       0
   812 ;;Total ram usage:        8 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    1
   815 ;; This function calls:
   816 ;;		___aldiv
   817 ;; This function is called by:
   818 ;;		_setup
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text5
   823  000CC6                     __ptext5:
   824                           	opt stack 0
   825  000CC6                     _PWM1_Init:
   826                           	opt stack 28
   827                           
   828                           ;pwm.c: 33: unsigned int temp;
   829                           ;pwm.c: 39: CCP1CON=0x00;
   830                           
   831                           ;incstack = 0
   832  000CC6  0E00               	movlw	0
   833  000CC8  6EBD               	movwf	4029,c	;volatile
   834                           
   835                           ;pwm.c: 40: TRISCbits.TRISC2=1;
   836  000CCA  8494               	bsf	3988,2,c	;volatile
   837                           
   838                           ;pwm.c: 43: PORTCbits.RC2=0;
   839  000CCC  9482               	bcf	3970,2,c	;volatile
   840                           
   841                           ;pwm.c: 45: CCPR1L=0;
   842  000CCE  0E00               	movlw	0
   843  000CD0  6EBE               	movwf	4030,c	;volatile
   844                           
   845                           ;pwm.c: 50: T2CONbits.TMR2ON=0;
   846  000CD2  94CA               	bcf	4042,2,c	;volatile
   847                           
   848                           ;pwm.c: 52: temp=8000000/(f*4l);
   849  000CD4  0E00               	movlw	0
   850  000CD6  6E0D               	movwf	___aldiv@dividend,c
   851  000CD8  0E12               	movlw	18
   852  000CDA  6E0E               	movwf	___aldiv@dividend+1,c
   853  000CDC  0E7A               	movlw	122
   854  000CDE  6E0F               	movwf	___aldiv@dividend+2,c
   855  000CE0  0E00               	movlw	0
   856  000CE2  6E10               	movwf	___aldiv@dividend+3,c
   857  000CE4  501B               	movf	PWM1_Init@f,w,c
   858  000CE6  6E1D               	movwf	??_PWM1_Init& (0+255),c
   859  000CE8  501C               	movf	PWM1_Init@f+1,w,c
   860  000CEA  6E1E               	movwf	(??_PWM1_Init+1)& (0+255),c
   861  000CEC  6A1F               	clrf	(??_PWM1_Init+2)& (0+255),c
   862  000CEE  6A20               	clrf	(??_PWM1_Init+3)& (0+255),c
   863  000CF0  0E02               	movlw	2
   864  000CF2                     u865:
   865  000CF2  90D8               	bcf	status,0,c
   866  000CF4  361D               	rlcf	??_PWM1_Init,f,c
   867  000CF6  361E               	rlcf	??_PWM1_Init+1,f,c
   868  000CF8  361F               	rlcf	??_PWM1_Init+2,f,c
   869  000CFA  3620               	rlcf	??_PWM1_Init+3,f,c
   870  000CFC  2EE8               	decfsz	wreg,f,c
   871  000CFE  D7F9               	goto	u865
   872  000D00  C01D  F011         	movff	??_PWM1_Init,___aldiv@divisor
   873  000D04  C01E  F012         	movff	??_PWM1_Init+1,___aldiv@divisor+1
   874  000D08  C01F  F013         	movff	??_PWM1_Init+2,___aldiv@divisor+2
   875  000D0C  C020  F014         	movff	??_PWM1_Init+3,___aldiv@divisor+3
   876  000D10  ECCE  F006         	call	___aldiv	;wreg free
   877  000D14  C00D  F021         	movff	?___aldiv,PWM1_Init@temp
   878  000D18  C00E  F022         	movff	?___aldiv+1,PWM1_Init@temp+1
   879                           
   880                           ;pwm.c: 54: if (temp < 256)
   881  000D1C  0422               	decf	PWM1_Init@temp+1,w,c
   882  000D1E  B0D8               	btfsc	status,0,c
   883  000D20  D005               	goto	l1425
   884                           
   885                           ;pwm.c: 55: {
   886                           ;pwm.c: 56: T2CONbits.T2CKPS=0;
   887  000D22  0EFC               	movlw	-4
   888  000D24  16CA               	andwf	4042,f,c	;volatile
   889                           
   890                           ;pwm.c: 57: PR2=temp;
   891  000D26  C021  FFCB         	movff	PWM1_Init@temp,4043	;volatile
   892                           
   893                           ;pwm.c: 58: }
   894  000D2A  D033               	goto	l1435
   895  000D2C                     l1425:
   896                           
   897                           ;pwm.c: 59: else if(temp/4 < 256 )
   898  000D2C  C021  F01D         	movff	PWM1_Init@temp,??_PWM1_Init
   899  000D30  C022  F01E         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
   900  000D34  90D8               	bcf	status,0,c
   901  000D36  321E               	rrcf	??_PWM1_Init+1,f,c
   902  000D38  321D               	rrcf	??_PWM1_Init,f,c
   903  000D3A  90D8               	bcf	status,0,c
   904  000D3C  321E               	rrcf	??_PWM1_Init+1,f,c
   905  000D3E  321D               	rrcf	??_PWM1_Init,f,c
   906  000D40  041E               	decf	??_PWM1_Init+1,w,c
   907  000D42  B0D8               	btfsc	status,0,c
   908  000D44  D013               	goto	l1431
   909                           
   910                           ;pwm.c: 60: {
   911                           ;pwm.c: 61: T2CONbits.T2CKPS=1;
   912  000D46  50CA               	movf	4042,w,c	;volatile
   913  000D48  0BFC               	andlw	-4
   914  000D4A  0901               	iorlw	1
   915  000D4C  6ECA               	movwf	4042,c	;volatile
   916                           
   917                           ;pwm.c: 62: PR2=(temp+2)/4;
   918  000D4E  0E02               	movlw	2
   919  000D50  2421               	addwf	PWM1_Init@temp,w,c
   920  000D52  6E1D               	movwf	??_PWM1_Init& (0+255),c
   921  000D54  0E00               	movlw	0
   922  000D56  2022               	addwfc	PWM1_Init@temp+1,w,c
   923  000D58  6E1E               	movwf	(??_PWM1_Init+1)& (0+255),c
   924  000D5A  90D8               	bcf	status,0,c
   925  000D5C  321E               	rrcf	??_PWM1_Init+1,f,c
   926  000D5E  321D               	rrcf	??_PWM1_Init,f,c
   927  000D60  90D8               	bcf	status,0,c
   928  000D62  321E               	rrcf	??_PWM1_Init+1,f,c
   929  000D64  321D               	rrcf	??_PWM1_Init,f,c
   930  000D66  501D               	movf	??_PWM1_Init,w,c
   931  000D68  6ECB               	movwf	4043,c	;volatile
   932                           
   933                           ;pwm.c: 63: }
   934  000D6A  D013               	goto	l1435
   935  000D6C                     l1431:
   936                           
   937                           ;pwm.c: 64: else
   938                           ;pwm.c: 65: {
   939                           ;pwm.c: 66: PR2=(temp+8)/16;
   940  000D6C  0E08               	movlw	8
   941  000D6E  2421               	addwf	PWM1_Init@temp,w,c
   942  000D70  6E1D               	movwf	??_PWM1_Init& (0+255),c
   943  000D72  0E00               	movlw	0
   944  000D74  2022               	addwfc	PWM1_Init@temp+1,w,c
   945  000D76  6E1E               	movwf	(??_PWM1_Init+1)& (0+255),c
   946  000D78  0E04               	movlw	4
   947  000D7A  6E1F               	movwf	(??_PWM1_Init+2)& (0+255),c
   948  000D7C                     u895:
   949  000D7C  90D8               	bcf	status,0,c
   950  000D7E  321E               	rrcf	??_PWM1_Init+1,f,c
   951  000D80  321D               	rrcf	??_PWM1_Init,f,c
   952  000D82  2E1F               	decfsz	(??_PWM1_Init+2)& (0+255),f,c
   953  000D84  D7FB               	goto	u895
   954  000D86  501D               	movf	??_PWM1_Init,w,c
   955  000D88  6ECB               	movwf	4043,c	;volatile
   956                           
   957                           ;pwm.c: 67: T2CONbits.T2CKPS=2;
   958  000D8A  50CA               	movf	4042,w,c	;volatile
   959  000D8C  0BFC               	andlw	-4
   960  000D8E  0902               	iorlw	2
   961  000D90  6ECA               	movwf	4042,c	;volatile
   962  000D92                     l1435:
   963                           
   964                           ;pwm.c: 68: }
   965                           ;pwm.c: 71: T2CONbits.TOUTPS=0x00;
   966  000D92  96CA               	bcf	4042,3,c	;volatile
   967  000D94  98CA               	bcf	4042,4,c	;volatile
   968  000D96  9ACA               	bcf	4042,5,c	;volatile
   969  000D98  9CCA               	bcf	4042,6,c	;volatile
   970  000D9A  0012               	return		;funcret
   971  000D9C                     __end_of_PWM1_Init:
   972                           	opt stack 0
   973                           tblptru	equ	0xFF8
   974                           postinc0	equ	0xFEE
   975                           wreg	equ	0xFE8
   976                           status	equ	0xFD8
   977                           
   978 ;; *************** function _loop *****************
   979 ;; Defined at:
   980 ;;		line 29 in file "exercicio2.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   994 ;;      Params:         0       0       0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    3
  1001 ;; This function calls:
  1002 ;;		_PWM1_Set_Duty
  1003 ;;		___aldiv
  1004 ;;		___ftdiv
  1005 ;;		___ftmul
  1006 ;;		___fttol
  1007 ;;		___lmul
  1008 ;;		___lwtoft
  1009 ;;		_adc_amostra
  1010 ;;		_itoa
  1011 ;;		_lcd_cmd
  1012 ;;		_lcd_dat
  1013 ;;		_lcd_str
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text6
  1020  000AFA                     __ptext6:
  1021                           	opt stack 0
  1022  000AFA                     _loop:
  1023                           	opt stack 27
  1024                           
  1025                           ;exercicio2.c: 30: lcd_cmd(0xC0);
  1026                           
  1027                           ;incstack = 0
  1028  000AFA  0EC0               	movlw	192
  1029  000AFC  EC72  F009         	call	_lcd_cmd
  1030                           
  1031                           ;exercicio2.c: 31: val = adc_amostra(0);
  1032  000B00  0E00               	movlw	0
  1033  000B02  EC81  F008         	call	_adc_amostra
  1034  000B06  C001  F039         	movff	?_adc_amostra,_val
  1035  000B0A  C002  F03A         	movff	?_adc_amostra+1,_val+1
  1036                           
  1037                           ;exercicio2.c: 32: itoa((val*50000l)/1023,buffer);
  1038  000B0E  C039  F001         	movff	_val,___lmul@multiplier
  1039  000B12  C03A  F002         	movff	_val+1,___lmul@multiplier+1
  1040  000B16  6A03               	clrf	___lmul@multiplier+2,c
  1041  000B18  6A04               	clrf	___lmul@multiplier+3,c
  1042  000B1A  0E50               	movlw	80
  1043  000B1C  6E05               	movwf	___lmul@multiplicand,c
  1044  000B1E  0EC3               	movlw	195
  1045  000B20  6E06               	movwf	___lmul@multiplicand+1,c
  1046  000B22  0E00               	movlw	0
  1047  000B24  6E07               	movwf	___lmul@multiplicand+2,c
  1048  000B26  0E00               	movlw	0
  1049  000B28  6E08               	movwf	___lmul@multiplicand+3,c
  1050  000B2A  ECAE  F008         	call	___lmul	;wreg free
  1051  000B2E  C001  F00D         	movff	?___lmul,___aldiv@dividend
  1052  000B32  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
  1053  000B36  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
  1054  000B3A  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
  1055  000B3E  0EFF               	movlw	255
  1056  000B40  6E11               	movwf	___aldiv@divisor,c
  1057  000B42  0E03               	movlw	3
  1058  000B44  6E12               	movwf	___aldiv@divisor+1,c
  1059  000B46  0E00               	movlw	0
  1060  000B48  6E13               	movwf	___aldiv@divisor+2,c
  1061  000B4A  0E00               	movlw	0
  1062  000B4C  6E14               	movwf	___aldiv@divisor+3,c
  1063  000B4E  ECCE  F006         	call	___aldiv	;wreg free
  1064  000B52  C00D  F01B         	movff	?___aldiv,itoa@val
  1065  000B56  C00E  F01C         	movff	?___aldiv+1,itoa@val+1
  1066  000B5A  0E3B               	movlw	low _buffer
  1067  000B5C  6E1D               	movwf	itoa@str,c
  1068  000B5E  0E00               	movlw	high _buffer
  1069  000B60  6E1E               	movwf	itoa@str+1,c
  1070  000B62  EC05  F004         	call	_itoa	;wreg free
  1071                           
  1072                           ;exercicio2.c: 33: lcd_dat(buffer[0]);
  1073  000B66  503B               	movf	_buffer,w,c
  1074  000B68  EC5D  F009         	call	_lcd_dat
  1075                           
  1076                           ;exercicio2.c: 34: lcd_dat('.');
  1077  000B6C  0E2E               	movlw	46
  1078  000B6E  EC5D  F009         	call	_lcd_dat
  1079                           
  1080                           ;exercicio2.c: 35: lcd_str(buffer+1);
  1081  000B72  0E3C               	movlw	low (_buffer+1)
  1082  000B74  6E08               	movwf	lcd_str@str,c
  1083  000B76  0E00               	movlw	high (_buffer+1)
  1084  000B78  6E09               	movwf	lcd_str@str+1,c
  1085  000B7A  EC15  F008         	call	_lcd_str	;wreg free
  1086                           
  1087                           ;exercicio2.c: 36: lcd_dat('V');
  1088  000B7E  0E56               	movlw	86
  1089  000B80  EC5D  F009         	call	_lcd_dat
  1090                           
  1091                           ;exercicio2.c: 37: PWM1_Set_Duty( ((float)val / 1023)*127);
  1092  000B84  0E00               	movlw	0
  1093  000B86  6E1E               	movwf	___ftmul@f2,c
  1094  000B88  0EFE               	movlw	254
  1095  000B8A  6E1F               	movwf	___ftmul@f2+1,c
  1096  000B8C  0E42               	movlw	66
  1097  000B8E  6E20               	movwf	___ftmul@f2+2,c
  1098  000B90  0EC0               	movlw	192
  1099  000B92  6E0F               	movwf	___ftdiv@f2,c
  1100  000B94  0E7F               	movlw	127
  1101  000B96  6E10               	movwf	___ftdiv@f2+1,c
  1102  000B98  0E44               	movlw	68
  1103  000B9A  6E11               	movwf	___ftdiv@f2+2,c
  1104  000B9C  C039  F009         	movff	_val,___lwtoft@c
  1105  000BA0  C03A  F00A         	movff	_val+1,___lwtoft@c+1
  1106  000BA4  EC87  F009         	call	___lwtoft	;wreg free
  1107  000BA8  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
  1108  000BAC  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
  1109  000BB0  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
  1110  000BB4  ECF0  F005         	call	___ftdiv	;wreg free
  1111  000BB8  C00C  F01B         	movff	?___ftdiv,___ftmul@f1
  1112  000BBC  C00D  F01C         	movff	?___ftdiv+1,___ftmul@f1+1
  1113  000BC0  C00E  F01D         	movff	?___ftdiv+2,___ftmul@f1+2
  1114  000BC4  EC03  F005         	call	___ftmul	;wreg free
  1115  000BC8  C01B  F02A         	movff	?___ftmul,___fttol@f1
  1116  000BCC  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  1117  000BD0  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  1118  000BD4  EC89  F004         	call	___fttol	;wreg free
  1119  000BD8  502A               	movf	?___fttol,w,c
  1120  000BDA  EC8B  F007         	call	_PWM1_Set_Duty
  1121  000BDE  0012               	return		;funcret
  1122  000BE0                     __end_of_loop:
  1123                           	opt stack 0
  1124                           tblptru	equ	0xFF8
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function _lcd_str *****************
  1130 ;; Defined at:
  1131 ;;		line 76 in file "lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  str             2    7[COMRAM] PTR const unsigned char 
  1134 ;;		 -> buffer(6), STR_1(7), 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  i               1   11[COMRAM] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1146 ;;      Params:         2       0       0       0       0       0       0       0       0
  1147 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1148 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1149 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1150 ;;Total ram usage:        5 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    2
  1153 ;; This function calls:
  1154 ;;		_lcd_dat
  1155 ;; This function is called by:
  1156 ;;		_setup
  1157 ;;		_loop
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text7
  1162  00102A                     __ptext7:
  1163                           	opt stack 0
  1164  00102A                     _lcd_str:
  1165                           	opt stack 27
  1166                           
  1167                           ;lcd.c: 78: unsigned char i=0;
  1168                           
  1169                           ;incstack = 0
  1170  00102A  0E00               	movlw	0
  1171  00102C  6E0C               	movwf	lcd_str@i,c
  1172                           
  1173                           ;lcd.c: 80: while(str[i] != 0 )
  1174  00102E  D01D               	goto	l1407
  1175  001030                     l1403:
  1176                           
  1177                           ;lcd.c: 81: {
  1178                           ;lcd.c: 82: lcd_dat(str[i]);
  1179  001030  500C               	movf	lcd_str@i,w,c
  1180  001032  0D01               	mullw	1
  1181  001034  C008  F00A         	movff	lcd_str@str,??_lcd_str
  1182  001038  C009  F00B         	movff	lcd_str@str+1,??_lcd_str+1
  1183  00103C  50F3               	movf	prodl,w,c
  1184  00103E  260A               	addwf	??_lcd_str,f,c
  1185  001040  50F4               	movf	prodh,w,c
  1186  001042  220B               	addwfc	??_lcd_str+1,f,c
  1187  001044  C00A  FFF6         	movff	??_lcd_str,tblptrl
  1188  001048  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  1189  00104C  6AF8               	clrf	tblptru,c
  1190  00104E  0E07               	movlw	(high __ramtop+-1)
  1191  001050  64F7               	cpfsgt	tblptrh,c
  1192  001052  D003               	bra	u837
  1193  001054  0008               	tblrd		*
  1194  001056  50F5               	movf	tablat,w,c
  1195  001058  D005               	bra	u830
  1196  00105A                     u837:
  1197  00105A  CFF6 FFE9          	movff	tblptrl,fsr0l
  1198  00105E  CFF7 FFEA          	movff	tblptrh,fsr0h
  1199  001062  50EF               	movf	indf0,w,c
  1200  001064                     u830:
  1201  001064  EC5D  F009         	call	_lcd_dat
  1202                           
  1203                           ;lcd.c: 83: i++;
  1204  001068  2A0C               	incf	lcd_str@i,f,c
  1205  00106A                     l1407:
  1206  00106A  500C               	movf	lcd_str@i,w,c
  1207  00106C  0D01               	mullw	1
  1208  00106E  C008  F00A         	movff	lcd_str@str,??_lcd_str
  1209  001072  C009  F00B         	movff	lcd_str@str+1,??_lcd_str+1
  1210  001076  50F3               	movf	prodl,w,c
  1211  001078  260A               	addwf	??_lcd_str,f,c
  1212  00107A  50F4               	movf	prodh,w,c
  1213  00107C  220B               	addwfc	??_lcd_str+1,f,c
  1214  00107E  C00A  FFF6         	movff	??_lcd_str,tblptrl
  1215  001082  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  1216  001086  6AF8               	clrf	tblptru,c
  1217  001088  0E07               	movlw	(high __ramtop+-1)
  1218  00108A  64F7               	cpfsgt	tblptrh,c
  1219  00108C  D003               	bra	u847
  1220  00108E  0008               	tblrd		*
  1221  001090  50F5               	movf	tablat,w,c
  1222  001092  D005               	bra	u840
  1223  001094                     u847:
  1224  001094  CFF6 FFE9          	movff	tblptrl,fsr0l
  1225  001098  CFF7 FFEA          	movff	tblptrh,fsr0h
  1226  00109C  50EF               	movf	indf0,w,c
  1227  00109E                     u840:
  1228  00109E  0900               	iorlw	0
  1229  0010A0  B4D8               	btfsc	status,2,c
  1230  0010A2  0012               	return	
  1231  0010A4  D7C5               	goto	l1403
  1232  0010A6                     __end_of_lcd_str:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           prodh	equ	0xFF4
  1239                           prodl	equ	0xFF3
  1240                           indf0	equ	0xFEF
  1241                           postinc0	equ	0xFEE
  1242                           fsr0h	equ	0xFEA
  1243                           fsr0l	equ	0xFE9
  1244                           wreg	equ	0xFE8
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _lcd_dat *****************
  1248 ;; Defined at:
  1249 ;;		line 46 in file "lcd.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  val             1    wreg     unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  val             1    6[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    1
  1270 ;; This function calls:
  1271 ;;		_atraso_ms
  1272 ;;		_lcd_wr
  1273 ;; This function is called by:
  1274 ;;		_lcd_str
  1275 ;;		_loop
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text8
  1280  0012BA                     __ptext8:
  1281                           	opt stack 0
  1282  0012BA                     _lcd_dat:
  1283                           	opt stack 27
  1284                           
  1285                           ;incstack = 0
  1286                           ;lcd_dat@val stored from wreg
  1287  0012BA  6E07               	movwf	lcd_dat@val,c
  1288                           
  1289                           ;lcd.c: 48: PORTEbits.RE1=1;
  1290  0012BC  8284               	bsf	3972,1,c	;volatile
  1291                           
  1292                           ;lcd.c: 49: lcd_wr(val);
  1293  0012BE  5007               	movf	lcd_dat@val,w,c
  1294  0012C0  ECC7  F009         	call	_lcd_wr
  1295                           
  1296                           ;lcd.c: 50: PORTEbits.RE2=1;
  1297  0012C4  8484               	bsf	3972,2,c	;volatile
  1298                           
  1299                           ;lcd.c: 51: atraso_ms(3);
  1300  0012C6  0E00               	movlw	0
  1301  0012C8  6E02               	movwf	atraso_ms@valor+1,c
  1302  0012CA  0E03               	movlw	3
  1303  0012CC  6E01               	movwf	atraso_ms@valor,c
  1304  0012CE  EC23  F009         	call	_atraso_ms	;wreg free
  1305                           
  1306                           ;lcd.c: 52: PORTEbits.RE1=0;
  1307  0012D2  9284               	bcf	3972,1,c	;volatile
  1308                           
  1309                           ;lcd.c: 53: atraso_ms(3);
  1310  0012D4  0E00               	movlw	0
  1311  0012D6  6E02               	movwf	atraso_ms@valor+1,c
  1312  0012D8  0E03               	movlw	3
  1313  0012DA  6E01               	movwf	atraso_ms@valor,c
  1314  0012DC  EC23  F009         	call	_atraso_ms	;wreg free
  1315                           
  1316                           ;lcd.c: 54: PORTEbits.RE1=1;
  1317  0012E0  8284               	bsf	3972,1,c	;volatile
  1318  0012E2  0012               	return		;funcret
  1319  0012E4                     __end_of_lcd_dat:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           prodh	equ	0xFF4
  1326                           prodl	equ	0xFF3
  1327                           indf0	equ	0xFEF
  1328                           postinc0	equ	0xFEE
  1329                           fsr0h	equ	0xFEA
  1330                           fsr0l	equ	0xFE9
  1331                           wreg	equ	0xFE8
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _lcd_cmd *****************
  1335 ;; Defined at:
  1336 ;;		line 35 in file "lcd.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  val             1    wreg     unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  val             1    6[COMRAM] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0
  1351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1354 ;;Total ram usage:        1 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    1
  1357 ;; This function calls:
  1358 ;;		_atraso_ms
  1359 ;;		_lcd_wr
  1360 ;; This function is called by:
  1361 ;;		_lcd_init
  1362 ;;		_setup
  1363 ;;		_loop
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text9
  1368  0012E4                     __ptext9:
  1369                           	opt stack 0
  1370  0012E4                     _lcd_cmd:
  1371                           	opt stack 27
  1372                           
  1373                           ;incstack = 0
  1374                           ;lcd_cmd@val stored from wreg
  1375  0012E4  6E07               	movwf	lcd_cmd@val,c
  1376                           
  1377                           ;lcd.c: 37: PORTEbits.RE1=1;
  1378  0012E6  8284               	bsf	3972,1,c	;volatile
  1379                           
  1380                           ;lcd.c: 38: lcd_wr(val);
  1381  0012E8  5007               	movf	lcd_cmd@val,w,c
  1382  0012EA  ECC7  F009         	call	_lcd_wr
  1383                           
  1384                           ;lcd.c: 39: PORTEbits.RE2=0;
  1385  0012EE  9484               	bcf	3972,2,c	;volatile
  1386                           
  1387                           ;lcd.c: 40: atraso_ms(3);
  1388  0012F0  0E00               	movlw	0
  1389  0012F2  6E02               	movwf	atraso_ms@valor+1,c
  1390  0012F4  0E03               	movlw	3
  1391  0012F6  6E01               	movwf	atraso_ms@valor,c
  1392  0012F8  EC23  F009         	call	_atraso_ms	;wreg free
  1393                           
  1394                           ;lcd.c: 41: PORTEbits.RE1=0;
  1395  0012FC  9284               	bcf	3972,1,c	;volatile
  1396                           
  1397                           ;lcd.c: 42: atraso_ms(3);
  1398  0012FE  0E00               	movlw	0
  1399  001300  6E02               	movwf	atraso_ms@valor+1,c
  1400  001302  0E03               	movlw	3
  1401  001304  6E01               	movwf	atraso_ms@valor,c
  1402  001306  EC23  F009         	call	_atraso_ms	;wreg free
  1403                           
  1404                           ;lcd.c: 43: PORTEbits.RE1=1;
  1405  00130A  8284               	bsf	3972,1,c	;volatile
  1406  00130C  0012               	return		;funcret
  1407  00130E                     __end_of_lcd_cmd:
  1408                           	opt stack 0
  1409                           tblptru	equ	0xFF8
  1410                           tblptrh	equ	0xFF7
  1411                           tblptrl	equ	0xFF6
  1412                           tablat	equ	0xFF5
  1413                           prodh	equ	0xFF4
  1414                           prodl	equ	0xFF3
  1415                           indf0	equ	0xFEF
  1416                           postinc0	equ	0xFEE
  1417                           fsr0h	equ	0xFEA
  1418                           fsr0l	equ	0xFE9
  1419                           wreg	equ	0xFE8
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _lcd_wr *****************
  1423 ;; Defined at:
  1424 ;;		line 30 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  val             1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  val             1    0[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1438 ;;      Params:         0       0       0       0       0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1441 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_lcd_cmd
  1448 ;;		_lcd_dat
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text10
  1453  00138E                     __ptext10:
  1454                           	opt stack 0
  1455  00138E                     _lcd_wr:
  1456                           	opt stack 27
  1457                           
  1458                           ;incstack = 0
  1459                           ;lcd_wr@val stored from wreg
  1460  00138E  6E01               	movwf	lcd_wr@val,c
  1461                           
  1462                           ;lcd.c: 32: PORTD=val;
  1463  001390  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  1464  001394  0012               	return		;funcret
  1465  001396                     __end_of_lcd_wr:
  1466                           	opt stack 0
  1467                           tblptru	equ	0xFF8
  1468                           tblptrh	equ	0xFF7
  1469                           tblptrl	equ	0xFF6
  1470                           tablat	equ	0xFF5
  1471                           prodh	equ	0xFF4
  1472                           prodl	equ	0xFF3
  1473                           indf0	equ	0xFEF
  1474                           postinc0	equ	0xFEE
  1475                           fsr0h	equ	0xFEA
  1476                           fsr0l	equ	0xFE9
  1477                           wreg	equ	0xFE8
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _atraso_ms *****************
  1481 ;; Defined at:
  1482 ;;		line 31 in file "atraso.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  valor           2    0[COMRAM] unsigned int 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  i               2    2[COMRAM] unsigned int 
  1487 ;;  j2              1    5[COMRAM] volatile unsigned char 
  1488 ;;  j1              1    4[COMRAM] volatile unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         2       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1501 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:        6 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_lcd_cmd
  1508 ;;		_lcd_dat
  1509 ;;		_lcd_init
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text11
  1514  001246                     __ptext11:
  1515                           	opt stack 0
  1516  001246                     _atraso_ms:
  1517                           	opt stack 27
  1518                           
  1519                           ;atraso.c: 33: unsigned int i;
  1520                           ;atraso.c: 34: volatile unsigned char j1;
  1521                           ;atraso.c: 35: volatile unsigned char j2=0;
  1522                           
  1523                           ;incstack = 0
  1524  001246  0E00               	movlw	0
  1525  001248  6E06               	movwf	atraso_ms@j2,c	;volatile
  1526                           
  1527                           ;atraso.c: 37: for (i =0; i< valor; i++)
  1528  00124A  0E00               	movlw	0
  1529  00124C  6E04               	movwf	atraso_ms@i+1,c
  1530  00124E  0E00               	movlw	0
  1531  001250  6E03               	movwf	atraso_ms@i,c
  1532  001252  D010               	goto	l1215
  1533  001254                     l1211:
  1534                           
  1535                           ;atraso.c: 38: {
  1536                           ;atraso.c: 39: j1=(8000000/(4000l*50));
  1537  001254  0E28               	movlw	40
  1538  001256  6E05               	movwf	atraso_ms@j1,c	;volatile
  1539  001258                     l1:
  1540  001258  0E09               	movlw	9	; 20 j1 ;# 
  1541  00125A  6F06               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
  1542  00125C  F000               	nop		; 180 j2j1 ;# 
  1543  00125E  F000               	nop		; 180 j2j1 ;# 
  1544  001260  2F06               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
  1545                           
  1546                           ; 40 2j1 ;# 
  1547  001262  EF2F  F009         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
  1548  001266  F000               	nop		; 20 j1 ;# 
  1549  001268  2F05               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
  1550                           
  1551                           ; 2 2 ;# 
  1552  00126A  EF2C  F009         	goto	l1	; 38 2j1 -2 ;# 
  1553  00126E  F000               	nop		; 1 1 ;# 
  1554  001270  4A03               	infsnz	atraso_ms@i,f,c
  1555  001272  2A04               	incf	atraso_ms@i+1,f,c
  1556  001274                     l1215:
  1557  001274  5001               	movf	atraso_ms@valor,w,c
  1558  001276  5C03               	subwf	atraso_ms@i,w,c
  1559  001278  5002               	movf	atraso_ms@valor+1,w,c
  1560  00127A  5804               	subwfb	atraso_ms@i+1,w,c
  1561  00127C  B0D8               	btfsc	status,0,c
  1562  00127E  0012               	return	
  1563  001280  D7E9               	goto	l1211
  1564  001282                     __end_of_atraso_ms:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           tblptrh	equ	0xFF7
  1568                           tblptrl	equ	0xFF6
  1569                           tablat	equ	0xFF5
  1570                           prodh	equ	0xFF4
  1571                           prodl	equ	0xFF3
  1572                           indf0	equ	0xFEF
  1573                           postinc0	equ	0xFEE
  1574                           fsr0h	equ	0xFEA
  1575                           fsr0l	equ	0xFE9
  1576                           wreg	equ	0xFE8
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _itoa *****************
  1580 ;; Defined at:
  1581 ;;		line 26 in file "itoa.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  val             2   26[COMRAM] unsigned int 
  1584 ;;  str             2   28[COMRAM] PTR unsigned char 
  1585 ;;		 -> buffer(6), 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  2   26[COMRAM] PTR unsigned char 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         4       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        4 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    1
  1604 ;; This function calls:
  1605 ;;		___lwdiv
  1606 ;;		___lwmod
  1607 ;; This function is called by:
  1608 ;;		_loop
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text12
  1613  00080A                     __ptext12:
  1614                           	opt stack 0
  1615  00080A                     _itoa:
  1616                           	opt stack 28
  1617                           
  1618                           ;itoa.c: 28: str[0]=(val/10000)+0x30;
  1619                           
  1620                           ;incstack = 0
  1621  00080A  C01B  F006         	movff	itoa@val,___lwdiv@dividend
  1622  00080E  C01C  F007         	movff	itoa@val+1,___lwdiv@dividend+1
  1623  000812  0E27               	movlw	39
  1624  000814  6E09               	movwf	___lwdiv@divisor+1,c
  1625  000816  0E10               	movlw	16
  1626  000818  6E08               	movwf	___lwdiv@divisor,c
  1627  00081A  ECD9  F008         	call	___lwdiv	;wreg free
  1628  00081E  5006               	movf	?___lwdiv,w,c
  1629  000820  0F30               	addlw	48
  1630  000822  C01D  FFD9         	movff	itoa@str,fsr2l
  1631  000826  C01E  FFDA         	movff	itoa@str+1,fsr2h
  1632  00082A  6EDF               	movwf	indf2,c
  1633                           
  1634                           ;itoa.c: 29: str[1]=((val%10000)/1000)+0x30;
  1635  00082C  EE20 F001          	lfsr	2,1
  1636  000830  501D               	movf	itoa@str,w,c
  1637  000832  26D9               	addwf	fsr2l,f,c
  1638  000834  501E               	movf	itoa@str+1,w,c
  1639  000836  22DA               	addwfc	fsr2h,f,c
  1640  000838  0E27               	movlw	39
  1641  00083A  6E04               	movwf	___lwmod@divisor+1,c
  1642  00083C  0E10               	movlw	16
  1643  00083E  6E03               	movwf	___lwmod@divisor,c
  1644  000840  C01B  F001         	movff	itoa@val,___lwmod@dividend
  1645  000844  C01C  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1646  000848  EC02  F009         	call	___lwmod	;wreg free
  1647  00084C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1648  000850  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1649  000854  0E03               	movlw	3
  1650  000856  6E09               	movwf	___lwdiv@divisor+1,c
  1651  000858  0EE8               	movlw	232
  1652  00085A  6E08               	movwf	___lwdiv@divisor,c
  1653  00085C  ECD9  F008         	call	___lwdiv	;wreg free
  1654  000860  5006               	movf	?___lwdiv,w,c
  1655  000862  0F30               	addlw	48
  1656  000864  6EDF               	movwf	indf2,c
  1657                           
  1658                           ;itoa.c: 30: str[2]=((val%1000)/100)+0x30;
  1659  000866  EE20 F002          	lfsr	2,2
  1660  00086A  501D               	movf	itoa@str,w,c
  1661  00086C  26D9               	addwf	fsr2l,f,c
  1662  00086E  501E               	movf	itoa@str+1,w,c
  1663  000870  22DA               	addwfc	fsr2h,f,c
  1664  000872  0E03               	movlw	3
  1665  000874  6E04               	movwf	___lwmod@divisor+1,c
  1666  000876  0EE8               	movlw	232
  1667  000878  6E03               	movwf	___lwmod@divisor,c
  1668  00087A  C01B  F001         	movff	itoa@val,___lwmod@dividend
  1669  00087E  C01C  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1670  000882  EC02  F009         	call	___lwmod	;wreg free
  1671  000886  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1672  00088A  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1673  00088E  0E00               	movlw	0
  1674  000890  6E09               	movwf	___lwdiv@divisor+1,c
  1675  000892  0E64               	movlw	100
  1676  000894  6E08               	movwf	___lwdiv@divisor,c
  1677  000896  ECD9  F008         	call	___lwdiv	;wreg free
  1678  00089A  5006               	movf	?___lwdiv,w,c
  1679  00089C  0F30               	addlw	48
  1680  00089E  6EDF               	movwf	indf2,c
  1681                           
  1682                           ;itoa.c: 31: str[3]=((val%100)/10)+0x30;
  1683  0008A0  EE20 F003          	lfsr	2,3
  1684  0008A4  501D               	movf	itoa@str,w,c
  1685  0008A6  26D9               	addwf	fsr2l,f,c
  1686  0008A8  501E               	movf	itoa@str+1,w,c
  1687  0008AA  22DA               	addwfc	fsr2h,f,c
  1688  0008AC  0E00               	movlw	0
  1689  0008AE  6E04               	movwf	___lwmod@divisor+1,c
  1690  0008B0  0E64               	movlw	100
  1691  0008B2  6E03               	movwf	___lwmod@divisor,c
  1692  0008B4  C01B  F001         	movff	itoa@val,___lwmod@dividend
  1693  0008B8  C01C  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1694  0008BC  EC02  F009         	call	___lwmod	;wreg free
  1695  0008C0  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  1696  0008C4  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  1697  0008C8  0E00               	movlw	0
  1698  0008CA  6E09               	movwf	___lwdiv@divisor+1,c
  1699  0008CC  0E0A               	movlw	10
  1700  0008CE  6E08               	movwf	___lwdiv@divisor,c
  1701  0008D0  ECD9  F008         	call	___lwdiv	;wreg free
  1702  0008D4  5006               	movf	?___lwdiv,w,c
  1703  0008D6  0F30               	addlw	48
  1704  0008D8  6EDF               	movwf	indf2,c
  1705                           
  1706                           ;itoa.c: 32: str[4]=(val%10)+0x30;
  1707  0008DA  EE20 F004          	lfsr	2,4
  1708  0008DE  501D               	movf	itoa@str,w,c
  1709  0008E0  26D9               	addwf	fsr2l,f,c
  1710  0008E2  501E               	movf	itoa@str+1,w,c
  1711  0008E4  22DA               	addwfc	fsr2h,f,c
  1712  0008E6  C01B  F001         	movff	itoa@val,___lwmod@dividend
  1713  0008EA  C01C  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1714  0008EE  0E00               	movlw	0
  1715  0008F0  6E04               	movwf	___lwmod@divisor+1,c
  1716  0008F2  0E0A               	movlw	10
  1717  0008F4  6E03               	movwf	___lwmod@divisor,c
  1718  0008F6  EC02  F009         	call	___lwmod	;wreg free
  1719  0008FA  5001               	movf	?___lwmod,w,c
  1720  0008FC  0F30               	addlw	48
  1721  0008FE  6EDF               	movwf	indf2,c
  1722                           
  1723                           ;itoa.c: 33: str[5]=0;
  1724  000900  EE20 F005          	lfsr	2,5
  1725  000904  501D               	movf	itoa@str,w,c
  1726  000906  26D9               	addwf	fsr2l,f,c
  1727  000908  501E               	movf	itoa@str+1,w,c
  1728  00090A  22DA               	addwfc	fsr2h,f,c
  1729  00090C  0E00               	movlw	0
  1730  00090E  6EDF               	movwf	indf2,c
  1731  000910  0012               	return	
  1732  000912                     __end_of_itoa:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           indf0	equ	0xFEF
  1741                           postinc0	equ	0xFEE
  1742                           fsr0h	equ	0xFEA
  1743                           fsr0l	equ	0xFE9
  1744                           wreg	equ	0xFE8
  1745                           indf2	equ	0xFDF
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function ___lwmod *****************
  1751 ;; Defined at:
  1752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  dividend        2    0[COMRAM] unsigned int 
  1755 ;;  divisor         2    2[COMRAM] unsigned int 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  counter         1    4[COMRAM] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2    0[COMRAM] unsigned int 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1767 ;;      Params:         4       0       0       0       0       0       0       0       0
  1768 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1769 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1770 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1771 ;;Total ram usage:        5 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_itoa
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text13
  1781  001204                     __ptext13:
  1782                           	opt stack 0
  1783  001204                     ___lwmod:
  1784                           	opt stack 28
  1785                           
  1786                           ;incstack = 0
  1787  001204  5003               	movf	___lwmod@divisor,w,c
  1788  001206  1004               	iorwf	___lwmod@divisor+1,w,c
  1789  001208  B4D8               	btfsc	status,2,c
  1790  00120A  D018               	goto	l560
  1791  00120C  0E01               	movlw	1
  1792  00120E  6E05               	movwf	___lwmod@counter,c
  1793  001210  D004               	goto	l1385
  1794  001212                     l1383:
  1795  001212  90D8               	bcf	status,0,c
  1796  001214  3603               	rlcf	___lwmod@divisor,f,c
  1797  001216  3604               	rlcf	___lwmod@divisor+1,f,c
  1798  001218  2A05               	incf	___lwmod@counter,f,c
  1799  00121A                     l1385:
  1800  00121A  AE04               	btfss	___lwmod@divisor+1,7,c
  1801  00121C  D7FA               	goto	l1383
  1802  00121E                     l1387:
  1803  00121E  5003               	movf	___lwmod@divisor,w,c
  1804  001220  5C01               	subwf	___lwmod@dividend,w,c
  1805  001222  5004               	movf	___lwmod@divisor+1,w,c
  1806  001224  5802               	subwfb	___lwmod@dividend+1,w,c
  1807  001226  A0D8               	btfss	status,0,c
  1808  001228  D004               	goto	l1391
  1809  00122A  5003               	movf	___lwmod@divisor,w,c
  1810  00122C  5E01               	subwf	___lwmod@dividend,f,c
  1811  00122E  5004               	movf	___lwmod@divisor+1,w,c
  1812  001230  5A02               	subwfb	___lwmod@dividend+1,f,c
  1813  001232                     l1391:
  1814  001232  90D8               	bcf	status,0,c
  1815  001234  3204               	rrcf	___lwmod@divisor+1,f,c
  1816  001236  3203               	rrcf	___lwmod@divisor,f,c
  1817  001238  2E05               	decfsz	___lwmod@counter,f,c
  1818  00123A  D7F1               	goto	l1387
  1819  00123C                     l560:
  1820  00123C  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1821  001240  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1822  001244  0012               	return		;funcret
  1823  001246                     __end_of___lwmod:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           prodh	equ	0xFF4
  1830                           prodl	equ	0xFF3
  1831                           indf0	equ	0xFEF
  1832                           postinc0	equ	0xFEE
  1833                           fsr0h	equ	0xFEA
  1834                           fsr0l	equ	0xFE9
  1835                           wreg	equ	0xFE8
  1836                           indf2	equ	0xFDF
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function ___lwdiv *****************
  1842 ;; Defined at:
  1843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  dividend        2    5[COMRAM] unsigned int 
  1846 ;;  divisor         2    7[COMRAM] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  quotient        2    9[COMRAM] unsigned int 
  1849 ;;  counter         1   11[COMRAM] unsigned char 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  2    5[COMRAM] unsigned int 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1859 ;;      Params:         4       0       0       0       0       0       0       0       0
  1860 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1862 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1863 ;;Total ram usage:        7 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_itoa
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text14
  1873  0011B2                     __ptext14:
  1874                           	opt stack 0
  1875  0011B2                     ___lwdiv:
  1876                           	opt stack 28
  1877                           
  1878                           ;incstack = 0
  1879  0011B2  0E00               	movlw	0
  1880  0011B4  6E0B               	movwf	___lwdiv@quotient+1,c
  1881  0011B6  0E00               	movlw	0
  1882  0011B8  6E0A               	movwf	___lwdiv@quotient,c
  1883  0011BA  5008               	movf	___lwdiv@divisor,w,c
  1884  0011BC  1009               	iorwf	___lwdiv@divisor+1,w,c
  1885  0011BE  B4D8               	btfsc	status,2,c
  1886  0011C0  D01C               	goto	l550
  1887  0011C2  0E01               	movlw	1
  1888  0011C4  6E0C               	movwf	___lwdiv@counter,c
  1889  0011C6  D004               	goto	l1365
  1890  0011C8                     l1363:
  1891  0011C8  90D8               	bcf	status,0,c
  1892  0011CA  3608               	rlcf	___lwdiv@divisor,f,c
  1893  0011CC  3609               	rlcf	___lwdiv@divisor+1,f,c
  1894  0011CE  2A0C               	incf	___lwdiv@counter,f,c
  1895  0011D0                     l1365:
  1896  0011D0  AE09               	btfss	___lwdiv@divisor+1,7,c
  1897  0011D2  D7FA               	goto	l1363
  1898  0011D4                     l1367:
  1899  0011D4  90D8               	bcf	status,0,c
  1900  0011D6  360A               	rlcf	___lwdiv@quotient,f,c
  1901  0011D8  360B               	rlcf	___lwdiv@quotient+1,f,c
  1902  0011DA  5008               	movf	___lwdiv@divisor,w,c
  1903  0011DC  5C06               	subwf	___lwdiv@dividend,w,c
  1904  0011DE  5009               	movf	___lwdiv@divisor+1,w,c
  1905  0011E0  5807               	subwfb	___lwdiv@dividend+1,w,c
  1906  0011E2  A0D8               	btfss	status,0,c
  1907  0011E4  D005               	goto	l1375
  1908  0011E6  5008               	movf	___lwdiv@divisor,w,c
  1909  0011E8  5E06               	subwf	___lwdiv@dividend,f,c
  1910  0011EA  5009               	movf	___lwdiv@divisor+1,w,c
  1911  0011EC  5A07               	subwfb	___lwdiv@dividend+1,f,c
  1912  0011EE  800A               	bsf	___lwdiv@quotient,0,c
  1913  0011F0                     l1375:
  1914  0011F0  90D8               	bcf	status,0,c
  1915  0011F2  3209               	rrcf	___lwdiv@divisor+1,f,c
  1916  0011F4  3208               	rrcf	___lwdiv@divisor,f,c
  1917  0011F6  2E0C               	decfsz	___lwdiv@counter,f,c
  1918  0011F8  D7ED               	goto	l1367
  1919  0011FA                     l550:
  1920  0011FA  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  1921  0011FE  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1922  001202  0012               	return		;funcret
  1923  001204                     __end_of___lwdiv:
  1924                           	opt stack 0
  1925                           tblptru	equ	0xFF8
  1926                           tblptrh	equ	0xFF7
  1927                           tblptrl	equ	0xFF6
  1928                           tablat	equ	0xFF5
  1929                           prodh	equ	0xFF4
  1930                           prodl	equ	0xFF3
  1931                           indf0	equ	0xFEF
  1932                           postinc0	equ	0xFEE
  1933                           fsr0h	equ	0xFEA
  1934                           fsr0l	equ	0xFE9
  1935                           wreg	equ	0xFE8
  1936                           indf2	equ	0xFDF
  1937                           fsr2h	equ	0xFDA
  1938                           fsr2l	equ	0xFD9
  1939                           status	equ	0xFD8
  1940                           
  1941 ;; *************** function _adc_amostra *****************
  1942 ;; Defined at:
  1943 ;;		line 44 in file "adc.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  canal           1    wreg     unsigned char 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  canal           1    6[COMRAM] unsigned char 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  2    0[COMRAM] unsigned int 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1957 ;;      Params:         2       0       0       0       0       0       0       0       0
  1958 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1959 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1960 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1961 ;;Total ram usage:        7 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_loop
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           	psect	text15
  1971  001102                     __ptext15:
  1972                           	opt stack 0
  1973  001102                     _adc_amostra:
  1974                           	opt stack 29
  1975                           
  1976                           ;incstack = 0
  1977                           ;adc_amostra@canal stored from wreg
  1978  001102  6E07               	movwf	adc_amostra@canal,c
  1979                           
  1980                           ;adc.c: 49: switch(canal)
  1981  001104  D007               	goto	l1453
  1982  001106                     l1445:
  1983                           
  1984                           ;adc.c: 52: ADCON0=0x01;
  1985  001106  0E01               	movlw	1
  1986  001108  D003               	goto	L2
  1987  00110A                     l1447:
  1988                           
  1989                           ;adc.c: 55: ADCON0=0x05;
  1990  00110A  0E05               	movlw	5
  1991  00110C  D001               	goto	L2
  1992  00110E                     l1449:
  1993                           
  1994                           ;adc.c: 58: ADCON0=0x09;
  1995  00110E  0E09               	movlw	9
  1996  001110                     L2:
  1997  001110  6EC2               	movwf	4034,c	;volatile
  1998                           
  1999                           ;adc.c: 60: }
  2000                           
  2001                           ;adc.c: 59: break;
  2002  001112  D00A               	goto	l102
  2003  001114                     l1453:
  2004  001114  5007               	movf	adc_amostra@canal,w,c
  2005                           
  2006                           ; Switch size 1, requested type "space"
  2007                           ; Number of cases is 3, Range of values is 0 to 2
  2008                           ; switch strategies available:
  2009                           ; Name         Instructions Cycles
  2010                           ; simple_byte           10     6 (average)
  2011                           ;	Chosen strategy is simple_byte
  2012  001116  0A00               	xorlw	0	; case 0
  2013  001118  B4D8               	btfsc	status,2,c
  2014  00111A  D7F5               	goto	l1445
  2015  00111C  0A01               	xorlw	1	; case 1
  2016  00111E  B4D8               	btfsc	status,2,c
  2017  001120  D7F4               	goto	l1447
  2018  001122  0A03               	xorlw	3	; case 2
  2019  001124  B4D8               	btfsc	status,2,c
  2020  001126  D7F3               	goto	l1449
  2021  001128                     l102:
  2022                           
  2023                           ;adc.c: 77: ADCON0bits.GO=1;
  2024  001128  82C2               	bsf	4034,1,c	;volatile
  2025  00112A                     l105:
  2026  00112A  B2C2               	btfsc	4034,1,c	;volatile
  2027  00112C  D7FE               	goto	l105
  2028                           
  2029                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  2030  00112E  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  2031  001132  0E06               	movlw	6
  2032  001134  6E04               	movwf	(??_adc_amostra+1)& (0+255),c
  2033  001136                     u915:
  2034  001136  90D8               	bcf	status,0,c
  2035  001138  3203               	rrcf	??_adc_amostra,f,c
  2036  00113A  2E04               	decfsz	(??_adc_amostra+1)& (0+255),f,c
  2037  00113C  D7FC               	goto	u915
  2038  00113E  5003               	movf	??_adc_amostra,w,c
  2039  001140  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  2040  001144  6A06               	clrf	(??_adc_amostra+3)& (0+255),c
  2041  001146  90D8               	bcf	status,0,c
  2042  001148  3605               	rlcf	??_adc_amostra+2,f,c
  2043  00114A  3606               	rlcf	??_adc_amostra+3,f,c
  2044  00114C  90D8               	bcf	status,0,c
  2045  00114E  3605               	rlcf	??_adc_amostra+2,f,c
  2046  001150  3606               	rlcf	??_adc_amostra+3,f,c
  2047  001152  1005               	iorwf	??_adc_amostra+2,w,c
  2048  001154  6E01               	movwf	?_adc_amostra,c
  2049  001156  5006               	movf	??_adc_amostra+3,w,c
  2050  001158  6E02               	movwf	?_adc_amostra+1,c
  2051  00115A  0012               	return	
  2052  00115C                     __end_of_adc_amostra:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           indf0	equ	0xFEF
  2061                           postinc0	equ	0xFEE
  2062                           fsr0h	equ	0xFEA
  2063                           fsr0l	equ	0xFE9
  2064                           wreg	equ	0xFE8
  2065                           indf2	equ	0xFDF
  2066                           fsr2h	equ	0xFDA
  2067                           fsr2l	equ	0xFD9
  2068                           status	equ	0xFD8
  2069                           
  2070 ;; *************** function ___lwtoft *****************
  2071 ;; Defined at:
  2072 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwtoft.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  c               2    8[COMRAM] unsigned int 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;		None
  2077 ;; Return value:  Size  Location     Type
  2078 ;;                  3    8[COMRAM] float 
  2079 ;; Registers used:
  2080 ;;		wreg, status,2, status,0, cstack
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2086 ;;      Params:         3       0       0       0       0       0       0       0       0
  2087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2089 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2090 ;;Total ram usage:        3 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; Hardware stack levels required when called:    1
  2093 ;; This function calls:
  2094 ;;		___ftpack
  2095 ;; This function is called by:
  2096 ;;		_loop
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text16
  2101  00130E                     __ptext16:
  2102                           	opt stack 0
  2103  00130E                     ___lwtoft:
  2104                           	opt stack 28
  2105                           
  2106                           ;incstack = 0
  2107  00130E  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  2108  001312  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  2109  001316  6A03               	clrf	___ftpack@arg+2,c
  2110  001318  0E8E               	movlw	142
  2111  00131A  6E04               	movwf	___ftpack@exp,c
  2112  00131C  0E00               	movlw	0
  2113  00131E  6E05               	movwf	___ftpack@sign,c
  2114  001320  EC34  F007         	call	___ftpack	;wreg free
  2115  001324  C001  F009         	movff	?___ftpack,?___lwtoft
  2116  001328  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  2117  00132C  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  2118  001330  0012               	return	
  2119  001332                     __end_of___lwtoft:
  2120                           	opt stack 0
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           indf0	equ	0xFEF
  2128                           postinc0	equ	0xFEE
  2129                           fsr0h	equ	0xFEA
  2130                           fsr0l	equ	0xFE9
  2131                           wreg	equ	0xFE8
  2132                           indf2	equ	0xFDF
  2133                           fsr2h	equ	0xFDA
  2134                           fsr2l	equ	0xFD9
  2135                           status	equ	0xFD8
  2136                           
  2137 ;; *************** function ___fttol *****************
  2138 ;; Defined at:
  2139 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  f1              3   41[COMRAM] float 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  lval            4   51[COMRAM] unsigned long 
  2144 ;;  exp1            1   55[COMRAM] unsigned char 
  2145 ;;  sign1           1   50[COMRAM] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  4   41[COMRAM] long 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2155 ;;      Params:         4       0       0       0       0       0       0       0       0
  2156 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2157 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2158 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2159 ;;Total ram usage:       15 bytes
  2160 ;; Hardware stack levels used:    1
  2161 ;; This function calls:
  2162 ;;		Nothing
  2163 ;; This function is called by:
  2164 ;;		_loop
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text17
  2169  000912                     __ptext17:
  2170                           	opt stack 0
  2171  000912                     ___fttol:
  2172                           	opt stack 29
  2173                           
  2174                           ;incstack = 0
  2175  000912  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  2176  000916  6A2F               	clrf	(??___fttol+1)& (0+255),c
  2177  000918  6A30               	clrf	(??___fttol+2)& (0+255),c
  2178  00091A  342B               	rlcf	___fttol@f1+1,w,c
  2179  00091C  362E               	rlcf	??___fttol& (0+255),f,c
  2180  00091E  E301               	bnc	u1031
  2181  000920  802F               	bsf	(??___fttol+1)& (0+255),0,c
  2182  000922                     u1031:
  2183  000922  502E               	movf	??___fttol,w,c
  2184  000924  6E38               	movwf	___fttol@exp1,c
  2185  000926  5038               	movf	___fttol@exp1,w,c
  2186  000928  A4D8               	btfss	status,2,c
  2187  00092A  D009               	goto	l1565
  2188  00092C  0E00               	movlw	0
  2189  00092E  6E2A               	movwf	?___fttol,c
  2190  000930  0E00               	movlw	0
  2191  000932  6E2B               	movwf	?___fttol+1,c
  2192  000934  0E00               	movlw	0
  2193  000936  6E2C               	movwf	?___fttol+2,c
  2194  000938  0E00               	movlw	0
  2195  00093A  6E2D               	movwf	?___fttol+3,c
  2196  00093C  0012               	return	
  2197  00093E                     l1565:
  2198  00093E  0E17               	movlw	23
  2199  000940  6E2E               	movwf	??___fttol& (0+255),c
  2200  000942  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  2201  000946  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  2202  00094A  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  2203  00094E  282E               	incf	??___fttol,w,c
  2204  000950  6E32               	movwf	(??___fttol+4)& (0+255),c
  2205  000952  D004               	goto	u1050
  2206  000954                     u1055:
  2207  000954  90D8               	bcf	status,0,c
  2208  000956  3231               	rrcf	??___fttol+3,f,c
  2209  000958  3230               	rrcf	??___fttol+2,f,c
  2210  00095A  322F               	rrcf	??___fttol+1,f,c
  2211  00095C                     u1050:
  2212  00095C  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  2213  00095E  D7FA               	goto	u1055
  2214  000960  502F               	movf	??___fttol+1,w,c
  2215  000962  6E33               	movwf	___fttol@sign1,c
  2216  000964  8E2B               	bsf	___fttol@f1+1,7,c
  2217  000966  0EFF               	movlw	255
  2218  000968  162A               	andwf	___fttol@f1,f,c
  2219  00096A  0EFF               	movlw	255
  2220  00096C  162B               	andwf	___fttol@f1+1,f,c
  2221  00096E  0E00               	movlw	0
  2222  000970  162C               	andwf	___fttol@f1+2,f,c
  2223  000972  502A               	movf	___fttol@f1,w,c
  2224  000974  6E34               	movwf	___fttol@lval,c
  2225  000976  502B               	movf	___fttol@f1+1,w,c
  2226  000978  6E35               	movwf	___fttol@lval+1,c
  2227  00097A  502C               	movf	___fttol@f1+2,w,c
  2228  00097C  6E36               	movwf	___fttol@lval+2,c
  2229  00097E  6A37               	clrf	___fttol@lval+3,c
  2230  000980  0E8E               	movlw	142
  2231  000982  5E38               	subwf	___fttol@exp1,f,c
  2232  000984  AE38               	btfss	___fttol@exp1,7,c
  2233  000986  D016               	goto	l1587
  2234  000988  5038               	movf	___fttol@exp1,w,c
  2235  00098A  0A80               	xorlw	128
  2236  00098C  0F8F               	addlw	143
  2237  00098E  B0D8               	btfsc	status,0,c
  2238  000990  D009               	goto	l1583
  2239  000992  0E00               	movlw	0
  2240  000994  6E2A               	movwf	?___fttol,c
  2241  000996  0E00               	movlw	0
  2242  000998  6E2B               	movwf	?___fttol+1,c
  2243  00099A  0E00               	movlw	0
  2244  00099C  6E2C               	movwf	?___fttol+2,c
  2245  00099E  0E00               	movlw	0
  2246  0009A0  6E2D               	movwf	?___fttol+3,c
  2247  0009A2  0012               	return	
  2248  0009A4                     l1583:
  2249  0009A4  90D8               	bcf	status,0,c
  2250  0009A6  3237               	rrcf	___fttol@lval+3,f,c
  2251  0009A8  3236               	rrcf	___fttol@lval+2,f,c
  2252  0009AA  3235               	rrcf	___fttol@lval+1,f,c
  2253  0009AC  3234               	rrcf	___fttol@lval,f,c
  2254  0009AE  3E38               	incfsz	___fttol@exp1,f,c
  2255  0009B0  D7F9               	goto	l1583
  2256  0009B2  D015               	goto	l1597
  2257  0009B4                     l1587:
  2258  0009B4  0E17               	movlw	23
  2259  0009B6  6438               	cpfsgt	___fttol@exp1,c
  2260  0009B8  D00F               	goto	l1595
  2261  0009BA  0E00               	movlw	0
  2262  0009BC  6E2A               	movwf	?___fttol,c
  2263  0009BE  0E00               	movlw	0
  2264  0009C0  6E2B               	movwf	?___fttol+1,c
  2265  0009C2  0E00               	movlw	0
  2266  0009C4  6E2C               	movwf	?___fttol+2,c
  2267  0009C6  0E00               	movlw	0
  2268  0009C8  6E2D               	movwf	?___fttol+3,c
  2269  0009CA  0012               	return	
  2270  0009CC                     l1593:
  2271  0009CC  90D8               	bcf	status,0,c
  2272  0009CE  3634               	rlcf	___fttol@lval,f,c
  2273  0009D0  3635               	rlcf	___fttol@lval+1,f,c
  2274  0009D2  3636               	rlcf	___fttol@lval+2,f,c
  2275  0009D4  3637               	rlcf	___fttol@lval+3,f,c
  2276  0009D6  0638               	decf	___fttol@exp1,f,c
  2277  0009D8                     l1595:
  2278  0009D8  5038               	movf	___fttol@exp1,w,c
  2279  0009DA  A4D8               	btfss	status,2,c
  2280  0009DC  D7F7               	goto	l1593
  2281  0009DE                     l1597:
  2282  0009DE  5033               	movf	___fttol@sign1,w,c
  2283  0009E0  B4D8               	btfsc	status,2,c
  2284  0009E2  D008               	goto	l1601
  2285  0009E4  1E37               	comf	___fttol@lval+3,f,c
  2286  0009E6  1E36               	comf	___fttol@lval+2,f,c
  2287  0009E8  1E35               	comf	___fttol@lval+1,f,c
  2288  0009EA  6C34               	negf	___fttol@lval,c
  2289  0009EC  0E00               	movlw	0
  2290  0009EE  2235               	addwfc	___fttol@lval+1,f,c
  2291  0009F0  2236               	addwfc	___fttol@lval+2,f,c
  2292  0009F2  2237               	addwfc	___fttol@lval+3,f,c
  2293  0009F4                     l1601:
  2294  0009F4  C034  F02A         	movff	___fttol@lval,?___fttol
  2295  0009F8  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  2296  0009FC  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  2297  000A00  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  2298  000A04  0012               	return	
  2299  000A06                     __end_of___fttol:
  2300                           	opt stack 0
  2301                           tblptru	equ	0xFF8
  2302                           tblptrh	equ	0xFF7
  2303                           tblptrl	equ	0xFF6
  2304                           tablat	equ	0xFF5
  2305                           prodh	equ	0xFF4
  2306                           prodl	equ	0xFF3
  2307                           indf0	equ	0xFEF
  2308                           postinc0	equ	0xFEE
  2309                           fsr0h	equ	0xFEA
  2310                           fsr0l	equ	0xFE9
  2311                           wreg	equ	0xFE8
  2312                           indf2	equ	0xFDF
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function ___ftmul *****************
  2318 ;; Defined at:
  2319 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  f1              3   26[COMRAM] float 
  2322 ;;  f2              3   29[COMRAM] float 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  2325 ;;  sign            1   40[COMRAM] unsigned char 
  2326 ;;  cntr            1   39[COMRAM] unsigned char 
  2327 ;;  exp             1   35[COMRAM] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  3   26[COMRAM] float 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2337 ;;      Params:         6       0       0       0       0       0       0       0       0
  2338 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2339 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2340 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2341 ;;Total ram usage:       15 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    1
  2344 ;; This function calls:
  2345 ;;		___ftpack
  2346 ;; This function is called by:
  2347 ;;		_loop
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           	psect	text18
  2352  000A06                     __ptext18:
  2353                           	opt stack 0
  2354  000A06                     ___ftmul:
  2355                           	opt stack 28
  2356                           
  2357                           ;incstack = 0
  2358  000A06  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  2359  000A0A  6A22               	clrf	(??___ftmul+1)& (0+255),c
  2360  000A0C  6A23               	clrf	(??___ftmul+2)& (0+255),c
  2361  000A0E  341C               	rlcf	___ftmul@f1+1,w,c
  2362  000A10  3621               	rlcf	??___ftmul& (0+255),f,c
  2363  000A12  E301               	bnc	u971
  2364  000A14  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  2365  000A16                     u971:
  2366  000A16  5021               	movf	??___ftmul,w,c
  2367  000A18  6E24               	movwf	___ftmul@exp,c
  2368  000A1A  5024               	movf	___ftmul@exp,w,c
  2369  000A1C  A4D8               	btfss	status,2,c
  2370  000A1E  D007               	goto	l1517
  2371  000A20  0E00               	movlw	0
  2372  000A22  6E1B               	movwf	?___ftmul,c
  2373  000A24  0E00               	movlw	0
  2374  000A26  6E1C               	movwf	?___ftmul+1,c
  2375  000A28  0E00               	movlw	0
  2376  000A2A  6E1D               	movwf	?___ftmul+2,c
  2377  000A2C  0012               	return	
  2378  000A2E                     l1517:
  2379  000A2E  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  2380  000A32  6A22               	clrf	(??___ftmul+1)& (0+255),c
  2381  000A34  6A23               	clrf	(??___ftmul+2)& (0+255),c
  2382  000A36  341F               	rlcf	___ftmul@f2+1,w,c
  2383  000A38  3621               	rlcf	??___ftmul& (0+255),f,c
  2384  000A3A  E301               	bnc	u991
  2385  000A3C  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  2386  000A3E                     u991:
  2387  000A3E  5021               	movf	??___ftmul,w,c
  2388  000A40  6E29               	movwf	___ftmul@sign,c
  2389  000A42  5029               	movf	___ftmul@sign,w,c
  2390  000A44  A4D8               	btfss	status,2,c
  2391  000A46  D007               	goto	l1523
  2392  000A48  0E00               	movlw	0
  2393  000A4A  6E1B               	movwf	?___ftmul,c
  2394  000A4C  0E00               	movlw	0
  2395  000A4E  6E1C               	movwf	?___ftmul+1,c
  2396  000A50  0E00               	movlw	0
  2397  000A52  6E1D               	movwf	?___ftmul+2,c
  2398  000A54  0012               	return	
  2399  000A56                     l1523:
  2400  000A56  5029               	movf	___ftmul@sign,w,c
  2401  000A58  0F7B               	addlw	123
  2402  000A5A  2624               	addwf	___ftmul@exp,f,c
  2403  000A5C  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  2404  000A60  5020               	movf	___ftmul@f2+2,w,c
  2405  000A62  1A29               	xorwf	___ftmul@sign,f,c
  2406  000A64  0E80               	movlw	128
  2407  000A66  1629               	andwf	___ftmul@sign,f,c
  2408  000A68  8E1C               	bsf	___ftmul@f1+1,7,c
  2409  000A6A  8E1F               	bsf	___ftmul@f2+1,7,c
  2410  000A6C  0EFF               	movlw	255
  2411  000A6E  161E               	andwf	___ftmul@f2,f,c
  2412  000A70  0EFF               	movlw	255
  2413  000A72  161F               	andwf	___ftmul@f2+1,f,c
  2414  000A74  0E00               	movlw	0
  2415  000A76  1620               	andwf	___ftmul@f2+2,f,c
  2416  000A78  0E00               	movlw	0
  2417  000A7A  6E25               	movwf	___ftmul@f3_as_product,c
  2418  000A7C  0E00               	movlw	0
  2419  000A7E  6E26               	movwf	___ftmul@f3_as_product+1,c
  2420  000A80  0E00               	movlw	0
  2421  000A82  6E27               	movwf	___ftmul@f3_as_product+2,c
  2422  000A84  0E07               	movlw	7
  2423  000A86  6E28               	movwf	___ftmul@cntr,c
  2424  000A88                     l1537:
  2425  000A88  A01B               	btfss	___ftmul@f1,0,c
  2426  000A8A  D006               	goto	l1541
  2427  000A8C  501E               	movf	___ftmul@f2,w,c
  2428  000A8E  2625               	addwf	___ftmul@f3_as_product,f,c
  2429  000A90  501F               	movf	___ftmul@f2+1,w,c
  2430  000A92  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  2431  000A94  5020               	movf	___ftmul@f2+2,w,c
  2432  000A96  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  2433  000A98                     l1541:
  2434  000A98  90D8               	bcf	status,0,c
  2435  000A9A  321D               	rrcf	___ftmul@f1+2,f,c
  2436  000A9C  321C               	rrcf	___ftmul@f1+1,f,c
  2437  000A9E  321B               	rrcf	___ftmul@f1,f,c
  2438  000AA0  90D8               	bcf	status,0,c
  2439  000AA2  361E               	rlcf	___ftmul@f2,f,c
  2440  000AA4  361F               	rlcf	___ftmul@f2+1,f,c
  2441  000AA6  3620               	rlcf	___ftmul@f2+2,f,c
  2442  000AA8  2E28               	decfsz	___ftmul@cntr,f,c
  2443  000AAA  D7EE               	goto	l1537
  2444  000AAC  0E09               	movlw	9
  2445  000AAE  6E28               	movwf	___ftmul@cntr,c
  2446  000AB0                     l1547:
  2447  000AB0  A01B               	btfss	___ftmul@f1,0,c
  2448  000AB2  D006               	goto	l1551
  2449  000AB4  501E               	movf	___ftmul@f2,w,c
  2450  000AB6  2625               	addwf	___ftmul@f3_as_product,f,c
  2451  000AB8  501F               	movf	___ftmul@f2+1,w,c
  2452  000ABA  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  2453  000ABC  5020               	movf	___ftmul@f2+2,w,c
  2454  000ABE  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  2455  000AC0                     l1551:
  2456  000AC0  90D8               	bcf	status,0,c
  2457  000AC2  321D               	rrcf	___ftmul@f1+2,f,c
  2458  000AC4  321C               	rrcf	___ftmul@f1+1,f,c
  2459  000AC6  321B               	rrcf	___ftmul@f1,f,c
  2460  000AC8  90D8               	bcf	status,0,c
  2461  000ACA  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  2462  000ACC  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  2463  000ACE  3225               	rrcf	___ftmul@f3_as_product,f,c
  2464  000AD0  2E28               	decfsz	___ftmul@cntr,f,c
  2465  000AD2  D7EE               	goto	l1547
  2466  000AD4  C025  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2467  000AD8  C026  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2468  000ADC  C027  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2469  000AE0  C024  F004         	movff	___ftmul@exp,___ftpack@exp
  2470  000AE4  C029  F005         	movff	___ftmul@sign,___ftpack@sign
  2471  000AE8  EC34  F007         	call	___ftpack	;wreg free
  2472  000AEC  C001  F01B         	movff	?___ftpack,?___ftmul
  2473  000AF0  C002  F01C         	movff	?___ftpack+1,?___ftmul+1
  2474  000AF4  C003  F01D         	movff	?___ftpack+2,?___ftmul+2
  2475  000AF8  0012               	return	
  2476  000AFA                     __end_of___ftmul:
  2477                           	opt stack 0
  2478                           tblptru	equ	0xFF8
  2479                           tblptrh	equ	0xFF7
  2480                           tblptrl	equ	0xFF6
  2481                           tablat	equ	0xFF5
  2482                           prodh	equ	0xFF4
  2483                           prodl	equ	0xFF3
  2484                           indf0	equ	0xFEF
  2485                           postinc0	equ	0xFEE
  2486                           fsr0h	equ	0xFEA
  2487                           fsr0l	equ	0xFE9
  2488                           wreg	equ	0xFE8
  2489                           indf2	equ	0xFDF
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function ___ftdiv *****************
  2495 ;; Defined at:
  2496 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftdiv.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  f1              3   11[COMRAM] float 
  2499 ;;  f2              3   14[COMRAM] float 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  f3              3   21[COMRAM] float 
  2502 ;;  sign            1   25[COMRAM] unsigned char 
  2503 ;;  exp             1   24[COMRAM] unsigned char 
  2504 ;;  cntr            1   20[COMRAM] unsigned char 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  3   11[COMRAM] float 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2514 ;;      Params:         6       0       0       0       0       0       0       0       0
  2515 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2516 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2517 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2518 ;;Total ram usage:       15 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    1
  2521 ;; This function calls:
  2522 ;;		___ftpack
  2523 ;; This function is called by:
  2524 ;;		_loop
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text19
  2529  000BE0                     __ptext19:
  2530                           	opt stack 0
  2531  000BE0                     ___ftdiv:
  2532                           	opt stack 28
  2533                           
  2534                           ;incstack = 0
  2535  000BE0  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  2536  000BE4  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  2537  000BE6  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  2538  000BE8  340D               	rlcf	___ftdiv@f1+1,w,c
  2539  000BEA  3612               	rlcf	??___ftdiv& (0+255),f,c
  2540  000BEC  E301               	bnc	u921
  2541  000BEE  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  2542  000BF0                     u921:
  2543  000BF0  5012               	movf	??___ftdiv,w,c
  2544  000BF2  6E19               	movwf	___ftdiv@exp,c
  2545  000BF4  5019               	movf	___ftdiv@exp,w,c
  2546  000BF6  A4D8               	btfss	status,2,c
  2547  000BF8  D007               	goto	l1471
  2548  000BFA  0E00               	movlw	0
  2549  000BFC  6E0C               	movwf	?___ftdiv,c
  2550  000BFE  0E00               	movlw	0
  2551  000C00  6E0D               	movwf	?___ftdiv+1,c
  2552  000C02  0E00               	movlw	0
  2553  000C04  6E0E               	movwf	?___ftdiv+2,c
  2554  000C06  0012               	return	
  2555  000C08                     l1471:
  2556  000C08  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  2557  000C0C  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  2558  000C0E  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  2559  000C10  3410               	rlcf	___ftdiv@f2+1,w,c
  2560  000C12  3612               	rlcf	??___ftdiv& (0+255),f,c
  2561  000C14  E301               	bnc	u941
  2562  000C16  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  2563  000C18                     u941:
  2564  000C18  5012               	movf	??___ftdiv,w,c
  2565  000C1A  6E1A               	movwf	___ftdiv@sign,c
  2566  000C1C  501A               	movf	___ftdiv@sign,w,c
  2567  000C1E  A4D8               	btfss	status,2,c
  2568  000C20  D007               	goto	l1477
  2569  000C22  0E00               	movlw	0
  2570  000C24  6E0C               	movwf	?___ftdiv,c
  2571  000C26  0E00               	movlw	0
  2572  000C28  6E0D               	movwf	?___ftdiv+1,c
  2573  000C2A  0E00               	movlw	0
  2574  000C2C  6E0E               	movwf	?___ftdiv+2,c
  2575  000C2E  0012               	return	
  2576  000C30                     l1477:
  2577  000C30  0E00               	movlw	0
  2578  000C32  6E16               	movwf	___ftdiv@f3,c
  2579  000C34  0E00               	movlw	0
  2580  000C36  6E17               	movwf	___ftdiv@f3+1,c
  2581  000C38  0E00               	movlw	0
  2582  000C3A  6E18               	movwf	___ftdiv@f3+2,c
  2583  000C3C  501A               	movf	___ftdiv@sign,w,c
  2584  000C3E  0F89               	addlw	137
  2585  000C40  5E19               	subwf	___ftdiv@exp,f,c
  2586  000C42  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  2587  000C46  5011               	movf	___ftdiv@f2+2,w,c
  2588  000C48  1A1A               	xorwf	___ftdiv@sign,f,c
  2589  000C4A  0E80               	movlw	128
  2590  000C4C  161A               	andwf	___ftdiv@sign,f,c
  2591  000C4E  8E0D               	bsf	___ftdiv@f1+1,7,c
  2592  000C50  0EFF               	movlw	255
  2593  000C52  160C               	andwf	___ftdiv@f1,f,c
  2594  000C54  0EFF               	movlw	255
  2595  000C56  160D               	andwf	___ftdiv@f1+1,f,c
  2596  000C58  0E00               	movlw	0
  2597  000C5A  160E               	andwf	___ftdiv@f1+2,f,c
  2598  000C5C  8E10               	bsf	___ftdiv@f2+1,7,c
  2599  000C5E  0EFF               	movlw	255
  2600  000C60  160F               	andwf	___ftdiv@f2,f,c
  2601  000C62  0EFF               	movlw	255
  2602  000C64  1610               	andwf	___ftdiv@f2+1,f,c
  2603  000C66  0E00               	movlw	0
  2604  000C68  1611               	andwf	___ftdiv@f2+2,f,c
  2605  000C6A  0E18               	movlw	24
  2606  000C6C  6E15               	movwf	___ftdiv@cntr,c
  2607  000C6E                     l1497:
  2608  000C6E  90D8               	bcf	status,0,c
  2609  000C70  3616               	rlcf	___ftdiv@f3,f,c
  2610  000C72  3617               	rlcf	___ftdiv@f3+1,f,c
  2611  000C74  3618               	rlcf	___ftdiv@f3+2,f,c
  2612  000C76  500F               	movf	___ftdiv@f2,w,c
  2613  000C78  5C0C               	subwf	___ftdiv@f1,w,c
  2614  000C7A  5010               	movf	___ftdiv@f2+1,w,c
  2615  000C7C  580D               	subwfb	___ftdiv@f1+1,w,c
  2616  000C7E  5011               	movf	___ftdiv@f2+2,w,c
  2617  000C80  580E               	subwfb	___ftdiv@f1+2,w,c
  2618  000C82  A0D8               	btfss	status,0,c
  2619  000C84  D007               	goto	l430
  2620  000C86  500F               	movf	___ftdiv@f2,w,c
  2621  000C88  5E0C               	subwf	___ftdiv@f1,f,c
  2622  000C8A  5010               	movf	___ftdiv@f2+1,w,c
  2623  000C8C  5A0D               	subwfb	___ftdiv@f1+1,f,c
  2624  000C8E  5011               	movf	___ftdiv@f2+2,w,c
  2625  000C90  5A0E               	subwfb	___ftdiv@f1+2,f,c
  2626  000C92  8016               	bsf	___ftdiv@f3,0,c
  2627  000C94                     l430:
  2628  000C94  90D8               	bcf	status,0,c
  2629  000C96  360C               	rlcf	___ftdiv@f1,f,c
  2630  000C98  360D               	rlcf	___ftdiv@f1+1,f,c
  2631  000C9A  360E               	rlcf	___ftdiv@f1+2,f,c
  2632  000C9C  2E15               	decfsz	___ftdiv@cntr,f,c
  2633  000C9E  D7E7               	goto	l1497
  2634  000CA0  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  2635  000CA4  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2636  000CA8  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2637  000CAC  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  2638  000CB0  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  2639  000CB4  EC34  F007         	call	___ftpack	;wreg free
  2640  000CB8  C001  F00C         	movff	?___ftpack,?___ftdiv
  2641  000CBC  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  2642  000CC0  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  2643  000CC4  0012               	return	
  2644  000CC6                     __end_of___ftdiv:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           prodh	equ	0xFF4
  2651                           prodl	equ	0xFF3
  2652                           indf0	equ	0xFEF
  2653                           postinc0	equ	0xFEE
  2654                           fsr0h	equ	0xFEA
  2655                           fsr0l	equ	0xFE9
  2656                           wreg	equ	0xFE8
  2657                           indf2	equ	0xFDF
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function ___ftpack *****************
  2663 ;; Defined at:
  2664 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  arg             3    0[COMRAM] unsigned um
  2667 ;;  exp             1    3[COMRAM] unsigned char 
  2668 ;;  sign            1    4[COMRAM] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  3    0[COMRAM] float 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2680 ;;      Params:         5       0       0       0       0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2682 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2683 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2684 ;;Total ram usage:        8 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; This function calls:
  2687 ;;		Nothing
  2688 ;; This function is called by:
  2689 ;;		___ftdiv
  2690 ;;		___ftmul
  2691 ;;		___lwtoft
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text20
  2696  000E68                     __ptext20:
  2697                           	opt stack 0
  2698  000E68                     ___ftpack:
  2699                           	opt stack 28
  2700                           
  2701                           ;incstack = 0
  2702  000E68  5004               	movf	___ftpack@exp,w,c
  2703  000E6A  B4D8               	btfsc	status,2,c
  2704  000E6C  D005               	goto	l1259
  2705  000E6E  5001               	movf	___ftpack@arg,w,c
  2706  000E70  1002               	iorwf	___ftpack@arg+1,w,c
  2707  000E72  1003               	iorwf	___ftpack@arg+2,w,c
  2708  000E74  A4D8               	btfss	status,2,c
  2709  000E76  D00C               	goto	l1265
  2710  000E78                     l1259:
  2711  000E78  0E00               	movlw	0
  2712  000E7A  6E01               	movwf	?___ftpack,c
  2713  000E7C  0E00               	movlw	0
  2714  000E7E  6E02               	movwf	?___ftpack+1,c
  2715  000E80  0E00               	movlw	0
  2716  000E82  6E03               	movwf	?___ftpack+2,c
  2717  000E84  0012               	return	
  2718  000E86                     l1263:
  2719  000E86  2A04               	incf	___ftpack@exp,f,c
  2720  000E88  90D8               	bcf	status,0,c
  2721  000E8A  3203               	rrcf	___ftpack@arg+2,f,c
  2722  000E8C  3202               	rrcf	___ftpack@arg+1,f,c
  2723  000E8E  3201               	rrcf	___ftpack@arg,f,c
  2724  000E90                     l1265:
  2725  000E90  0E00               	movlw	0
  2726  000E92  1401               	andwf	___ftpack@arg,w,c
  2727  000E94  6E06               	movwf	??___ftpack& (0+255),c
  2728  000E96  0E00               	movlw	0
  2729  000E98  1402               	andwf	___ftpack@arg+1,w,c
  2730  000E9A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2731  000E9C  0EFE               	movlw	254
  2732  000E9E  1403               	andwf	___ftpack@arg+2,w,c
  2733  000EA0  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2734  000EA2  5006               	movf	??___ftpack,w,c
  2735  000EA4  1007               	iorwf	??___ftpack+1,w,c
  2736  000EA6  1008               	iorwf	??___ftpack+2,w,c
  2737  000EA8  B4D8               	btfsc	status,2,c
  2738  000EAA  D00C               	goto	l1271
  2739  000EAC  D7EC               	goto	l1263
  2740  000EAE                     l1267:
  2741  000EAE  2A04               	incf	___ftpack@exp,f,c
  2742  000EB0  0E01               	movlw	1
  2743  000EB2  2601               	addwf	___ftpack@arg,f,c
  2744  000EB4  0E00               	movlw	0
  2745  000EB6  2202               	addwfc	___ftpack@arg+1,f,c
  2746  000EB8  0E00               	movlw	0
  2747  000EBA  2203               	addwfc	___ftpack@arg+2,f,c
  2748  000EBC  90D8               	bcf	status,0,c
  2749  000EBE  3203               	rrcf	___ftpack@arg+2,f,c
  2750  000EC0  3202               	rrcf	___ftpack@arg+1,f,c
  2751  000EC2  3201               	rrcf	___ftpack@arg,f,c
  2752  000EC4                     l1271:
  2753  000EC4  0E00               	movlw	0
  2754  000EC6  1401               	andwf	___ftpack@arg,w,c
  2755  000EC8  6E06               	movwf	??___ftpack& (0+255),c
  2756  000ECA  0E00               	movlw	0
  2757  000ECC  1402               	andwf	___ftpack@arg+1,w,c
  2758  000ECE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2759  000ED0  0EFF               	movlw	255
  2760  000ED2  1403               	andwf	___ftpack@arg+2,w,c
  2761  000ED4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2762  000ED6  5006               	movf	??___ftpack,w,c
  2763  000ED8  1007               	iorwf	??___ftpack+1,w,c
  2764  000EDA  1008               	iorwf	??___ftpack+2,w,c
  2765  000EDC  B4D8               	btfsc	status,2,c
  2766  000EDE  D006               	goto	l1275
  2767  000EE0  D7E6               	goto	l1267
  2768  000EE2                     l1273:
  2769  000EE2  0604               	decf	___ftpack@exp,f,c
  2770  000EE4  90D8               	bcf	status,0,c
  2771  000EE6  3601               	rlcf	___ftpack@arg,f,c
  2772  000EE8  3602               	rlcf	___ftpack@arg+1,f,c
  2773  000EEA  3603               	rlcf	___ftpack@arg+2,f,c
  2774  000EEC                     l1275:
  2775  000EEC  BE02               	btfsc	___ftpack@arg+1,7,c
  2776  000EEE  D003               	goto	l372
  2777  000EF0  0E02               	movlw	2
  2778  000EF2  6004               	cpfslt	___ftpack@exp,c
  2779  000EF4  D7F6               	goto	l1273
  2780  000EF6                     l372:
  2781  000EF6  A004               	btfss	___ftpack@exp,0,c
  2782  000EF8  9E02               	bcf	___ftpack@arg+1,7,c
  2783  000EFA  90D8               	bcf	status,0,c
  2784  000EFC  3204               	rrcf	___ftpack@exp,f,c
  2785  000EFE  5004               	movf	___ftpack@exp,w,c
  2786  000F00  1203               	iorwf	___ftpack@arg+2,f,c
  2787  000F02  5005               	movf	___ftpack@sign,w,c
  2788  000F04  A4D8               	btfss	status,2,c
  2789  000F06  8E03               	bsf	___ftpack@arg+2,7,c
  2790  000F08  C001  F001         	movff	___ftpack@arg,?___ftpack
  2791  000F0C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2792  000F10  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2793  000F14  0012               	return	
  2794  000F16                     __end_of___ftpack:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           prodh	equ	0xFF4
  2801                           prodl	equ	0xFF3
  2802                           indf0	equ	0xFEF
  2803                           postinc0	equ	0xFEE
  2804                           fsr0h	equ	0xFEA
  2805                           fsr0l	equ	0xFE9
  2806                           wreg	equ	0xFE8
  2807                           indf2	equ	0xFDF
  2808                           fsr2h	equ	0xFDA
  2809                           fsr2l	equ	0xFD9
  2810                           status	equ	0xFD8
  2811                           
  2812 ;; *************** function ___aldiv *****************
  2813 ;; Defined at:
  2814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  dividend        4   12[COMRAM] long 
  2817 ;;  divisor         4   16[COMRAM] long 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  quotient        4   22[COMRAM] long 
  2820 ;;  sign            1   21[COMRAM] unsigned char 
  2821 ;;  counter         1   20[COMRAM] unsigned char 
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  4   12[COMRAM] long 
  2824 ;; Registers used:
  2825 ;;		wreg, status,2, status,0
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2831 ;;      Params:         8       0       0       0       0       0       0       0       0
  2832 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2834 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2835 ;;Total ram usage:       14 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_PWM1_Init
  2841 ;;		_loop
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text21
  2846  000D9C                     __ptext21:
  2847                           	opt stack 0
  2848  000D9C                     ___aldiv:
  2849                           	opt stack 28
  2850                           
  2851                           ;incstack = 0
  2852  000D9C  0E00               	movlw	0
  2853  000D9E  6E16               	movwf	___aldiv@sign,c
  2854  000DA0  AE14               	btfss	___aldiv@divisor+3,7,c
  2855  000DA2  D00A               	goto	l1299
  2856  000DA4  1E14               	comf	___aldiv@divisor+3,f,c
  2857  000DA6  1E13               	comf	___aldiv@divisor+2,f,c
  2858  000DA8  1E12               	comf	___aldiv@divisor+1,f,c
  2859  000DAA  6C11               	negf	___aldiv@divisor,c
  2860  000DAC  0E00               	movlw	0
  2861  000DAE  2212               	addwfc	___aldiv@divisor+1,f,c
  2862  000DB0  2213               	addwfc	___aldiv@divisor+2,f,c
  2863  000DB2  2214               	addwfc	___aldiv@divisor+3,f,c
  2864  000DB4  0E01               	movlw	1
  2865  000DB6  6E16               	movwf	___aldiv@sign,c
  2866  000DB8                     l1299:
  2867  000DB8  AE10               	btfss	___aldiv@dividend+3,7,c
  2868  000DBA  D00A               	goto	l1305
  2869  000DBC  1E10               	comf	___aldiv@dividend+3,f,c
  2870  000DBE  1E0F               	comf	___aldiv@dividend+2,f,c
  2871  000DC0  1E0E               	comf	___aldiv@dividend+1,f,c
  2872  000DC2  6C0D               	negf	___aldiv@dividend,c
  2873  000DC4  0E00               	movlw	0
  2874  000DC6  220E               	addwfc	___aldiv@dividend+1,f,c
  2875  000DC8  220F               	addwfc	___aldiv@dividend+2,f,c
  2876  000DCA  2210               	addwfc	___aldiv@dividend+3,f,c
  2877  000DCC  0E01               	movlw	1
  2878  000DCE  1A16               	xorwf	___aldiv@sign,f,c
  2879  000DD0                     l1305:
  2880  000DD0  0E00               	movlw	0
  2881  000DD2  6E17               	movwf	___aldiv@quotient,c
  2882  000DD4  0E00               	movlw	0
  2883  000DD6  6E18               	movwf	___aldiv@quotient+1,c
  2884  000DD8  0E00               	movlw	0
  2885  000DDA  6E19               	movwf	___aldiv@quotient+2,c
  2886  000DDC  0E00               	movlw	0
  2887  000DDE  6E1A               	movwf	___aldiv@quotient+3,c
  2888  000DE0  5011               	movf	___aldiv@divisor,w,c
  2889  000DE2  1012               	iorwf	___aldiv@divisor+1,w,c
  2890  000DE4  1013               	iorwf	___aldiv@divisor+2,w,c
  2891  000DE6  1014               	iorwf	___aldiv@divisor+3,w,c
  2892  000DE8  B4D8               	btfsc	status,2,c
  2893  000DEA  D02A               	goto	l1327
  2894  000DEC  0E01               	movlw	1
  2895  000DEE  6E15               	movwf	___aldiv@counter,c
  2896  000DF0  D006               	goto	l1313
  2897  000DF2                     l1311:
  2898  000DF2  90D8               	bcf	status,0,c
  2899  000DF4  3611               	rlcf	___aldiv@divisor,f,c
  2900  000DF6  3612               	rlcf	___aldiv@divisor+1,f,c
  2901  000DF8  3613               	rlcf	___aldiv@divisor+2,f,c
  2902  000DFA  3614               	rlcf	___aldiv@divisor+3,f,c
  2903  000DFC  2A15               	incf	___aldiv@counter,f,c
  2904  000DFE                     l1313:
  2905  000DFE  AE14               	btfss	___aldiv@divisor+3,7,c
  2906  000E00  D7F8               	goto	l1311
  2907  000E02                     l1315:
  2908  000E02  90D8               	bcf	status,0,c
  2909  000E04  3617               	rlcf	___aldiv@quotient,f,c
  2910  000E06  3618               	rlcf	___aldiv@quotient+1,f,c
  2911  000E08  3619               	rlcf	___aldiv@quotient+2,f,c
  2912  000E0A  361A               	rlcf	___aldiv@quotient+3,f,c
  2913  000E0C  5011               	movf	___aldiv@divisor,w,c
  2914  000E0E  5C0D               	subwf	___aldiv@dividend,w,c
  2915  000E10  5012               	movf	___aldiv@divisor+1,w,c
  2916  000E12  580E               	subwfb	___aldiv@dividend+1,w,c
  2917  000E14  5013               	movf	___aldiv@divisor+2,w,c
  2918  000E16  580F               	subwfb	___aldiv@dividend+2,w,c
  2919  000E18  5014               	movf	___aldiv@divisor+3,w,c
  2920  000E1A  5810               	subwfb	___aldiv@dividend+3,w,c
  2921  000E1C  A0D8               	btfss	status,0,c
  2922  000E1E  D009               	goto	l1323
  2923  000E20  5011               	movf	___aldiv@divisor,w,c
  2924  000E22  5E0D               	subwf	___aldiv@dividend,f,c
  2925  000E24  5012               	movf	___aldiv@divisor+1,w,c
  2926  000E26  5A0E               	subwfb	___aldiv@dividend+1,f,c
  2927  000E28  5013               	movf	___aldiv@divisor+2,w,c
  2928  000E2A  5A0F               	subwfb	___aldiv@dividend+2,f,c
  2929  000E2C  5014               	movf	___aldiv@divisor+3,w,c
  2930  000E2E  5A10               	subwfb	___aldiv@dividend+3,f,c
  2931  000E30  8017               	bsf	___aldiv@quotient,0,c
  2932  000E32                     l1323:
  2933  000E32  90D8               	bcf	status,0,c
  2934  000E34  3214               	rrcf	___aldiv@divisor+3,f,c
  2935  000E36  3213               	rrcf	___aldiv@divisor+2,f,c
  2936  000E38  3212               	rrcf	___aldiv@divisor+1,f,c
  2937  000E3A  3211               	rrcf	___aldiv@divisor,f,c
  2938  000E3C  2E15               	decfsz	___aldiv@counter,f,c
  2939  000E3E  D7E1               	goto	l1315
  2940  000E40                     l1327:
  2941  000E40  5016               	movf	___aldiv@sign,w,c
  2942  000E42  B4D8               	btfsc	status,2,c
  2943  000E44  D008               	goto	l1331
  2944  000E46  1E1A               	comf	___aldiv@quotient+3,f,c
  2945  000E48  1E19               	comf	___aldiv@quotient+2,f,c
  2946  000E4A  1E18               	comf	___aldiv@quotient+1,f,c
  2947  000E4C  6C17               	negf	___aldiv@quotient,c
  2948  000E4E  0E00               	movlw	0
  2949  000E50  2218               	addwfc	___aldiv@quotient+1,f,c
  2950  000E52  2219               	addwfc	___aldiv@quotient+2,f,c
  2951  000E54  221A               	addwfc	___aldiv@quotient+3,f,c
  2952  000E56                     l1331:
  2953  000E56  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  2954  000E5A  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  2955  000E5E  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  2956  000E62  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  2957  000E66  0012               	return	
  2958  000E68                     __end_of___aldiv:
  2959                           	opt stack 0
  2960                           tblptru	equ	0xFF8
  2961                           tblptrh	equ	0xFF7
  2962                           tblptrl	equ	0xFF6
  2963                           tablat	equ	0xFF5
  2964                           prodh	equ	0xFF4
  2965                           prodl	equ	0xFF3
  2966                           indf0	equ	0xFEF
  2967                           postinc0	equ	0xFEE
  2968                           fsr0h	equ	0xFEA
  2969                           fsr0l	equ	0xFE9
  2970                           wreg	equ	0xFE8
  2971                           indf2	equ	0xFDF
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           status	equ	0xFD8
  2975                           
  2976 ;; *************** function _PWM1_Set_Duty *****************
  2977 ;; Defined at:
  2978 ;;		line 105 in file "pwm.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  d               1    wreg     unsigned char 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;  d               1   27[COMRAM] unsigned char 
  2983 ;;  temp            2   28[COMRAM] unsigned int 
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2993 ;;      Params:         0       0       0       0       0       0       0       0       0
  2994 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2995 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2996 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2997 ;;Total ram usage:        5 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    1
  3000 ;; This function calls:
  3001 ;;		___lldiv
  3002 ;;		___lmul
  3003 ;; This function is called by:
  3004 ;;		_setup
  3005 ;;		_loop
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text22
  3010  000F16                     __ptext22:
  3011                           	opt stack 0
  3012  000F16                     _PWM1_Set_Duty:
  3013                           	opt stack 28
  3014                           
  3015                           ;incstack = 0
  3016                           ;PWM1_Set_Duty@d stored from wreg
  3017  000F16  6E1C               	movwf	PWM1_Set_Duty@d,c
  3018                           
  3019                           ;pwm.c: 107: unsigned int temp;
  3020                           ;pwm.c: 109: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/255;
  3021  000F18  501C               	movf	PWM1_Set_Duty@d,w,c
  3022  000F1A  6E01               	movwf	___lmul@multiplier,c
  3023  000F1C  6A02               	clrf	___lmul@multiplier+1,c
  3024  000F1E  6A03               	clrf	___lmul@multiplier+2,c
  3025  000F20  6A04               	clrf	___lmul@multiplier+3,c
  3026  000F22  50CB               	movf	4043,w,c	;volatile
  3027  000F24  6E1A               	movwf	??_PWM1_Set_Duty& (0+255),c
  3028  000F26  6A1B               	clrf	(??_PWM1_Set_Duty+1)& (0+255),c
  3029  000F28  90D8               	bcf	status,0,c
  3030  000F2A  361A               	rlcf	??_PWM1_Set_Duty,f,c
  3031  000F2C  361B               	rlcf	??_PWM1_Set_Duty+1,f,c
  3032  000F2E  90D8               	bcf	status,0,c
  3033  000F30  361A               	rlcf	??_PWM1_Set_Duty,f,c
  3034  000F32  361B               	rlcf	??_PWM1_Set_Duty+1,f,c
  3035  000F34  0E03               	movlw	3
  3036  000F36  121A               	iorwf	??_PWM1_Set_Duty,f,c
  3037  000F38  0E00               	movlw	0
  3038  000F3A  121B               	iorwf	??_PWM1_Set_Duty+1,f,c
  3039  000F3C  C01A  F005         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
  3040  000F40  C01B  F006         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
  3041  000F44  0E00               	movlw	0
  3042  000F46  BE06               	btfsc	___lmul@multiplicand+1,7,c
  3043  000F48  0EFF               	movlw	-1
  3044  000F4A  6E07               	movwf	___lmul@multiplicand+2,c
  3045  000F4C  6E08               	movwf	___lmul@multiplicand+3,c
  3046  000F4E  ECAE  F008         	call	___lmul	;wreg free
  3047  000F52  C001  F00D         	movff	?___lmul,___lldiv@dividend
  3048  000F56  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  3049  000F5A  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  3050  000F5E  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  3051  000F62  0EFF               	movlw	255
  3052  000F64  6E11               	movwf	___lldiv@divisor,c
  3053  000F66  0E00               	movlw	0
  3054  000F68  6E12               	movwf	___lldiv@divisor+1,c
  3055  000F6A  0E00               	movlw	0
  3056  000F6C  6E13               	movwf	___lldiv@divisor+2,c
  3057  000F6E  0E00               	movlw	0
  3058  000F70  6E14               	movwf	___lldiv@divisor+3,c
  3059  000F72  ECD4  F007         	call	___lldiv	;wreg free
  3060  000F76  C00D  F01D         	movff	?___lldiv,PWM1_Set_Duty@temp
  3061  000F7A  C00E  F01E         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
  3062                           
  3063                           ;pwm.c: 111: CCPR1L= (0x03FC&temp)>>2;
  3064  000F7E  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  3065  000F82  C01E  F01B         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
  3066  000F86  90D8               	bcf	status,0,c
  3067  000F88  321B               	rrcf	??_PWM1_Set_Duty+1,f,c
  3068  000F8A  321A               	rrcf	??_PWM1_Set_Duty,f,c
  3069  000F8C  90D8               	bcf	status,0,c
  3070  000F8E  321B               	rrcf	??_PWM1_Set_Duty+1,f,c
  3071  000F90  321A               	rrcf	??_PWM1_Set_Duty,f,c
  3072  000F92  501A               	movf	??_PWM1_Set_Duty,w,c
  3073  000F94  6EBE               	movwf	4030,c	;volatile
  3074                           
  3075                           ;pwm.c: 112: CCP1CON=((0x0003&temp)<<4)|0x0F;
  3076  000F96  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  3077  000F9A  0E03               	movlw	3
  3078  000F9C  161A               	andwf	??_PWM1_Set_Duty,f,c
  3079  000F9E  381A               	swapf	??_PWM1_Set_Duty,w,c
  3080  000FA0  0BF0               	andlw	240
  3081  000FA2  090F               	iorlw	15
  3082  000FA4  6EBD               	movwf	4029,c	;volatile
  3083  000FA6  0012               	return		;funcret
  3084  000FA8                     __end_of_PWM1_Set_Duty:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           indf0	equ	0xFEF
  3093                           postinc0	equ	0xFEE
  3094                           fsr0h	equ	0xFEA
  3095                           fsr0l	equ	0xFE9
  3096                           wreg	equ	0xFE8
  3097                           indf2	equ	0xFDF
  3098                           fsr2h	equ	0xFDA
  3099                           fsr2l	equ	0xFD9
  3100                           status	equ	0xFD8
  3101                           
  3102 ;; *************** function ___lmul *****************
  3103 ;; Defined at:
  3104 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  multiplier      4    0[COMRAM] unsigned long 
  3107 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  product         4    8[COMRAM] unsigned long 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  4    0[COMRAM] unsigned long 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3119 ;;      Params:         8       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:       12 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; This function calls:
  3126 ;;		Nothing
  3127 ;; This function is called by:
  3128 ;;		_PWM1_Set_Duty
  3129 ;;		_loop
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text23
  3134  00115C                     __ptext23:
  3135                           	opt stack 0
  3136  00115C                     ___lmul:
  3137                           	opt stack 28
  3138                           
  3139                           ;incstack = 0
  3140  00115C  0E00               	movlw	0
  3141  00115E  6E09               	movwf	___lmul@product,c
  3142  001160  0E00               	movlw	0
  3143  001162  6E0A               	movwf	___lmul@product+1,c
  3144  001164  0E00               	movlw	0
  3145  001166  6E0B               	movwf	___lmul@product+2,c
  3146  001168  0E00               	movlw	0
  3147  00116A  6E0C               	movwf	___lmul@product+3,c
  3148  00116C                     l1247:
  3149  00116C  A001               	btfss	___lmul@multiplier,0,c
  3150  00116E  D008               	goto	l1251
  3151  001170  5005               	movf	___lmul@multiplicand,w,c
  3152  001172  2609               	addwf	___lmul@product,f,c
  3153  001174  5006               	movf	___lmul@multiplicand+1,w,c
  3154  001176  220A               	addwfc	___lmul@product+1,f,c
  3155  001178  5007               	movf	___lmul@multiplicand+2,w,c
  3156  00117A  220B               	addwfc	___lmul@product+2,f,c
  3157  00117C  5008               	movf	___lmul@multiplicand+3,w,c
  3158  00117E  220C               	addwfc	___lmul@product+3,f,c
  3159  001180                     l1251:
  3160  001180  90D8               	bcf	status,0,c
  3161  001182  3605               	rlcf	___lmul@multiplicand,f,c
  3162  001184  3606               	rlcf	___lmul@multiplicand+1,f,c
  3163  001186  3607               	rlcf	___lmul@multiplicand+2,f,c
  3164  001188  3608               	rlcf	___lmul@multiplicand+3,f,c
  3165  00118A  90D8               	bcf	status,0,c
  3166  00118C  3204               	rrcf	___lmul@multiplier+3,f,c
  3167  00118E  3203               	rrcf	___lmul@multiplier+2,f,c
  3168  001190  3202               	rrcf	___lmul@multiplier+1,f,c
  3169  001192  3201               	rrcf	___lmul@multiplier,f,c
  3170  001194  5001               	movf	___lmul@multiplier,w,c
  3171  001196  1002               	iorwf	___lmul@multiplier+1,w,c
  3172  001198  1003               	iorwf	___lmul@multiplier+2,w,c
  3173  00119A  1004               	iorwf	___lmul@multiplier+3,w,c
  3174  00119C  A4D8               	btfss	status,2,c
  3175  00119E  D7E6               	goto	l1247
  3176  0011A0  C009  F001         	movff	___lmul@product,?___lmul
  3177  0011A4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3178  0011A8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3179  0011AC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3180  0011B0  0012               	return		;funcret
  3181  0011B2                     __end_of___lmul:
  3182                           	opt stack 0
  3183                           tblptru	equ	0xFF8
  3184                           tblptrh	equ	0xFF7
  3185                           tblptrl	equ	0xFF6
  3186                           tablat	equ	0xFF5
  3187                           prodh	equ	0xFF4
  3188                           prodl	equ	0xFF3
  3189                           indf0	equ	0xFEF
  3190                           postinc0	equ	0xFEE
  3191                           fsr0h	equ	0xFEA
  3192                           fsr0l	equ	0xFE9
  3193                           wreg	equ	0xFE8
  3194                           indf2	equ	0xFDF
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function ___lldiv *****************
  3200 ;; Defined at:
  3201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  dividend        4   12[COMRAM] unsigned long 
  3204 ;;  divisor         4   16[COMRAM] unsigned long 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  quotient        4   20[COMRAM] unsigned long 
  3207 ;;  counter         1   24[COMRAM] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  4   12[COMRAM] unsigned long 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         8       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3220 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:       13 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_PWM1_Set_Duty
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text24
  3231  000FA8                     __ptext24:
  3232                           	opt stack 0
  3233  000FA8                     ___lldiv:
  3234                           	opt stack 28
  3235                           
  3236                           ;incstack = 0
  3237  000FA8  0E00               	movlw	0
  3238  000FAA  6E15               	movwf	___lldiv@quotient,c
  3239  000FAC  0E00               	movlw	0
  3240  000FAE  6E16               	movwf	___lldiv@quotient+1,c
  3241  000FB0  0E00               	movlw	0
  3242  000FB2  6E17               	movwf	___lldiv@quotient+2,c
  3243  000FB4  0E00               	movlw	0
  3244  000FB6  6E18               	movwf	___lldiv@quotient+3,c
  3245  000FB8  5011               	movf	___lldiv@divisor,w,c
  3246  000FBA  1012               	iorwf	___lldiv@divisor+1,w,c
  3247  000FBC  1013               	iorwf	___lldiv@divisor+2,w,c
  3248  000FBE  1014               	iorwf	___lldiv@divisor+3,w,c
  3249  000FC0  B4D8               	btfsc	status,2,c
  3250  000FC2  D02A               	goto	l497
  3251  000FC4  0E01               	movlw	1
  3252  000FC6  6E19               	movwf	___lldiv@counter,c
  3253  000FC8  D006               	goto	l1343
  3254  000FCA                     l1341:
  3255  000FCA  90D8               	bcf	status,0,c
  3256  000FCC  3611               	rlcf	___lldiv@divisor,f,c
  3257  000FCE  3612               	rlcf	___lldiv@divisor+1,f,c
  3258  000FD0  3613               	rlcf	___lldiv@divisor+2,f,c
  3259  000FD2  3614               	rlcf	___lldiv@divisor+3,f,c
  3260  000FD4  2A19               	incf	___lldiv@counter,f,c
  3261  000FD6                     l1343:
  3262  000FD6  AE14               	btfss	___lldiv@divisor+3,7,c
  3263  000FD8  D7F8               	goto	l1341
  3264  000FDA                     l1345:
  3265  000FDA  90D8               	bcf	status,0,c
  3266  000FDC  3615               	rlcf	___lldiv@quotient,f,c
  3267  000FDE  3616               	rlcf	___lldiv@quotient+1,f,c
  3268  000FE0  3617               	rlcf	___lldiv@quotient+2,f,c
  3269  000FE2  3618               	rlcf	___lldiv@quotient+3,f,c
  3270  000FE4  5011               	movf	___lldiv@divisor,w,c
  3271  000FE6  5C0D               	subwf	___lldiv@dividend,w,c
  3272  000FE8  5012               	movf	___lldiv@divisor+1,w,c
  3273  000FEA  580E               	subwfb	___lldiv@dividend+1,w,c
  3274  000FEC  5013               	movf	___lldiv@divisor+2,w,c
  3275  000FEE  580F               	subwfb	___lldiv@dividend+2,w,c
  3276  000FF0  5014               	movf	___lldiv@divisor+3,w,c
  3277  000FF2  5810               	subwfb	___lldiv@dividend+3,w,c
  3278  000FF4  A0D8               	btfss	status,0,c
  3279  000FF6  D009               	goto	l1353
  3280  000FF8  5011               	movf	___lldiv@divisor,w,c
  3281  000FFA  5E0D               	subwf	___lldiv@dividend,f,c
  3282  000FFC  5012               	movf	___lldiv@divisor+1,w,c
  3283  000FFE  5A0E               	subwfb	___lldiv@dividend+1,f,c
  3284  001000  5013               	movf	___lldiv@divisor+2,w,c
  3285  001002  5A0F               	subwfb	___lldiv@dividend+2,f,c
  3286  001004  5014               	movf	___lldiv@divisor+3,w,c
  3287  001006  5A10               	subwfb	___lldiv@dividend+3,f,c
  3288  001008  8015               	bsf	___lldiv@quotient,0,c
  3289  00100A                     l1353:
  3290  00100A  90D8               	bcf	status,0,c
  3291  00100C  3214               	rrcf	___lldiv@divisor+3,f,c
  3292  00100E  3213               	rrcf	___lldiv@divisor+2,f,c
  3293  001010  3212               	rrcf	___lldiv@divisor+1,f,c
  3294  001012  3211               	rrcf	___lldiv@divisor,f,c
  3295  001014  2E19               	decfsz	___lldiv@counter,f,c
  3296  001016  D7E1               	goto	l1345
  3297  001018                     l497:
  3298  001018  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  3299  00101C  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  3300  001020  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  3301  001024  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  3302  001028  0012               	return		;funcret
  3303  00102A                     __end_of___lldiv:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           indf0	equ	0xFEF
  3312                           postinc0	equ	0xFEE
  3313                           fsr0h	equ	0xFEA
  3314                           fsr0l	equ	0xFE9
  3315                           wreg	equ	0xFE8
  3316                           indf2	equ	0xFDF
  3317                           fsr2h	equ	0xFDA
  3318                           fsr2l	equ	0xFD9
  3319                           status	equ	0xFD8
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           indf0	equ	0xFEF
  3327                           postinc0	equ	0xFEE
  3328                           fsr0h	equ	0xFEA
  3329                           fsr0l	equ	0xFE9
  3330                           wreg	equ	0xFE8
  3331                           indf2	equ	0xFDF
  3332                           fsr2h	equ	0xFDA
  3333                           fsr2l	equ	0xFD9
  3334                           status	equ	0xFD8
  3335                           
  3336                           	psect	rparam
  3337  0000                     tblptru	equ	0xFF8
  3338                           tblptrh	equ	0xFF7
  3339                           tblptrl	equ	0xFF6
  3340                           tablat	equ	0xFF5
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           indf0	equ	0xFEF
  3344                           postinc0	equ	0xFEE
  3345                           fsr0h	equ	0xFEA
  3346                           fsr0l	equ	0xFE9
  3347                           wreg	equ	0xFE8
  3348                           indf2	equ	0xFDF
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8


Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     56      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__itoa	PTR unsigned char  size(2) Largest target is 6
		 -> buffer(COMRAM[6]), 

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> buffer(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 7
		 -> buffer(COMRAM[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _setup->_PWM1_Init
    _lcd_init->_lcd_cmd
    _PWM1_Init->___aldiv
    _loop->___fttol
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    _itoa->___aldiv
    ___lwdiv->___lwmod
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___lwtoft
    ___aldiv->___lmul
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   16807
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3873
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                           _adc_init
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0    1029
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Init                                            8     6      2     753
                                             26 COMRAM     8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0   12934
                      _PWM1_Set_Duty
                            ___aldiv
                            ___ftdiv
                            ___ftmul
                            ___fttol
                             ___lmul
                           ___lwtoft
                        _adc_amostra
                               _itoa
                            _lcd_cmd
                            _lcd_dat
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2     751
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0     533
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     533
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2     496
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    1721
                                             26 COMRAM     4     0      4
                            ___aldiv (ARG)
                             ___lmul (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     674
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    2117
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     316
                                             41 COMRAM    15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2587
                                             26 COMRAM    15     9      6
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2541
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     556
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM1_Set_Duty                                        5     5      0     807
                                             25 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     450
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _PWM1_Set_Duty
       ___lldiv
         ___lmul (ARG)
       ___lmul
     ___aldiv
       ___lmul (ARG)
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lmul
     ___lwtoft
       ___ftpack
     _adc_amostra
     _itoa
       ___aldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_dat
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _setup
     _PWM1_Init
       ___aldiv
         ___lmul (ARG)
     _PWM1_Set_Duty
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM1_Start
     _adc_init
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_init
       _atraso_ms
       _lcd_cmd
         _atraso_ms
         _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     38      40       1       67.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      20        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 21 21:14:39 2017

                      l1 1258                       l70 1374                       l73 137A  
      PWM1_Set_Duty@temp 001D              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
   __size_of_adc_amostra 005A                      l102 1128                      l105 112A  
                    l430 0C94                      l372 0EF6                      l550 11FA  
                    l560 123C                      l497 1018             __CFG_CPB$OFF 000000  
                    _PR2 000FCB             __CFG_CPD$OFF 000000                      u830 1064  
                    u840 109E                      u921 0BF0                      u915 1136  
                    u941 0C18                      u837 105A                      u847 1094  
                    u865 0CF2                      u971 0A16                      u991 0A3E  
                    u895 0D7C             __CFG_BOR$OFF 000000                      _val 0039  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
           ___ftdiv@cntr 0015             ___ftdiv@sign 001A             __CFG_WDT$OFF 000000  
                   l1211 1254                     l1311 0DF2                     l1215 1274  
                   l1313 0DFE                     l1305 0DD0                     l1251 1180  
                   l1331 0E56                     l1323 0E32                     l1315 0E02  
                   l1403 1030                     l1341 0FCA                     l1343 0FD6  
                   l1247 116C                     l1327 0E40                     l1271 0EC4  
                   l1263 0E86                     l1407 106A                     l1431 0D6C  
                   l1353 100A                     l1345 0FDA                     l1273 0EE2  
                   l1265 0E90                     l1601 09F4                     l1425 0D2C  
                   l1275 0EEC                     l1267 0EAE                     l1259 0E78  
                   l1523 0A56                     l1363 11C8                     l1435 0D92  
                   l1541 0A98                     l1517 0A2E                     l1445 1106  
                   l1453 1114                     l1365 11D0                     l1471 0C08  
                   l1551 0AC0                     l1447 110A                     l1375 11F0  
                   l1367 11D4                     l1391 1232                     l1383 1212  
                   l1537 0A88                     l1449 110E                     l1385 121A  
                   l1299 0DB8                     l1547 0AB0                     l1387 121E  
                   l1477 0C30                     l1565 093E                     l1583 09A4  
                   l1639 134E                     l1497 0C6E                     l1593 09CC  
                   l1595 09D8                     l1587 09B4                     l1597 09DE  
                   STR_1 0801                     u1031 0922                     u1050 095C  
                   u1055 0954                     _main 1332             ___ftpack@arg 0001  
                   _itoa 080A                     _loop 0AFA             ___ftpack@exp 0004  
                   fsr0h 000FEA                     indf0 000FEF                     fsr2h 000FDA  
                   fsr0l 000FE9                     indf2 000FDF                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___ftmul@cntr 0028  
           ___param_bank 000000             ___ftmul@sign 0029             ___fttol@exp1 0038  
           ___fttol@lval 0034            __CFG_PLLDIV$2 000000           __CFG_CCP2MX$ON 000000  
        __end_of___aldiv 0E68                    ?_main 0001                    ?_itoa 001B  
                  ?_loop 0001          __end_of___ftdiv 0CC6              atraso_ms@j1 0005  
            atraso_ms@j2 0006          __end_of___lldiv 102A          __end_of___ftmul 0AFA  
        __end_of___fttol 0A06          __end_of___lwdiv 1204          __end_of___lwmod 1246  
                  _PORTD 000F83            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000      ___lmul@multiplicand 0005  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
        __end_of_lcd_dat 12E4          __end_of_lcd_cmd 130E            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000          __end_of_lcd_str 10A6            __CFG_WRTD$OFF 000000  
     __size_of_PWM1_Init 00D6              ?_PWM1_Start 0001           __CFG_EBTRB$OFF 000000  
          ___ftpack@sign 0005                    _setup 1282                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 1354             __end_of_main 1354             __end_of_itoa 0912  
           __end_of_loop 0BE0                   ??_main 0039            ___fttol@sign1 0033  
                 ??_itoa 001F                   ??_loop 0039            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
                 ?_setup 0001         __end_of___ftpack 0F16         __end_of_adc_init 138E  
       __end_of___lwtoft 1332           __CFG_XINST$OFF 000000         __end_of_lcd_init 1102  
      __end_of_PWM1_Init 0D9C                   ___lmul 115C                ??___aldiv 0015  
    __size_of_PWM1_Start 0016                ??___ftdiv 0012                ??___lldiv 0015  
              ??___ftmul 0021                ??___fttol 002E                ??___lwdiv 000A  
              ??___lwmod 0005                   _buffer 003B                   _lcd_wr 138E  
                 clear_0 135A                ??_lcd_dat 0007                ??_lcd_cmd 0007  
              ??_lcd_str 000A    ___ftmul@f3_as_product 0025             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 1360            ___rparam_used 000001  
             ___ftdiv@f1 000C               ___ftdiv@f2 000F               ___ftdiv@f3 0016  
             ___ftmul@f1 001B               ___ftmul@f2 001E               ___fttol@f1 002A  
         __pcstackCOMRAM 0001    __end_of_PWM1_Set_Duty 0FA8            __end_of_setup 12BA  
             ___lwtoft@c 0009                  ??_setup 0023       __size_of_atraso_ms 003C  
                ?___lmul 0001            ??_adc_amostra 0003                  ?_lcd_wr 0001  
                _CCP1CON 000FBD           ___lmul@product 0009                ?___ftpack 0001  
              ?_adc_init 0001                ?___lwtoft 0009             ??_PWM1_Start 0001  
              ?_lcd_init 0001          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___aldiv 0D9C          __size_of___lmul 0056  
                ___ftdiv 0BE0                  ___lldiv 0FA8                  ___ftmul 0A06  
                ___fttol 0912                  ___lwdiv 11B2                  ___lwmod 1204  
     __end_of_PWM1_Start 1380        __end_of_atraso_ms 1282             __psmallconst 0800  
        __size_of_lcd_wr 0008          __CFG_STVREN$OFF 000000                  __pcinit 1354  
             ??___ftpack 0006                  __ramtop 0800               ??_adc_init 0001  
                __ptext0 1332                  __ptext1 1282                  __ptext2 10A6  
                __ptext3 1380                  __ptext4 136A                  __ptext5 0CC6  
                __ptext6 0AFA                  __ptext7 102A                  __ptext8 12BA  
                __ptext9 12E4                  _lcd_dat 12BA                  _lcd_cmd 12E4  
             ??___lwtoft 000C                  _lcd_str 102A                _T2CONbits 000FCA  
    __end_of_adc_amostra 115C         ___aldiv@dividend 000D               ??_lcd_init 0008  
   end_of_initialization 1360                  itoa@val 001B            __Lmediumconst 0000  
                itoa@str 001D          ___lldiv@divisor 0011          ___lldiv@counter 0019  
       ___aldiv@quotient 0017                  postinc0 000FEE                _PWM1_Init 0CC6  
              _PORTCbits 000F82                _PORTEbits 000F84                _TRISCbits 000F94  
             lcd_dat@val 0007           PWM1_Set_Duty@d 001C               lcd_cmd@val 0007  
            ___ftdiv@exp 0019               lcd_str@str 0008              ___ftmul@exp 0024  
            _adc_amostra 1102               atraso_ms@i 0003           __end_of___lmul 11B2  
             ?_PWM1_Init 001B           __end_of_lcd_wr 1396      start_initialization 1354  
               ??___lmul 0009                 ??_lcd_wr 0001         __CFG_LPT1OSC$OFF 000000  
      __size_of___ftpack 00AE        __size_of_adc_init 000E              __pbssCOMRAM 0039  
      __size_of___lwtoft 0024   __size_of_PWM1_Set_Duty 0092        __size_of_lcd_init 005C  
       ___lwdiv@dividend 0006                 ?___aldiv 000D                 ?___ftdiv 000C  
               ?___lldiv 000D                 ?___ftmul 001B                 ?___fttol 002A  
               ?___lwdiv 0006                 ?___lwmod 0001              ??_PWM1_Init 001D  
               ?_lcd_dat 0001                 ?_lcd_cmd 0001                 ?_lcd_str 0008  
              _atraso_ms 1246              __smallconst 0800         ___lwdiv@quotient 000A  
         __size_of_setup 0038               PWM1_Init@f 001B           atraso_ms@valor 0001  
        ___aldiv@divisor 0011          ___aldiv@counter 0015            PWM1_Init@temp 0021  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000            _PWM1_Set_Duty 0F16  
             _ADCON0bits 000FC2               ?_atraso_ms 0001                lcd_wr@val 0001  
      ___lmul@multiplier 0001                 __Hrparam 0000                 __Lrparam 0000  
         ?_PWM1_Set_Duty 0001             ?_adc_amostra 0001         __size_of___aldiv 00CC  
       __size_of___ftdiv 00E6         __size_of___lldiv 0082         __size_of___ftmul 00F4  
       __size_of___fttol 00F4         __size_of___lwdiv 0052         __size_of___lwmod 0042  
               ___ftpack 0E68                 _adc_init 1380                 ___lwtoft 130E  
       __size_of_lcd_dat 002A         __size_of_lcd_cmd 002A         __size_of_lcd_str 007C  
        ___lwdiv@divisor 0008          ___lwdiv@counter 000C                 __ptext10 138E  
               __ptext11 1246                 __ptext20 0E68                 __ptext12 080A  
               __ptext21 0D9C                 __ptext13 1204                 __ptext22 0F16  
               __ptext14 11B2                 __ptext23 115C                 __ptext15 1102  
               __ptext24 0FA8                 __ptext16 130E                 __ptext17 0912  
               __ptext18 0A06                 __ptext19 0BE0                 _lcd_init 10A6  
          __size_of_main 0022            __size_of_itoa 0108            __size_of_loop 00E6  
               lcd_str@i 000C    __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0003  
       ___lwmod@dividend 0001         ___lldiv@dividend 000D          ??_PWM1_Set_Duty 001A  
       ___lldiv@quotient 0015          ___lwmod@divisor 0003          ___lwmod@counter 0005  
       adc_amostra@canal 0007             ___aldiv@sign 0016               _PWM1_Start 136A  
