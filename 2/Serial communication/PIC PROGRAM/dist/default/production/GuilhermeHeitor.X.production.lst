

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Jun 30 17:28:38 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22  0000                     
    23                           ; Version 1.41
    24                           ; Generated 25/01/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _ADRESL	set	4035
    58  0000                     _ADRESH	set	4036
    59  0000                     _ADCON0bits	set	4034
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADCON0	set	4034
    62  0000                     _PR2	set	4043
    63  0000                     _T2CONbits	set	4042
    64  0000                     _CCPR1L	set	4030
    65  0000                     _PORTCbits	set	3970
    66  0000                     _CCP1CON	set	4029
    67  0000                     _PORTBbits	set	3969
    68  0000                     _PORTDbits	set	3971
    69  0000                     _PORTB	set	3969
    70  0000                     _PORTD	set	3971
    71  0000                     _TRISCbits	set	3988
    72  0000                     _TRISE	set	3990
    73  0000                     _TRISD	set	3989
    74  0000                     _TRISC	set	3988
    75  0000                     _TRISB	set	3987
    76  0000                     _TRISA	set	3986
    77  0000                     _ADCON1	set	4033
    78  0000                     _RCREG	set	4014
    79  0000                     _PIR1bits	set	3998
    80  0000                     _TXREG	set	4013
    81  0000                     _RCSTAbits	set	4011
    82  0000                     _TXSTAbits	set	4012
    83  0000                     _SPBRG	set	4015
    84                           
    85                           ; #config settings
    86  0000                     
    87                           	psect	cinit
    88  007988                     __pcinit:
    89                           	opt stack 0
    90  007988                     start_initialization:
    91                           	opt stack 0
    92  007988                     __initialization:
    93                           	opt stack 0
    94                           
    95                           ; Clear objects allocated to COMRAM (4 bytes)
    96  007988  6A22               	clrf	(__pbssCOMRAM+3)& (0+255),c
    97  00798A  6A21               	clrf	(__pbssCOMRAM+2)& (0+255),c
    98  00798C  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
    99  00798E  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   100  007990                     end_of_initialization:
   101                           	opt stack 0
   102  007990                     __end_of__initialization:
   103                           	opt stack 0
   104  007990  0E00               	movlw	low (__Lmediumconst shr (0+16))
   105  007992  6EF8               	movwf	tblptru,c
   106  007994  0100               	movlb	0
   107  007996  EFE2  F03C         	goto	_main	;jump to C main() function
   108                           tblptru	equ	0xFF8
   109                           
   110                           	psect	bssCOMRAM
   111  00001F                     __pbssCOMRAM:
   112                           	opt stack 0
   113  00001F                     _value:
   114                           	opt stack 0
   115  00001F                     	ds	2
   116  000021                     _valuel:
   117                           	opt stack 0
   118  000021                     	ds	1
   119  000022                     _valueh:
   120                           	opt stack 0
   121  000022                     	ds	1
   122                           tblptru	equ	0xFF8
   123                           
   124                           	psect	cstackCOMRAM
   125  000001                     __pcstackCOMRAM:
   126                           	opt stack 0
   127  000001                     ?___lmul:
   128                           	opt stack 0
   129  000001                     ?___aldiv:
   130                           	opt stack 0
   131  000001                     atraso_ms@valor:
   132                           	opt stack 0
   133  000001                     ___lmul@multiplier:
   134                           	opt stack 0
   135  000001                     ___aldiv@dividend:
   136                           	opt stack 0
   137                           
   138                           ; 4 bytes @ 0x0
   139  000001                     	ds	2
   140  000003                     atraso_ms@i:
   141                           	opt stack 0
   142                           
   143                           ; 2 bytes @ 0x2
   144  000003                     	ds	2
   145  000005                     atraso_ms@j1:
   146                           	opt stack 0
   147  000005                     ___lmul@multiplicand:
   148                           	opt stack 0
   149  000005                     ___aldiv@divisor:
   150                           	opt stack 0
   151                           
   152                           ; 4 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     atraso_ms@j2:
   155                           	opt stack 0
   156                           
   157                           ; 1 bytes @ 0x5
   158  000006                     	ds	1
   159  000007                     serial_rx@timeout:
   160                           	opt stack 0
   161                           
   162                           ; 2 bytes @ 0x6
   163  000007                     	ds	2
   164  000009                     ___aldiv@counter:
   165                           	opt stack 0
   166  000009                     serial_rx@to:
   167                           	opt stack 0
   168  000009                     ___lmul@product:
   169                           	opt stack 0
   170                           
   171                           ; 4 bytes @ 0x8
   172  000009                     	ds	1
   173  00000A                     ___aldiv@sign:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x9
   177  00000A                     	ds	1
   178  00000B                     ___aldiv@quotient:
   179                           	opt stack 0
   180                           
   181                           ; 4 bytes @ 0xA
   182  00000B                     	ds	2
   183  00000D                     ?___lldiv:
   184                           	opt stack 0
   185  00000D                     ___lldiv@dividend:
   186                           	opt stack 0
   187                           
   188                           ; 4 bytes @ 0xC
   189  00000D                     	ds	2
   190  00000F                     PWM1_Init@f:
   191                           	opt stack 0
   192                           
   193                           ; 2 bytes @ 0xE
   194  00000F                     	ds	2
   195  000011                     ??_PWM1_Init:
   196  000011                     ___lldiv@divisor:
   197                           	opt stack 0
   198                           
   199                           ; 4 bytes @ 0x10
   200  000011                     	ds	4
   201  000015                     PWM1_Init@temp:
   202                           	opt stack 0
   203  000015                     ___lldiv@quotient:
   204                           	opt stack 0
   205                           
   206                           ; 4 bytes @ 0x14
   207  000015                     	ds	4
   208  000019                     ___lldiv@counter:
   209                           	opt stack 0
   210                           
   211                           ; 1 bytes @ 0x18
   212  000019                     	ds	1
   213  00001A                     ??_PWM1_Set_Duty:
   214                           
   215                           ; 1 bytes @ 0x19
   216  00001A                     	ds	2
   217  00001C                     PWM1_Set_Duty@d:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x1B
   221  00001C                     	ds	1
   222  00001D                     PWM1_Set_Duty@temp:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x1C
   226  00001D                     	ds	2
   227  00001F                     tblptru	equ	0xFF8
   228                           
   229                           ; 1 bytes @ 0x1E
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 79 in file "config.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   249 ;;      Params:         0       0       0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called:    3
   255 ;; This function calls:
   256 ;;		_loop
   257 ;;		_setup
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text0
   264  0079C4                     __ptext0:
   265                           	opt stack 0
   266  0079C4                     _main:
   267                           	opt stack 28
   268                           
   269                           ;config.c: 81: ADCON1=0x0C;
   270                           
   271                           ;incstack = 0
   272  0079C4  0E0C               	movlw	12
   273  0079C6  6EC1               	movwf	4033,c	;volatile
   274                           
   275                           ;config.c: 82: TRISA=0xC3;
   276  0079C8  0EC3               	movlw	195
   277  0079CA  6E92               	movwf	3986,c	;volatile
   278                           
   279                           ;config.c: 83: TRISB=0x07;
   280  0079CC  0E07               	movlw	7
   281  0079CE  6E93               	movwf	3987,c	;volatile
   282                           
   283                           ;config.c: 84: TRISC=0x01;
   284  0079D0  0E01               	movlw	1
   285  0079D2  6E94               	movwf	3988,c	;volatile
   286                           
   287                           ;config.c: 85: TRISD=0x00;
   288  0079D4  0E00               	movlw	0
   289  0079D6  6E95               	movwf	3989,c	;volatile
   290                           
   291                           ;config.c: 86: TRISE=0x00;
   292  0079D8  0E00               	movlw	0
   293  0079DA  6E96               	movwf	3990,c	;volatile
   294                           
   295                           ;config.c: 88: setup();
   296  0079DC  ECF3  F03C         	call	_setup	;wreg free
   297  0079E0                     l1352:
   298                           
   299                           ;config.c: 91: {
   300                           ;config.c: 92: loop();
   301  0079E0  ECD5  F03E         	call	_loop	;wreg free
   302  0079E4  D7FD               	goto	l1352
   303  0079E6                     __end_of_main:
   304                           	opt stack 0
   305                           tblptru	equ	0xFF8
   306                           
   307 ;; *************** function _setup *****************
   308 ;; Defined at:
   309 ;;		line 19 in file "main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;		None
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   323 ;;      Params:         0       0       0       0       0       0       0       0       0
   324 ;;      Locals:         0       0       0       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0
   326 ;;      Totals:         0       0       0       0       0       0       0       0       0
   327 ;;Total ram usage:        0 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; Hardware stack levels required when called:    2
   330 ;; This function calls:
   331 ;;		_PWM1_Init
   332 ;;		_PWM1_Set_Duty
   333 ;;		_PWM1_Start
   334 ;;		_serial_init
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341  0079E6                     __ptext1:
   342                           	opt stack 0
   343  0079E6                     _setup:
   344                           	opt stack 28
   345                           
   346                           ;main.c: 20: TRISCbits.TRISC7 = 1;
   347                           
   348                           ;incstack = 0
   349  0079E6  8E94               	bsf	3988,7,c	;volatile
   350                           
   351                           ;main.c: 21: PWM1_Init(5000);
   352  0079E8  0E13               	movlw	19
   353  0079EA  6E10               	movwf	PWM1_Init@f+1,c
   354  0079EC  0E88               	movlw	136
   355  0079EE  6E0F               	movwf	PWM1_Init@f,c
   356  0079F0  EC6A  F03E         	call	_PWM1_Init	;wreg free
   357                           
   358                           ;main.c: 22: PWM1_Start();
   359  0079F4  ECD7  F03C         	call	_PWM1_Start	;wreg free
   360                           
   361                           ;main.c: 23: serial_init();
   362  0079F8  ECCD  F03C         	call	_serial_init	;wreg free
   363                           
   364                           ;main.c: 24: TRISD = 0x00;
   365  0079FC  0E00               	movlw	0
   366  0079FE  6E95               	movwf	3989,c	;volatile
   367                           
   368                           ;main.c: 25: TRISB = 0x00;
   369  007A00  0E00               	movlw	0
   370  007A02  6E93               	movwf	3987,c	;volatile
   371                           
   372                           ;main.c: 26: PORTD = 0x00;
   373  007A04  0E00               	movlw	0
   374  007A06  6E83               	movwf	3971,c	;volatile
   375                           
   376                           ;main.c: 27: PORTB = 0x00;
   377  007A08  0E00               	movlw	0
   378  007A0A  6E81               	movwf	3969,c	;volatile
   379                           
   380                           ;main.c: 28: PWM1_Set_Duty(0);
   381  007A0C  0E00               	movlw	0
   382  007A0E  ECBB  F03D         	call	_PWM1_Set_Duty
   383  007A12  0012               	return		;funcret
   384  007A14                     __end_of_setup:
   385                           	opt stack 0
   386                           tblptru	equ	0xFF8
   387                           
   388 ;; *************** function _serial_init *****************
   389 ;; Defined at:
   390 ;;		line 35 in file "serial.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   404 ;;      Params:         0       0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used:    1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_setup
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text2
   418  00799A                     __ptext2:
   419                           	opt stack 0
   420  00799A                     _serial_init:
   421                           	opt stack 29
   422                           
   423                           ;serial.c: 40: SPBRG=((8000000/(16l*9600))-1);
   424                           
   425                           ;incstack = 0
   426  00799A  0E33               	movlw	51
   427  00799C  6EAF               	movwf	4015,c	;volatile
   428                           
   429                           ;serial.c: 41: TXSTAbits.BRGH=1;
   430  00799E  84AC               	bsf	4012,2,c	;volatile
   431                           
   432                           ;serial.c: 48: TXSTAbits.TX9=0;
   433  0079A0  9CAC               	bcf	4012,6,c	;volatile
   434                           
   435                           ;serial.c: 49: TXSTAbits.TXEN=1;
   436  0079A2  8AAC               	bsf	4012,5,c	;volatile
   437                           
   438                           ;serial.c: 50: TXSTAbits.SYNC=0;
   439  0079A4  98AC               	bcf	4012,4,c	;volatile
   440                           
   441                           ;serial.c: 51: RCSTAbits.SPEN=1;
   442  0079A6  8EAB               	bsf	4011,7,c	;volatile
   443                           
   444                           ;serial.c: 52: RCSTAbits.RX9=0;
   445  0079A8  9CAB               	bcf	4011,6,c	;volatile
   446                           
   447                           ;serial.c: 53: RCSTAbits.CREN=1;
   448  0079AA  88AB               	bsf	4011,4,c	;volatile
   449  0079AC  0012               	return		;funcret
   450  0079AE                     __end_of_serial_init:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           
   454 ;; *************** function _PWM1_Start *****************
   455 ;; Defined at:
   456 ;;		line 79 in file "pwm.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   470 ;;      Params:         0       0       0       0       0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_setup
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text3
   484  0079AE                     __ptext3:
   485                           	opt stack 0
   486  0079AE                     _PWM1_Start:
   487                           	opt stack 29
   488                           
   489                           ;pwm.c: 82: TRISCbits.TRISC2=0;
   490                           
   491                           ;incstack = 0
   492  0079AE  9494               	bcf	3988,2,c	;volatile
   493                           
   494                           ;pwm.c: 84: CCP1CON=0x0C;
   495  0079B0  0E0C               	movlw	12
   496  0079B2  6EBD               	movwf	4029,c	;volatile
   497                           
   498                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
   499  0079B4  84CA               	bsf	4042,2,c	;volatile
   500                           
   501                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
   502  0079B6  929E               	bcf	3998,1,c	;volatile
   503  0079B8                     l208:
   504  0079B8  A29E               	btfss	3998,1,c	;volatile
   505  0079BA  D7FE               	goto	l208
   506                           
   507                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
   508  0079BC  929E               	bcf	3998,1,c	;volatile
   509  0079BE                     l211:
   510  0079BE  B29E               	btfsc	3998,1,c	;volatile
   511  0079C0  0012               	return	
   512  0079C2  D7FD               	goto	l211
   513  0079C4                     __end_of_PWM1_Start:
   514                           	opt stack 0
   515                           tblptru	equ	0xFF8
   516                           
   517 ;; *************** function _PWM1_Init *****************
   518 ;; Defined at:
   519 ;;		line 31 in file "pwm.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  f               2   14[COMRAM] unsigned int 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  temp            2   20[COMRAM] unsigned int 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   533 ;;      Params:         2       0       0       0       0       0       0       0       0
   534 ;;      Locals:         2       0       0       0       0       0       0       0       0
   535 ;;      Temps:          4       0       0       0       0       0       0       0       0
   536 ;;      Totals:         8       0       0       0       0       0       0       0       0
   537 ;;Total ram usage:        8 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    1
   540 ;; This function calls:
   541 ;;		___aldiv
   542 ;; This function is called by:
   543 ;;		_setup
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text4
   548  007CD4                     __ptext4:
   549                           	opt stack 0
   550  007CD4                     _PWM1_Init:
   551                           	opt stack 28
   552                           
   553                           ;pwm.c: 33: unsigned int temp;
   554                           ;pwm.c: 39: CCP1CON=0x00;
   555                           
   556                           ;incstack = 0
   557  007CD4  0E00               	movlw	0
   558  007CD6  6EBD               	movwf	4029,c	;volatile
   559                           
   560                           ;pwm.c: 40: TRISCbits.TRISC2=1;
   561  007CD8  8494               	bsf	3988,2,c	;volatile
   562                           
   563                           ;pwm.c: 43: PORTCbits.RC2=0;
   564  007CDA  9482               	bcf	3970,2,c	;volatile
   565                           
   566                           ;pwm.c: 45: CCPR1L=0;
   567  007CDC  0E00               	movlw	0
   568  007CDE  6EBE               	movwf	4030,c	;volatile
   569                           
   570                           ;pwm.c: 50: T2CONbits.TMR2ON=0;
   571  007CE0  94CA               	bcf	4042,2,c	;volatile
   572                           
   573                           ;pwm.c: 52: temp=8000000/(f*4l);
   574  007CE2  0E00               	movlw	0
   575  007CE4  6E01               	movwf	___aldiv@dividend,c
   576  007CE6  0E12               	movlw	18
   577  007CE8  6E02               	movwf	___aldiv@dividend+1,c
   578  007CEA  0E7A               	movlw	122
   579  007CEC  6E03               	movwf	___aldiv@dividend+2,c
   580  007CEE  0E00               	movlw	0
   581  007CF0  6E04               	movwf	___aldiv@dividend+3,c
   582  007CF2  500F               	movf	PWM1_Init@f,w,c
   583  007CF4  6E11               	movwf	??_PWM1_Init& (0+255),c
   584  007CF6  5010               	movf	PWM1_Init@f+1,w,c
   585  007CF8  6E12               	movwf	(??_PWM1_Init+1)& (0+255),c
   586  007CFA  6A13               	clrf	(??_PWM1_Init+2)& (0+255),c
   587  007CFC  6A14               	clrf	(??_PWM1_Init+3)& (0+255),c
   588  007CFE  0E02               	movlw	2
   589  007D00                     u535:
   590  007D00  90D8               	bcf	status,0,c
   591  007D02  3611               	rlcf	??_PWM1_Init,f,c
   592  007D04  3612               	rlcf	??_PWM1_Init+1,f,c
   593  007D06  3613               	rlcf	??_PWM1_Init+2,f,c
   594  007D08  3614               	rlcf	??_PWM1_Init+3,f,c
   595  007D0A  2EE8               	decfsz	wreg,f,c
   596  007D0C  D7F9               	goto	u535
   597  007D0E  C011  F005         	movff	??_PWM1_Init,___aldiv@divisor
   598  007D12  C012  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
   599  007D16  C013  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
   600  007D1A  C014  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
   601  007D1E  EC04  F03E         	call	___aldiv	;wreg free
   602  007D22  C001  F015         	movff	?___aldiv,PWM1_Init@temp
   603  007D26  C002  F016         	movff	?___aldiv+1,PWM1_Init@temp+1
   604                           
   605                           ;pwm.c: 54: if (temp < 256)
   606  007D2A  0416               	decf	PWM1_Init@temp+1,w,c
   607  007D2C  B0D8               	btfsc	status,0,c
   608  007D2E  D005               	goto	l1262
   609                           
   610                           ;pwm.c: 55: {
   611                           ;pwm.c: 56: T2CONbits.T2CKPS=0;
   612  007D30  0EFC               	movlw	-4
   613  007D32  16CA               	andwf	4042,f,c	;volatile
   614                           
   615                           ;pwm.c: 57: PR2=temp;
   616  007D34  C015  FFCB         	movff	PWM1_Init@temp,4043	;volatile
   617                           
   618                           ;pwm.c: 58: }
   619  007D38  D033               	goto	l1272
   620  007D3A                     l1262:
   621                           
   622                           ;pwm.c: 59: else if(temp/4 < 256 )
   623  007D3A  C015  F011         	movff	PWM1_Init@temp,??_PWM1_Init
   624  007D3E  C016  F012         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
   625  007D42  90D8               	bcf	status,0,c
   626  007D44  3212               	rrcf	??_PWM1_Init+1,f,c
   627  007D46  3211               	rrcf	??_PWM1_Init,f,c
   628  007D48  90D8               	bcf	status,0,c
   629  007D4A  3212               	rrcf	??_PWM1_Init+1,f,c
   630  007D4C  3211               	rrcf	??_PWM1_Init,f,c
   631  007D4E  0412               	decf	??_PWM1_Init+1,w,c
   632  007D50  B0D8               	btfsc	status,0,c
   633  007D52  D013               	goto	l1268
   634                           
   635                           ;pwm.c: 60: {
   636                           ;pwm.c: 61: T2CONbits.T2CKPS=1;
   637  007D54  50CA               	movf	4042,w,c	;volatile
   638  007D56  0BFC               	andlw	-4
   639  007D58  0901               	iorlw	1
   640  007D5A  6ECA               	movwf	4042,c	;volatile
   641                           
   642                           ;pwm.c: 62: PR2=(temp+2)/4;
   643  007D5C  0E02               	movlw	2
   644  007D5E  2415               	addwf	PWM1_Init@temp,w,c
   645  007D60  6E11               	movwf	??_PWM1_Init& (0+255),c
   646  007D62  0E00               	movlw	0
   647  007D64  2016               	addwfc	PWM1_Init@temp+1,w,c
   648  007D66  6E12               	movwf	(??_PWM1_Init+1)& (0+255),c
   649  007D68  90D8               	bcf	status,0,c
   650  007D6A  3212               	rrcf	??_PWM1_Init+1,f,c
   651  007D6C  3211               	rrcf	??_PWM1_Init,f,c
   652  007D6E  90D8               	bcf	status,0,c
   653  007D70  3212               	rrcf	??_PWM1_Init+1,f,c
   654  007D72  3211               	rrcf	??_PWM1_Init,f,c
   655  007D74  5011               	movf	??_PWM1_Init,w,c
   656  007D76  6ECB               	movwf	4043,c	;volatile
   657                           
   658                           ;pwm.c: 63: }
   659  007D78  D013               	goto	l1272
   660  007D7A                     l1268:
   661                           
   662                           ;pwm.c: 64: else
   663                           ;pwm.c: 65: {
   664                           ;pwm.c: 66: PR2=(temp+8)/16;
   665  007D7A  0E08               	movlw	8
   666  007D7C  2415               	addwf	PWM1_Init@temp,w,c
   667  007D7E  6E11               	movwf	??_PWM1_Init& (0+255),c
   668  007D80  0E00               	movlw	0
   669  007D82  2016               	addwfc	PWM1_Init@temp+1,w,c
   670  007D84  6E12               	movwf	(??_PWM1_Init+1)& (0+255),c
   671  007D86  0E04               	movlw	4
   672  007D88  6E13               	movwf	(??_PWM1_Init+2)& (0+255),c
   673  007D8A                     u565:
   674  007D8A  90D8               	bcf	status,0,c
   675  007D8C  3212               	rrcf	??_PWM1_Init+1,f,c
   676  007D8E  3211               	rrcf	??_PWM1_Init,f,c
   677  007D90  2E13               	decfsz	(??_PWM1_Init+2)& (0+255),f,c
   678  007D92  D7FB               	goto	u565
   679  007D94  5011               	movf	??_PWM1_Init,w,c
   680  007D96  6ECB               	movwf	4043,c	;volatile
   681                           
   682                           ;pwm.c: 67: T2CONbits.T2CKPS=2;
   683  007D98  50CA               	movf	4042,w,c	;volatile
   684  007D9A  0BFC               	andlw	-4
   685  007D9C  0902               	iorlw	2
   686  007D9E  6ECA               	movwf	4042,c	;volatile
   687  007DA0                     l1272:
   688                           
   689                           ;pwm.c: 68: }
   690                           ;pwm.c: 71: T2CONbits.TOUTPS=0x00;
   691  007DA0  96CA               	bcf	4042,3,c	;volatile
   692  007DA2  98CA               	bcf	4042,4,c	;volatile
   693  007DA4  9ACA               	bcf	4042,5,c	;volatile
   694  007DA6  9CCA               	bcf	4042,6,c	;volatile
   695  007DA8  0012               	return		;funcret
   696  007DAA                     __end_of_PWM1_Init:
   697                           	opt stack 0
   698                           tblptru	equ	0xFF8
   699                           wreg	equ	0xFE8
   700                           status	equ	0xFD8
   701                           
   702 ;; *************** function ___aldiv *****************
   703 ;; Defined at:
   704 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  dividend        4    0[COMRAM] long 
   707 ;;  divisor         4    4[COMRAM] long 
   708 ;; Auto vars:     Size  Location     Type
   709 ;;  quotient        4   10[COMRAM] long 
   710 ;;  sign            1    9[COMRAM] unsigned char 
   711 ;;  counter         1    8[COMRAM] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  4    0[COMRAM] long 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   721 ;;      Params:         8       0       0       0       0       0       0       0       0
   722 ;;      Locals:         6       0       0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0
   724 ;;      Totals:        14       0       0       0       0       0       0       0       0
   725 ;;Total ram usage:       14 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_PWM1_Init
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text5
   735  007C08                     __ptext5:
   736                           	opt stack 0
   737  007C08                     ___aldiv:
   738                           	opt stack 28
   739                           
   740                           ;incstack = 0
   741  007C08  0E00               	movlw	0
   742  007C0A  6E0A               	movwf	___aldiv@sign,c
   743  007C0C  AE08               	btfss	___aldiv@divisor+3,7,c
   744  007C0E  D00A               	goto	l1164
   745  007C10  1E08               	comf	___aldiv@divisor+3,f,c
   746  007C12  1E07               	comf	___aldiv@divisor+2,f,c
   747  007C14  1E06               	comf	___aldiv@divisor+1,f,c
   748  007C16  6C05               	negf	___aldiv@divisor,c
   749  007C18  0E00               	movlw	0
   750  007C1A  2206               	addwfc	___aldiv@divisor+1,f,c
   751  007C1C  2207               	addwfc	___aldiv@divisor+2,f,c
   752  007C1E  2208               	addwfc	___aldiv@divisor+3,f,c
   753  007C20  0E01               	movlw	1
   754  007C22  6E0A               	movwf	___aldiv@sign,c
   755  007C24                     l1164:
   756  007C24  AE04               	btfss	___aldiv@dividend+3,7,c
   757  007C26  D00A               	goto	l1170
   758  007C28  1E04               	comf	___aldiv@dividend+3,f,c
   759  007C2A  1E03               	comf	___aldiv@dividend+2,f,c
   760  007C2C  1E02               	comf	___aldiv@dividend+1,f,c
   761  007C2E  6C01               	negf	___aldiv@dividend,c
   762  007C30  0E00               	movlw	0
   763  007C32  2202               	addwfc	___aldiv@dividend+1,f,c
   764  007C34  2203               	addwfc	___aldiv@dividend+2,f,c
   765  007C36  2204               	addwfc	___aldiv@dividend+3,f,c
   766  007C38  0E01               	movlw	1
   767  007C3A  1A0A               	xorwf	___aldiv@sign,f,c
   768  007C3C                     l1170:
   769  007C3C  0E00               	movlw	0
   770  007C3E  6E0B               	movwf	___aldiv@quotient,c
   771  007C40  0E00               	movlw	0
   772  007C42  6E0C               	movwf	___aldiv@quotient+1,c
   773  007C44  0E00               	movlw	0
   774  007C46  6E0D               	movwf	___aldiv@quotient+2,c
   775  007C48  0E00               	movlw	0
   776  007C4A  6E0E               	movwf	___aldiv@quotient+3,c
   777  007C4C  5005               	movf	___aldiv@divisor,w,c
   778  007C4E  1006               	iorwf	___aldiv@divisor+1,w,c
   779  007C50  1007               	iorwf	___aldiv@divisor+2,w,c
   780  007C52  1008               	iorwf	___aldiv@divisor+3,w,c
   781  007C54  B4D8               	btfsc	status,2,c
   782  007C56  D02A               	goto	l1192
   783  007C58  0E01               	movlw	1
   784  007C5A  6E09               	movwf	___aldiv@counter,c
   785  007C5C  D006               	goto	l1178
   786  007C5E                     l1176:
   787  007C5E  90D8               	bcf	status,0,c
   788  007C60  3605               	rlcf	___aldiv@divisor,f,c
   789  007C62  3606               	rlcf	___aldiv@divisor+1,f,c
   790  007C64  3607               	rlcf	___aldiv@divisor+2,f,c
   791  007C66  3608               	rlcf	___aldiv@divisor+3,f,c
   792  007C68  2A09               	incf	___aldiv@counter,f,c
   793  007C6A                     l1178:
   794  007C6A  AE08               	btfss	___aldiv@divisor+3,7,c
   795  007C6C  D7F8               	goto	l1176
   796  007C6E                     l1180:
   797  007C6E  90D8               	bcf	status,0,c
   798  007C70  360B               	rlcf	___aldiv@quotient,f,c
   799  007C72  360C               	rlcf	___aldiv@quotient+1,f,c
   800  007C74  360D               	rlcf	___aldiv@quotient+2,f,c
   801  007C76  360E               	rlcf	___aldiv@quotient+3,f,c
   802  007C78  5005               	movf	___aldiv@divisor,w,c
   803  007C7A  5C01               	subwf	___aldiv@dividend,w,c
   804  007C7C  5006               	movf	___aldiv@divisor+1,w,c
   805  007C7E  5802               	subwfb	___aldiv@dividend+1,w,c
   806  007C80  5007               	movf	___aldiv@divisor+2,w,c
   807  007C82  5803               	subwfb	___aldiv@dividend+2,w,c
   808  007C84  5008               	movf	___aldiv@divisor+3,w,c
   809  007C86  5804               	subwfb	___aldiv@dividend+3,w,c
   810  007C88  A0D8               	btfss	status,0,c
   811  007C8A  D009               	goto	l1188
   812  007C8C  5005               	movf	___aldiv@divisor,w,c
   813  007C8E  5E01               	subwf	___aldiv@dividend,f,c
   814  007C90  5006               	movf	___aldiv@divisor+1,w,c
   815  007C92  5A02               	subwfb	___aldiv@dividend+1,f,c
   816  007C94  5007               	movf	___aldiv@divisor+2,w,c
   817  007C96  5A03               	subwfb	___aldiv@dividend+2,f,c
   818  007C98  5008               	movf	___aldiv@divisor+3,w,c
   819  007C9A  5A04               	subwfb	___aldiv@dividend+3,f,c
   820  007C9C  800B               	bsf	___aldiv@quotient,0,c
   821  007C9E                     l1188:
   822  007C9E  90D8               	bcf	status,0,c
   823  007CA0  3208               	rrcf	___aldiv@divisor+3,f,c
   824  007CA2  3207               	rrcf	___aldiv@divisor+2,f,c
   825  007CA4  3206               	rrcf	___aldiv@divisor+1,f,c
   826  007CA6  3205               	rrcf	___aldiv@divisor,f,c
   827  007CA8  2E09               	decfsz	___aldiv@counter,f,c
   828  007CAA  D7E1               	goto	l1180
   829  007CAC                     l1192:
   830  007CAC  500A               	movf	___aldiv@sign,w,c
   831  007CAE  B4D8               	btfsc	status,2,c
   832  007CB0  D008               	goto	l1196
   833  007CB2  1E0E               	comf	___aldiv@quotient+3,f,c
   834  007CB4  1E0D               	comf	___aldiv@quotient+2,f,c
   835  007CB6  1E0C               	comf	___aldiv@quotient+1,f,c
   836  007CB8  6C0B               	negf	___aldiv@quotient,c
   837  007CBA  0E00               	movlw	0
   838  007CBC  220C               	addwfc	___aldiv@quotient+1,f,c
   839  007CBE  220D               	addwfc	___aldiv@quotient+2,f,c
   840  007CC0  220E               	addwfc	___aldiv@quotient+3,f,c
   841  007CC2                     l1196:
   842  007CC2  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   843  007CC6  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   844  007CCA  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   845  007CCE  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   846  007CD2  0012               	return	
   847  007CD4                     __end_of___aldiv:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           wreg	equ	0xFE8
   851                           status	equ	0xFD8
   852                           
   853 ;; *************** function _loop *****************
   854 ;; Defined at:
   855 ;;		line 31 in file "main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         0       0       0       0       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_PWM1_Set_Duty
   878 ;;		_serial_rx
   879 ;; This function is called by:
   880 ;;		_main
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text6
   885  007DAA                     __ptext6:
   886                           	opt stack 0
   887  007DAA                     _loop:
   888                           	opt stack 28
   889                           
   890                           ;main.c: 32: switch(serial_rx(0)){
   891                           
   892                           ;incstack = 0
   893  007DAA  D119               	goto	l1324
   894  007DAC                     l1298:
   895                           
   896                           ;main.c: 37: valueh = serial_rx(0);
   897  007DAC  0E00               	movlw	0
   898  007DAE  6E08               	movwf	serial_rx@timeout+1,c
   899  007DB0  0E00               	movlw	0
   900  007DB2  6E07               	movwf	serial_rx@timeout,c
   901  007DB4  EC28  F03D         	call	_serial_rx	;wreg free
   902  007DB8  6E22               	movwf	_valueh,c
   903                           
   904                           ;main.c: 38: valuel = serial_rx(0);
   905  007DBA  0E00               	movlw	0
   906  007DBC  6E08               	movwf	serial_rx@timeout+1,c
   907  007DBE  0E00               	movlw	0
   908  007DC0  6E07               	movwf	serial_rx@timeout,c
   909  007DC2  EC28  F03D         	call	_serial_rx	;wreg free
   910  007DC6  6E21               	movwf	_valuel,c
   911                           
   912                           ;main.c: 39: PWM1_Set_Duty(valueh+valuel);
   913  007DC8  5022               	movf	_valueh,w,c
   914  007DCA  2421               	addwf	_valuel,w,c
   915  007DCC  ECBB  F03D         	call	_PWM1_Set_Duty
   916                           
   917                           ;main.c: 40: break;
   918  007DD0  0012               	return	
   919  007DD2                     l134:
   920                           
   921                           ;main.c: 46: PORTDbits.RD0 = 1;
   922  007DD2  8083               	bsf	3971,0,c	;volatile
   923                           
   924                           ;main.c: 47: break;
   925  007DD4  0012               	return	
   926  007DD6                     l136:
   927                           
   928                           ;main.c: 49: PORTDbits.RD1 = 1;
   929  007DD6  8283               	bsf	3971,1,c	;volatile
   930                           
   931                           ;main.c: 50: break;
   932  007DD8  0012               	return	
   933  007DDA                     l137:
   934                           
   935                           ;main.c: 52: PORTDbits.RD2 = 1;
   936  007DDA  8483               	bsf	3971,2,c	;volatile
   937                           
   938                           ;main.c: 53: break;
   939  007DDC  0012               	return	
   940  007DDE                     l138:
   941                           
   942                           ;main.c: 55: PORTDbits.RD3 = 1;
   943  007DDE  8683               	bsf	3971,3,c	;volatile
   944                           
   945                           ;main.c: 56: break;
   946  007DE0  0012               	return	
   947  007DE2                     l139:
   948                           
   949                           ;main.c: 58: PORTDbits.RD4 = 1;
   950  007DE2  8883               	bsf	3971,4,c	;volatile
   951                           
   952                           ;main.c: 59: break;
   953  007DE4  0012               	return	
   954  007DE6                     l140:
   955                           
   956                           ;main.c: 61: PORTDbits.RD5 = 1;
   957  007DE6  8A83               	bsf	3971,5,c	;volatile
   958                           
   959                           ;main.c: 62: break;
   960  007DE8  0012               	return	
   961  007DEA                     l141:
   962                           
   963                           ;main.c: 64: PORTDbits.RD6 = 1;
   964  007DEA  8C83               	bsf	3971,6,c	;volatile
   965                           
   966                           ;main.c: 65: break;
   967  007DEC  0012               	return	
   968  007DEE                     l142:
   969                           
   970                           ;main.c: 67: PORTDbits.RD7 = 1;
   971  007DEE  8E83               	bsf	3971,7,c	;volatile
   972                           
   973                           ;main.c: 68: break;
   974  007DF0  0012               	return	
   975  007DF2                     l143:
   976                           
   977                           ;main.c: 70: PORTDbits.RD0 = 1;
   978  007DF2  8083               	bsf	3971,0,c	;volatile
   979                           
   980                           ;main.c: 71: PORTDbits.RD1 = 1;
   981  007DF4  8283               	bsf	3971,1,c	;volatile
   982                           
   983                           ;main.c: 72: PORTDbits.RD2 = 1;
   984  007DF6  8483               	bsf	3971,2,c	;volatile
   985                           
   986                           ;main.c: 73: PORTDbits.RD3 = 1;
   987  007DF8  8683               	bsf	3971,3,c	;volatile
   988                           
   989                           ;main.c: 74: PORTDbits.RD4 = 1;
   990  007DFA  8883               	bsf	3971,4,c	;volatile
   991                           
   992                           ;main.c: 75: PORTDbits.RD5 = 1;
   993  007DFC  8A83               	bsf	3971,5,c	;volatile
   994                           
   995                           ;main.c: 76: PORTDbits.RD6 = 1;
   996  007DFE  8C83               	bsf	3971,6,c	;volatile
   997                           
   998                           ;main.c: 77: PORTDbits.RD7 = 1;
   999  007E00  8E83               	bsf	3971,7,c	;volatile
  1000                           
  1001                           ;main.c: 79: }
  1002                           
  1003                           ;main.c: 78: break;
  1004  007E02  0012               	return	
  1005  007E04                     l1302:
  1006  007E04  0E00               	movlw	0
  1007  007E06  6E08               	movwf	serial_rx@timeout+1,c
  1008  007E08  0E00               	movlw	0
  1009  007E0A  6E07               	movwf	serial_rx@timeout,c
  1010  007E0C  EC28  F03D         	call	_serial_rx	;wreg free
  1011                           
  1012                           ; Switch size 1, requested type "space"
  1013                           ; Number of cases is 9, Range of values is 48 to 116
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte           28    15 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018  007E10  0A30               	xorlw	48	; case 48
  1019  007E12  B4D8               	btfsc	status,2,c
  1020  007E14  D7DE               	goto	l134
  1021  007E16  0A01               	xorlw	1	; case 49
  1022  007E18  B4D8               	btfsc	status,2,c
  1023  007E1A  D7DD               	goto	l136
  1024  007E1C  0A03               	xorlw	3	; case 50
  1025  007E1E  B4D8               	btfsc	status,2,c
  1026  007E20  D7DC               	goto	l137
  1027  007E22  0A01               	xorlw	1	; case 51
  1028  007E24  B4D8               	btfsc	status,2,c
  1029  007E26  D7DB               	goto	l138
  1030  007E28  0A07               	xorlw	7	; case 52
  1031  007E2A  B4D8               	btfsc	status,2,c
  1032  007E2C  D7DA               	goto	l139
  1033  007E2E  0A01               	xorlw	1	; case 53
  1034  007E30  B4D8               	btfsc	status,2,c
  1035  007E32  D7D9               	goto	l140
  1036  007E34  0A03               	xorlw	3	; case 54
  1037  007E36  B4D8               	btfsc	status,2,c
  1038  007E38  D7D8               	goto	l141
  1039  007E3A  0A01               	xorlw	1	; case 55
  1040  007E3C  B4D8               	btfsc	status,2,c
  1041  007E3E  D7D7               	goto	l142
  1042  007E40  0A43               	xorlw	67	; case 116
  1043  007E42  A4D8               	btfss	status,2,c
  1044                           
  1045                           ;main.c: 80: break;
  1046  007E44  0012               	return	
  1047  007E46  D7D5               	goto	l143
  1048  007E48                     l147:
  1049                           
  1050                           ;main.c: 84: PORTBbits.RB0 = 1;
  1051  007E48  8081               	bsf	3969,0,c	;volatile
  1052                           
  1053                           ;main.c: 85: break;
  1054  007E4A  0012               	return	
  1055  007E4C                     l149:
  1056                           
  1057                           ;main.c: 87: PORTBbits.RB1 = 1;
  1058  007E4C  8281               	bsf	3969,1,c	;volatile
  1059                           
  1060                           ;main.c: 88: break;
  1061  007E4E  0012               	return	
  1062  007E50                     l150:
  1063                           
  1064                           ;main.c: 90: PORTBbits.RB2 = 1;
  1065  007E50  8481               	bsf	3969,2,c	;volatile
  1066                           
  1067                           ;main.c: 91: break;
  1068  007E52  0012               	return	
  1069  007E54                     l151:
  1070                           
  1071                           ;main.c: 93: PORTBbits.RB3 = 1;
  1072  007E54  8681               	bsf	3969,3,c	;volatile
  1073                           
  1074                           ;main.c: 94: break;
  1075  007E56  0012               	return	
  1076  007E58                     l152:
  1077                           
  1078                           ;main.c: 96: PORTBbits.RB4 = 1;
  1079  007E58  8881               	bsf	3969,4,c	;volatile
  1080                           
  1081                           ;main.c: 97: break;
  1082  007E5A  0012               	return	
  1083  007E5C                     l153:
  1084                           
  1085                           ;main.c: 99: PORTBbits.RB5 = 1;
  1086  007E5C  8A81               	bsf	3969,5,c	;volatile
  1087                           
  1088                           ;main.c: 100: break;
  1089  007E5E  0012               	return	
  1090  007E60                     l154:
  1091                           
  1092                           ;main.c: 102: PORTBbits.RB6 = 1;
  1093  007E60  8C81               	bsf	3969,6,c	;volatile
  1094                           
  1095                           ;main.c: 103: break;
  1096  007E62  0012               	return	
  1097  007E64                     l155:
  1098                           
  1099                           ;main.c: 105: PORTBbits.RB7 = 1;
  1100  007E64  8E81               	bsf	3969,7,c	;volatile
  1101                           
  1102                           ;main.c: 106: break;
  1103  007E66  0012               	return	
  1104  007E68                     l156:
  1105                           
  1106                           ;main.c: 108: PORTBbits.RB0 = 1;
  1107  007E68  8081               	bsf	3969,0,c	;volatile
  1108                           
  1109                           ;main.c: 109: PORTBbits.RB1 = 1;
  1110  007E6A  8281               	bsf	3969,1,c	;volatile
  1111                           
  1112                           ;main.c: 110: PORTBbits.RB2 = 1;
  1113  007E6C  8481               	bsf	3969,2,c	;volatile
  1114                           
  1115                           ;main.c: 111: PORTBbits.RB3 = 1;
  1116  007E6E  8681               	bsf	3969,3,c	;volatile
  1117                           
  1118                           ;main.c: 112: PORTBbits.RB4 = 1;
  1119  007E70  8881               	bsf	3969,4,c	;volatile
  1120                           
  1121                           ;main.c: 113: PORTBbits.RB5 = 1;
  1122  007E72  8A81               	bsf	3969,5,c	;volatile
  1123                           
  1124                           ;main.c: 114: PORTBbits.RB6 = 1;
  1125  007E74  8C81               	bsf	3969,6,c	;volatile
  1126                           
  1127                           ;main.c: 115: PORTBbits.RB7 = 1;
  1128  007E76  8E81               	bsf	3969,7,c	;volatile
  1129                           
  1130                           ;main.c: 117: }
  1131                           
  1132                           ;main.c: 116: break;
  1133  007E78  0012               	return	
  1134  007E7A                     l1306:
  1135  007E7A  0E00               	movlw	0
  1136  007E7C  6E08               	movwf	serial_rx@timeout+1,c
  1137  007E7E  0E00               	movlw	0
  1138  007E80  6E07               	movwf	serial_rx@timeout,c
  1139  007E82  EC28  F03D         	call	_serial_rx	;wreg free
  1140                           
  1141                           ; Switch size 1, requested type "space"
  1142                           ; Number of cases is 9, Range of values is 48 to 116
  1143                           ; switch strategies available:
  1144                           ; Name         Instructions Cycles
  1145                           ; simple_byte           28    15 (average)
  1146                           ;	Chosen strategy is simple_byte
  1147  007E86  0A30               	xorlw	48	; case 48
  1148  007E88  B4D8               	btfsc	status,2,c
  1149  007E8A  D7DE               	goto	l147
  1150  007E8C  0A01               	xorlw	1	; case 49
  1151  007E8E  B4D8               	btfsc	status,2,c
  1152  007E90  D7DD               	goto	l149
  1153  007E92  0A03               	xorlw	3	; case 50
  1154  007E94  B4D8               	btfsc	status,2,c
  1155  007E96  D7DC               	goto	l150
  1156  007E98  0A01               	xorlw	1	; case 51
  1157  007E9A  B4D8               	btfsc	status,2,c
  1158  007E9C  D7DB               	goto	l151
  1159  007E9E  0A07               	xorlw	7	; case 52
  1160  007EA0  B4D8               	btfsc	status,2,c
  1161  007EA2  D7DA               	goto	l152
  1162  007EA4  0A01               	xorlw	1	; case 53
  1163  007EA6  B4D8               	btfsc	status,2,c
  1164  007EA8  D7D9               	goto	l153
  1165  007EAA  0A03               	xorlw	3	; case 54
  1166  007EAC  B4D8               	btfsc	status,2,c
  1167  007EAE  D7D8               	goto	l154
  1168  007EB0  0A01               	xorlw	1	; case 55
  1169  007EB2  B4D8               	btfsc	status,2,c
  1170  007EB4  D7D7               	goto	l155
  1171  007EB6  0A43               	xorlw	67	; case 116
  1172  007EB8  A4D8               	btfss	status,2,c
  1173                           
  1174                           ;main.c: 119: }
  1175                           
  1176                           ;main.c: 118: break;
  1177  007EBA  0012               	return	
  1178  007EBC  D7D5               	goto	l156
  1179  007EBE                     l1310:
  1180  007EBE  0E00               	movlw	0
  1181  007EC0  6E08               	movwf	serial_rx@timeout+1,c
  1182  007EC2  0E00               	movlw	0
  1183  007EC4  6E07               	movwf	serial_rx@timeout,c
  1184  007EC6  EC28  F03D         	call	_serial_rx	;wreg free
  1185                           
  1186                           ; Switch size 1, requested type "space"
  1187                           ; Number of cases is 2, Range of values is 66 to 68
  1188                           ; switch strategies available:
  1189                           ; Name         Instructions Cycles
  1190                           ; simple_byte            7     4 (average)
  1191                           ;	Chosen strategy is simple_byte
  1192  007ECA  0A42               	xorlw	66	; case 66
  1193  007ECC  B4D8               	btfsc	status,2,c
  1194  007ECE  D7D5               	goto	l1306
  1195  007ED0  0A06               	xorlw	6	; case 68
  1196  007ED2  A4D8               	btfss	status,2,c
  1197                           
  1198                           ;main.c: 120: break;
  1199  007ED4  0012               	return	
  1200  007ED6  D796               	goto	l1302
  1201  007ED8                     l161:
  1202                           
  1203                           ;main.c: 126: PORTDbits.RD0 = 0;
  1204  007ED8  9083               	bcf	3971,0,c	;volatile
  1205                           
  1206                           ;main.c: 127: break;
  1207  007EDA  0012               	return	
  1208  007EDC                     l163:
  1209                           
  1210                           ;main.c: 129: PORTDbits.RD1 = 0;
  1211  007EDC  9283               	bcf	3971,1,c	;volatile
  1212                           
  1213                           ;main.c: 130: break;
  1214  007EDE  0012               	return	
  1215  007EE0                     l164:
  1216                           
  1217                           ;main.c: 132: PORTDbits.RD2 = 0;
  1218  007EE0  9483               	bcf	3971,2,c	;volatile
  1219                           
  1220                           ;main.c: 133: break;
  1221  007EE2  0012               	return	
  1222  007EE4                     l165:
  1223                           
  1224                           ;main.c: 135: PORTDbits.RD3 = 0;
  1225  007EE4  9683               	bcf	3971,3,c	;volatile
  1226                           
  1227                           ;main.c: 136: break;
  1228  007EE6  0012               	return	
  1229  007EE8                     l166:
  1230                           
  1231                           ;main.c: 138: PORTDbits.RD4 = 0;
  1232  007EE8  9883               	bcf	3971,4,c	;volatile
  1233                           
  1234                           ;main.c: 139: break;
  1235  007EEA  0012               	return	
  1236  007EEC                     l167:
  1237                           
  1238                           ;main.c: 141: PORTDbits.RD5 = 0;
  1239  007EEC  9A83               	bcf	3971,5,c	;volatile
  1240                           
  1241                           ;main.c: 142: break;
  1242  007EEE  0012               	return	
  1243  007EF0                     l168:
  1244                           
  1245                           ;main.c: 144: PORTDbits.RD6 = 0;
  1246  007EF0  9C83               	bcf	3971,6,c	;volatile
  1247                           
  1248                           ;main.c: 145: break;
  1249  007EF2  0012               	return	
  1250  007EF4                     l169:
  1251                           
  1252                           ;main.c: 147: PORTDbits.RD7 = 0;
  1253  007EF4  9E83               	bcf	3971,7,c	;volatile
  1254                           
  1255                           ;main.c: 148: break;
  1256  007EF6  0012               	return	
  1257  007EF8                     l170:
  1258                           
  1259                           ;main.c: 150: PORTDbits.RD0 = 0;
  1260  007EF8  9083               	bcf	3971,0,c	;volatile
  1261                           
  1262                           ;main.c: 151: PORTDbits.RD1 = 0;
  1263  007EFA  9283               	bcf	3971,1,c	;volatile
  1264                           
  1265                           ;main.c: 152: PORTDbits.RD2 = 0;
  1266  007EFC  9483               	bcf	3971,2,c	;volatile
  1267                           
  1268                           ;main.c: 153: PORTDbits.RD3 = 0;
  1269  007EFE  9683               	bcf	3971,3,c	;volatile
  1270                           
  1271                           ;main.c: 154: PORTDbits.RD4 = 0;
  1272  007F00  9883               	bcf	3971,4,c	;volatile
  1273                           
  1274                           ;main.c: 155: PORTDbits.RD5 = 0;
  1275  007F02  9A83               	bcf	3971,5,c	;volatile
  1276                           
  1277                           ;main.c: 156: PORTDbits.RD6 = 0;
  1278  007F04  9C83               	bcf	3971,6,c	;volatile
  1279                           
  1280                           ;main.c: 157: PORTDbits.RD7 = 0;
  1281  007F06  9E83               	bcf	3971,7,c	;volatile
  1282                           
  1283                           ;main.c: 158: }
  1284  007F08  0012               	return	
  1285  007F0A                     l1312:
  1286  007F0A  0E00               	movlw	0
  1287  007F0C  6E08               	movwf	serial_rx@timeout+1,c
  1288  007F0E  0E00               	movlw	0
  1289  007F10  6E07               	movwf	serial_rx@timeout,c
  1290  007F12  EC28  F03D         	call	_serial_rx	;wreg free
  1291                           
  1292                           ; Switch size 1, requested type "space"
  1293                           ; Number of cases is 9, Range of values is 48 to 116
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte           28    15 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298  007F16  0A30               	xorlw	48	; case 48
  1299  007F18  B4D8               	btfsc	status,2,c
  1300  007F1A  D7DE               	goto	l161
  1301  007F1C  0A01               	xorlw	1	; case 49
  1302  007F1E  B4D8               	btfsc	status,2,c
  1303  007F20  D7DD               	goto	l163
  1304  007F22  0A03               	xorlw	3	; case 50
  1305  007F24  B4D8               	btfsc	status,2,c
  1306  007F26  D7DC               	goto	l164
  1307  007F28  0A01               	xorlw	1	; case 51
  1308  007F2A  B4D8               	btfsc	status,2,c
  1309  007F2C  D7DB               	goto	l165
  1310  007F2E  0A07               	xorlw	7	; case 52
  1311  007F30  B4D8               	btfsc	status,2,c
  1312  007F32  D7DA               	goto	l166
  1313  007F34  0A01               	xorlw	1	; case 53
  1314  007F36  B4D8               	btfsc	status,2,c
  1315  007F38  D7D9               	goto	l167
  1316  007F3A  0A03               	xorlw	3	; case 54
  1317  007F3C  B4D8               	btfsc	status,2,c
  1318  007F3E  D7D8               	goto	l168
  1319  007F40  0A01               	xorlw	1	; case 55
  1320  007F42  B4D8               	btfsc	status,2,c
  1321  007F44  D7D7               	goto	l169
  1322  007F46  0A43               	xorlw	67	; case 116
  1323  007F48  A4D8               	btfss	status,2,c
  1324                           
  1325                           ;main.c: 159: break;
  1326  007F4A  0012               	return	
  1327  007F4C  D7D5               	goto	l170
  1328  007F4E                     l174:
  1329                           
  1330                           ;main.c: 163: PORTBbits.RB0 = 0;
  1331  007F4E  9081               	bcf	3969,0,c	;volatile
  1332                           
  1333                           ;main.c: 164: break;
  1334  007F50  0012               	return	
  1335  007F52                     l176:
  1336                           
  1337                           ;main.c: 166: PORTBbits.RB1 = 0;
  1338  007F52  9281               	bcf	3969,1,c	;volatile
  1339                           
  1340                           ;main.c: 167: break;
  1341  007F54  0012               	return	
  1342  007F56                     l177:
  1343                           
  1344                           ;main.c: 169: PORTBbits.RB2 = 0;
  1345  007F56  9481               	bcf	3969,2,c	;volatile
  1346                           
  1347                           ;main.c: 170: break;
  1348  007F58  0012               	return	
  1349  007F5A                     l178:
  1350                           
  1351                           ;main.c: 172: PORTBbits.RB3 = 0;
  1352  007F5A  9681               	bcf	3969,3,c	;volatile
  1353                           
  1354                           ;main.c: 173: break;
  1355  007F5C  0012               	return	
  1356  007F5E                     l179:
  1357                           
  1358                           ;main.c: 175: PORTBbits.RB4 = 0;
  1359  007F5E  9881               	bcf	3969,4,c	;volatile
  1360                           
  1361                           ;main.c: 176: break;
  1362  007F60  0012               	return	
  1363  007F62                     l180:
  1364                           
  1365                           ;main.c: 178: PORTBbits.RB5 = 0;
  1366  007F62  9A81               	bcf	3969,5,c	;volatile
  1367                           
  1368                           ;main.c: 179: break;
  1369  007F64  0012               	return	
  1370  007F66                     l181:
  1371                           
  1372                           ;main.c: 181: PORTBbits.RB6 = 0;
  1373  007F66  9C81               	bcf	3969,6,c	;volatile
  1374                           
  1375                           ;main.c: 182: break;
  1376  007F68  0012               	return	
  1377  007F6A                     l182:
  1378                           
  1379                           ;main.c: 184: PORTBbits.RB7 = 0;
  1380  007F6A  9E81               	bcf	3969,7,c	;volatile
  1381                           
  1382                           ;main.c: 185: break;
  1383  007F6C  0012               	return	
  1384  007F6E                     l183:
  1385                           
  1386                           ;main.c: 187: PORTBbits.RB0 = 0;
  1387  007F6E  9081               	bcf	3969,0,c	;volatile
  1388                           
  1389                           ;main.c: 188: PORTBbits.RB1 = 0;
  1390  007F70  9281               	bcf	3969,1,c	;volatile
  1391                           
  1392                           ;main.c: 189: PORTBbits.RB2 = 0;
  1393  007F72  9481               	bcf	3969,2,c	;volatile
  1394                           
  1395                           ;main.c: 190: PORTBbits.RB3 = 0;
  1396  007F74  9681               	bcf	3969,3,c	;volatile
  1397                           
  1398                           ;main.c: 191: PORTBbits.RB4 = 0;
  1399  007F76  9881               	bcf	3969,4,c	;volatile
  1400                           
  1401                           ;main.c: 192: PORTBbits.RB5 = 0;
  1402  007F78  9A81               	bcf	3969,5,c	;volatile
  1403                           
  1404                           ;main.c: 193: PORTBbits.RB6 = 0;
  1405  007F7A  9C81               	bcf	3969,6,c	;volatile
  1406                           
  1407                           ;main.c: 194: PORTBbits.RB7 = 0;
  1408  007F7C  9E81               	bcf	3969,7,c	;volatile
  1409                           
  1410                           ;main.c: 196: }
  1411                           
  1412                           ;main.c: 195: break;
  1413  007F7E  0012               	return	
  1414  007F80                     l1316:
  1415  007F80  0E00               	movlw	0
  1416  007F82  6E08               	movwf	serial_rx@timeout+1,c
  1417  007F84  0E00               	movlw	0
  1418  007F86  6E07               	movwf	serial_rx@timeout,c
  1419  007F88  EC28  F03D         	call	_serial_rx	;wreg free
  1420                           
  1421                           ; Switch size 1, requested type "space"
  1422                           ; Number of cases is 9, Range of values is 48 to 116
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte           28    15 (average)
  1426                           ;	Chosen strategy is simple_byte
  1427  007F8C  0A30               	xorlw	48	; case 48
  1428  007F8E  B4D8               	btfsc	status,2,c
  1429  007F90  D7DE               	goto	l174
  1430  007F92  0A01               	xorlw	1	; case 49
  1431  007F94  B4D8               	btfsc	status,2,c
  1432  007F96  D7DD               	goto	l176
  1433  007F98  0A03               	xorlw	3	; case 50
  1434  007F9A  B4D8               	btfsc	status,2,c
  1435  007F9C  D7DC               	goto	l177
  1436  007F9E  0A01               	xorlw	1	; case 51
  1437  007FA0  B4D8               	btfsc	status,2,c
  1438  007FA2  D7DB               	goto	l178
  1439  007FA4  0A07               	xorlw	7	; case 52
  1440  007FA6  B4D8               	btfsc	status,2,c
  1441  007FA8  D7DA               	goto	l179
  1442  007FAA  0A01               	xorlw	1	; case 53
  1443  007FAC  B4D8               	btfsc	status,2,c
  1444  007FAE  D7D9               	goto	l180
  1445  007FB0  0A03               	xorlw	3	; case 54
  1446  007FB2  B4D8               	btfsc	status,2,c
  1447  007FB4  D7D8               	goto	l181
  1448  007FB6  0A01               	xorlw	1	; case 55
  1449  007FB8  B4D8               	btfsc	status,2,c
  1450  007FBA  D7D7               	goto	l182
  1451  007FBC  0A43               	xorlw	67	; case 116
  1452  007FBE  A4D8               	btfss	status,2,c
  1453                           
  1454                           ;main.c: 198: }
  1455                           
  1456                           ;main.c: 197: break;
  1457  007FC0  0012               	return	
  1458  007FC2  D7D5               	goto	l183
  1459  007FC4                     l1320:
  1460  007FC4  0E00               	movlw	0
  1461  007FC6  6E08               	movwf	serial_rx@timeout+1,c
  1462  007FC8  0E00               	movlw	0
  1463  007FCA  6E07               	movwf	serial_rx@timeout,c
  1464  007FCC  EC28  F03D         	call	_serial_rx	;wreg free
  1465                           
  1466                           ; Switch size 1, requested type "space"
  1467                           ; Number of cases is 2, Range of values is 66 to 68
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            7     4 (average)
  1471                           ;	Chosen strategy is simple_byte
  1472  007FD0  0A42               	xorlw	66	; case 66
  1473  007FD2  B4D8               	btfsc	status,2,c
  1474  007FD4  D7D5               	goto	l1316
  1475  007FD6  0A06               	xorlw	6	; case 68
  1476  007FD8  A4D8               	btfss	status,2,c
  1477                           
  1478                           ;main.c: 200: }
  1479                           
  1480                           ;main.c: 199: break;
  1481  007FDA  0012               	return	
  1482  007FDC  D796               	goto	l1312
  1483  007FDE                     l1324:
  1484  007FDE  0E00               	movlw	0
  1485  007FE0  6E08               	movwf	serial_rx@timeout+1,c
  1486  007FE2  0E00               	movlw	0
  1487  007FE4  6E07               	movwf	serial_rx@timeout,c
  1488  007FE6  EC28  F03D         	call	_serial_rx	;wreg free
  1489                           
  1490                           ; Switch size 1, requested type "space"
  1491                           ; Number of cases is 4, Range of values is 48 to 116
  1492                           ; switch strategies available:
  1493                           ; Name         Instructions Cycles
  1494                           ; simple_byte           13     7 (average)
  1495                           ;	Chosen strategy is simple_byte
  1496  007FEA  0A30               	xorlw	48	; case 48
  1497  007FEC  B4D8               	btfsc	status,2,c
  1498  007FEE  D7EA               	goto	l1320
  1499  007FF0  0A01               	xorlw	1	; case 49
  1500  007FF2  B4D8               	btfsc	status,2,c
  1501  007FF4  D764               	goto	l1310
  1502  007FF6  0A52               	xorlw	82	; case 99
  1503  007FF8  B4D8               	btfsc	status,2,c
  1504  007FFA  D6D8               	goto	l1298
  1505  007FFC  0A17               	xorlw	23	; case 116
  1506  007FFE  0012               	return	
  1507  008000                     __end_of_loop:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           wreg	equ	0xFE8
  1511                           status	equ	0xFD8
  1512                           
  1513 ;; *************** function _serial_rx *****************
  1514 ;; Defined at:
  1515 ;;		line 77 in file "serial.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  timeout         2    6[COMRAM] unsigned int 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  to              2    8[COMRAM] unsigned int 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      unsigned char 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1529 ;;      Params:         2       0       0       0       0       0       0       0       0
  1530 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1532 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1533 ;;Total ram usage:        4 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    1
  1536 ;; This function calls:
  1537 ;;		_atraso_ms
  1538 ;; This function is called by:
  1539 ;;		_loop
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text7
  1544  007A50                     __ptext7:
  1545                           	opt stack 0
  1546  007A50                     _serial_rx:
  1547                           	opt stack 28
  1548                           
  1549                           ;serial.c: 79: unsigned int to=0;
  1550                           
  1551                           ;incstack = 0
  1552  007A50  0E00               	movlw	0
  1553  007A52  6E0A               	movwf	serial_rx@to+1,c
  1554  007A54  0E00               	movlw	0
  1555  007A56  6E09               	movwf	serial_rx@to,c
  1556                           
  1557                           ;serial.c: 81: if(RCSTAbits.FERR || RCSTAbits.OERR)
  1558  007A58  B4AB               	btfsc	4011,2,c	;volatile
  1559  007A5A  D002               	goto	l34
  1560  007A5C  A2AB               	btfss	4011,1,c	;volatile
  1561  007A5E  D00D               	goto	l1232
  1562  007A60                     l34:
  1563                           
  1564                           ;serial.c: 82: {
  1565                           ;serial.c: 83: RCSTAbits.CREN=0;
  1566  007A60  98AB               	bcf	4011,4,c	;volatile
  1567                           
  1568                           ;serial.c: 84: RCSTAbits.CREN=1;
  1569  007A62  88AB               	bsf	4011,4,c	;volatile
  1570                           
  1571                           ;serial.c: 85: }
  1572                           ;serial.c: 87: while(((to < timeout)||(!timeout))&&(!PIR1bits.RCIF))
  1573  007A64  D00A               	goto	l1232
  1574  007A66                     l1228:
  1575                           
  1576                           ;serial.c: 88: {
  1577                           ;serial.c: 89: atraso_ms(20);
  1578  007A66  0E00               	movlw	0
  1579  007A68  6E02               	movwf	atraso_ms@valor+1,c
  1580  007A6A  0E14               	movlw	20
  1581  007A6C  6E01               	movwf	atraso_ms@valor,c
  1582  007A6E  EC0A  F03D         	call	_atraso_ms	;wreg free
  1583                           
  1584                           ;serial.c: 90: to+=20;
  1585  007A72  0E14               	movlw	20
  1586  007A74  2609               	addwf	serial_rx@to,f,c
  1587  007A76  0E00               	movlw	0
  1588  007A78  220A               	addwfc	serial_rx@to+1,f,c
  1589  007A7A                     l1232:
  1590  007A7A  5007               	movf	serial_rx@timeout,w,c
  1591  007A7C  5C09               	subwf	serial_rx@to,w,c
  1592  007A7E  5008               	movf	serial_rx@timeout+1,w,c
  1593  007A80  580A               	subwfb	serial_rx@to+1,w,c
  1594  007A82  A0D8               	btfss	status,0,c
  1595  007A84  D004               	goto	l40
  1596  007A86  5007               	movf	serial_rx@timeout,w,c
  1597  007A88  1008               	iorwf	serial_rx@timeout+1,w,c
  1598  007A8A  A4D8               	btfss	status,2,c
  1599  007A8C  D002               	goto	l41
  1600  007A8E                     l40:
  1601  007A8E  AA9E               	btfss	3998,5,c	;volatile
  1602  007A90  D7EA               	goto	l1228
  1603  007A92                     l41:
  1604                           
  1605                           ;serial.c: 91: }
  1606                           ;serial.c: 92: if(PIR1bits.RCIF)
  1607  007A92  AA9E               	btfss	3998,5,c	;volatile
  1608  007A94  D002               	goto	l1242
  1609                           
  1610                           ;serial.c: 93: return RCREG;
  1611  007A96  50AE               	movf	4014,w,c	;volatile
  1612  007A98  0012               	return	
  1613  007A9A                     l1242:
  1614                           
  1615                           ;serial.c: 94: else
  1616                           ;serial.c: 95: return 0xA5;
  1617  007A9A  0EA5               	movlw	165
  1618  007A9C  0012               	return	
  1619  007A9E                     __end_of_serial_rx:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           wreg	equ	0xFE8
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _atraso_ms *****************
  1626 ;; Defined at:
  1627 ;;		line 31 in file "atraso.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  valor           2    0[COMRAM] unsigned int 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  i               2    2[COMRAM] unsigned int 
  1632 ;;  j2              1    5[COMRAM] volatile unsigned char 
  1633 ;;  j1              1    4[COMRAM] volatile unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  1    wreg      void 
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         2       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        6 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_serial_rx
  1653 ;;		_serial_rx_str
  1654 ;;		_adc_sample
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text8
  1659  007A14                     __ptext8:
  1660                           	opt stack 0
  1661  007A14                     _atraso_ms:
  1662                           	opt stack 28
  1663                           
  1664                           ;atraso.c: 33: unsigned int i;
  1665                           ;atraso.c: 34: volatile unsigned char j1;
  1666                           ;atraso.c: 35: volatile unsigned char j2=0;
  1667                           
  1668                           ;incstack = 0
  1669  007A14  0E00               	movlw	0
  1670  007A16  6E06               	movwf	atraso_ms@j2,c	;volatile
  1671                           
  1672                           ;atraso.c: 37: for (i =0; i< valor; i++)
  1673  007A18  0E00               	movlw	0
  1674  007A1A  6E04               	movwf	atraso_ms@i+1,c
  1675  007A1C  0E00               	movlw	0
  1676  007A1E  6E03               	movwf	atraso_ms@i,c
  1677  007A20  D010               	goto	l1144
  1678  007A22                     l1140:
  1679                           
  1680                           ;atraso.c: 38: {
  1681                           ;atraso.c: 39: j1=(8000000/(4000l*50));
  1682  007A22  0E28               	movlw	40
  1683  007A24  6E05               	movwf	atraso_ms@j1,c	;volatile
  1684  007A26                     l1:
  1685  007A26  0E09               	movlw	9	; 20 j1 ;# 
  1686  007A28  6F06               	movwf	atraso_ms@j2,b	; 20 j1 ;# 
  1687  007A2A  F000               	nop		; 180 j2j1 ;# 
  1688  007A2C  F000               	nop		; 180 j2j1 ;# 
  1689  007A2E  2F06               	decfsz	atraso_ms@j2,f,b	; 160 j2j1 -j1 ;# 
  1690                           
  1691                           ; 40 2j1 ;# 
  1692  007A30  EF16  F03D         	goto	($+-3)	; 320 2j2j1 -2j1 ;# 
  1693  007A34  F000               	nop		; 20 j1 ;# 
  1694  007A36  2F05               	decfsz	atraso_ms@j1,f,b	; 19 j1 -1 ;# 
  1695                           
  1696                           ; 2 2 ;# 
  1697  007A38  EF13  F03D         	goto	l1	; 38 2j1 -2 ;# 
  1698  007A3C  F000               	nop		; 1 1 ;# 
  1699  007A3E  4A03               	infsnz	atraso_ms@i,f,c
  1700  007A40  2A04               	incf	atraso_ms@i+1,f,c
  1701  007A42                     l1144:
  1702  007A42  5001               	movf	atraso_ms@valor,w,c
  1703  007A44  5C03               	subwf	atraso_ms@i,w,c
  1704  007A46  5002               	movf	atraso_ms@valor+1,w,c
  1705  007A48  5804               	subwfb	atraso_ms@i+1,w,c
  1706  007A4A  B0D8               	btfsc	status,0,c
  1707  007A4C  0012               	return	
  1708  007A4E  D7E9               	goto	l1140
  1709  007A50                     __end_of_atraso_ms:
  1710                           	opt stack 0
  1711                           tblptru	equ	0xFF8
  1712                           wreg	equ	0xFE8
  1713                           status	equ	0xFD8
  1714                           
  1715 ;; *************** function _PWM1_Set_Duty *****************
  1716 ;; Defined at:
  1717 ;;		line 105 in file "pwm.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  d               1    wreg     unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  d               1   27[COMRAM] unsigned char 
  1722 ;;  temp            2   28[COMRAM] unsigned int 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0
  1733 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1734 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1735 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1736 ;;Total ram usage:        5 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    1
  1739 ;; This function calls:
  1740 ;;		___lldiv
  1741 ;;		___lmul
  1742 ;; This function is called by:
  1743 ;;		_setup
  1744 ;;		_loop
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           	psect	text9
  1749  007B76                     __ptext9:
  1750                           	opt stack 0
  1751  007B76                     _PWM1_Set_Duty:
  1752                           	opt stack 28
  1753                           
  1754                           ;incstack = 0
  1755                           ;PWM1_Set_Duty@d stored from wreg
  1756  007B76  6E1C               	movwf	PWM1_Set_Duty@d,c
  1757                           
  1758                           ;pwm.c: 107: unsigned int temp;
  1759                           ;pwm.c: 109: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/255;
  1760  007B78  501C               	movf	PWM1_Set_Duty@d,w,c
  1761  007B7A  6E01               	movwf	___lmul@multiplier,c
  1762  007B7C  6A02               	clrf	___lmul@multiplier+1,c
  1763  007B7E  6A03               	clrf	___lmul@multiplier+2,c
  1764  007B80  6A04               	clrf	___lmul@multiplier+3,c
  1765  007B82  50CB               	movf	4043,w,c	;volatile
  1766  007B84  6E1A               	movwf	??_PWM1_Set_Duty& (0+255),c
  1767  007B86  6A1B               	clrf	(??_PWM1_Set_Duty+1)& (0+255),c
  1768  007B88  90D8               	bcf	status,0,c
  1769  007B8A  361A               	rlcf	??_PWM1_Set_Duty,f,c
  1770  007B8C  361B               	rlcf	??_PWM1_Set_Duty+1,f,c
  1771  007B8E  90D8               	bcf	status,0,c
  1772  007B90  361A               	rlcf	??_PWM1_Set_Duty,f,c
  1773  007B92  361B               	rlcf	??_PWM1_Set_Duty+1,f,c
  1774  007B94  0E03               	movlw	3
  1775  007B96  121A               	iorwf	??_PWM1_Set_Duty,f,c
  1776  007B98  0E00               	movlw	0
  1777  007B9A  121B               	iorwf	??_PWM1_Set_Duty+1,f,c
  1778  007B9C  C01A  F005         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
  1779  007BA0  C01B  F006         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
  1780  007BA4  0E00               	movlw	0
  1781  007BA6  BE06               	btfsc	___lmul@multiplicand+1,7,c
  1782  007BA8  0EFF               	movlw	-1
  1783  007BAA  6E07               	movwf	___lmul@multiplicand+2,c
  1784  007BAC  6E08               	movwf	___lmul@multiplicand+3,c
  1785  007BAE  EC4F  F03D         	call	___lmul	;wreg free
  1786  007BB2  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1787  007BB6  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1788  007BBA  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1789  007BBE  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1790  007BC2  0EFF               	movlw	255
  1791  007BC4  6E11               	movwf	___lldiv@divisor,c
  1792  007BC6  0E00               	movlw	0
  1793  007BC8  6E12               	movwf	___lldiv@divisor+1,c
  1794  007BCA  0E00               	movlw	0
  1795  007BCC  6E13               	movwf	___lldiv@divisor+2,c
  1796  007BCE  0E00               	movlw	0
  1797  007BD0  6E14               	movwf	___lldiv@divisor+3,c
  1798  007BD2  EC7A  F03D         	call	___lldiv	;wreg free
  1799  007BD6  C00D  F01D         	movff	?___lldiv,PWM1_Set_Duty@temp
  1800  007BDA  C00E  F01E         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
  1801                           
  1802                           ;pwm.c: 111: CCPR1L= (0x03FC&temp)>>2;
  1803  007BDE  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1804  007BE2  C01E  F01B         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
  1805  007BE6  90D8               	bcf	status,0,c
  1806  007BE8  321B               	rrcf	??_PWM1_Set_Duty+1,f,c
  1807  007BEA  321A               	rrcf	??_PWM1_Set_Duty,f,c
  1808  007BEC  90D8               	bcf	status,0,c
  1809  007BEE  321B               	rrcf	??_PWM1_Set_Duty+1,f,c
  1810  007BF0  321A               	rrcf	??_PWM1_Set_Duty,f,c
  1811  007BF2  501A               	movf	??_PWM1_Set_Duty,w,c
  1812  007BF4  6EBE               	movwf	4030,c	;volatile
  1813                           
  1814                           ;pwm.c: 112: CCP1CON=((0x0003&temp)<<4)|0x0C;
  1815  007BF6  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1816  007BFA  0E03               	movlw	3
  1817  007BFC  161A               	andwf	??_PWM1_Set_Duty,f,c
  1818  007BFE  381A               	swapf	??_PWM1_Set_Duty,w,c
  1819  007C00  0BF0               	andlw	240
  1820  007C02  090C               	iorlw	12
  1821  007C04  6EBD               	movwf	4029,c	;volatile
  1822  007C06  0012               	return		;funcret
  1823  007C08                     __end_of_PWM1_Set_Duty:
  1824                           	opt stack 0
  1825                           tblptru	equ	0xFF8
  1826                           wreg	equ	0xFE8
  1827                           status	equ	0xFD8
  1828                           
  1829 ;; *************** function ___lmul *****************
  1830 ;; Defined at:
  1831 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul32.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  multiplier      4    0[COMRAM] unsigned long 
  1834 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  product         4    8[COMRAM] unsigned long 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  4    0[COMRAM] unsigned long 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1846 ;;      Params:         8       0       0       0       0       0       0       0       0
  1847 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1849 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1850 ;;Total ram usage:       12 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		_PWM1_Set_Duty
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text10
  1860  007A9E                     __ptext10:
  1861                           	opt stack 0
  1862  007A9E                     ___lmul:
  1863                           	opt stack 28
  1864                           
  1865                           ;incstack = 0
  1866  007A9E  0E00               	movlw	0
  1867  007AA0  6E09               	movwf	___lmul@product,c
  1868  007AA2  0E00               	movlw	0
  1869  007AA4  6E0A               	movwf	___lmul@product+1,c
  1870  007AA6  0E00               	movlw	0
  1871  007AA8  6E0B               	movwf	___lmul@product+2,c
  1872  007AAA  0E00               	movlw	0
  1873  007AAC  6E0C               	movwf	___lmul@product+3,c
  1874  007AAE                     l1148:
  1875  007AAE  A001               	btfss	___lmul@multiplier,0,c
  1876  007AB0  D008               	goto	l1152
  1877  007AB2  5005               	movf	___lmul@multiplicand,w,c
  1878  007AB4  2609               	addwf	___lmul@product,f,c
  1879  007AB6  5006               	movf	___lmul@multiplicand+1,w,c
  1880  007AB8  220A               	addwfc	___lmul@product+1,f,c
  1881  007ABA  5007               	movf	___lmul@multiplicand+2,w,c
  1882  007ABC  220B               	addwfc	___lmul@product+2,f,c
  1883  007ABE  5008               	movf	___lmul@multiplicand+3,w,c
  1884  007AC0  220C               	addwfc	___lmul@product+3,f,c
  1885  007AC2                     l1152:
  1886  007AC2  90D8               	bcf	status,0,c
  1887  007AC4  3605               	rlcf	___lmul@multiplicand,f,c
  1888  007AC6  3606               	rlcf	___lmul@multiplicand+1,f,c
  1889  007AC8  3607               	rlcf	___lmul@multiplicand+2,f,c
  1890  007ACA  3608               	rlcf	___lmul@multiplicand+3,f,c
  1891  007ACC  90D8               	bcf	status,0,c
  1892  007ACE  3204               	rrcf	___lmul@multiplier+3,f,c
  1893  007AD0  3203               	rrcf	___lmul@multiplier+2,f,c
  1894  007AD2  3202               	rrcf	___lmul@multiplier+1,f,c
  1895  007AD4  3201               	rrcf	___lmul@multiplier,f,c
  1896  007AD6  5001               	movf	___lmul@multiplier,w,c
  1897  007AD8  1002               	iorwf	___lmul@multiplier+1,w,c
  1898  007ADA  1003               	iorwf	___lmul@multiplier+2,w,c
  1899  007ADC  1004               	iorwf	___lmul@multiplier+3,w,c
  1900  007ADE  A4D8               	btfss	status,2,c
  1901  007AE0  D7E6               	goto	l1148
  1902  007AE2  C009  F001         	movff	___lmul@product,?___lmul
  1903  007AE6  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1904  007AEA  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1905  007AEE  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1906  007AF2  0012               	return		;funcret
  1907  007AF4                     __end_of___lmul:
  1908                           	opt stack 0
  1909                           tblptru	equ	0xFF8
  1910                           wreg	equ	0xFE8
  1911                           status	equ	0xFD8
  1912                           
  1913 ;; *************** function ___lldiv *****************
  1914 ;; Defined at:
  1915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  dividend        4   12[COMRAM] unsigned long 
  1918 ;;  divisor         4   16[COMRAM] unsigned long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  quotient        4   20[COMRAM] unsigned long 
  1921 ;;  counter         1   24[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  4   12[COMRAM] unsigned long 
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1931 ;;      Params:         8       0       0       0       0       0       0       0       0
  1932 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1934 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1935 ;;Total ram usage:       13 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_PWM1_Set_Duty
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text11
  1945  007AF4                     __ptext11:
  1946                           	opt stack 0
  1947  007AF4                     ___lldiv:
  1948                           	opt stack 28
  1949                           
  1950                           ;incstack = 0
  1951  007AF4  0E00               	movlw	0
  1952  007AF6  6E15               	movwf	___lldiv@quotient,c
  1953  007AF8  0E00               	movlw	0
  1954  007AFA  6E16               	movwf	___lldiv@quotient+1,c
  1955  007AFC  0E00               	movlw	0
  1956  007AFE  6E17               	movwf	___lldiv@quotient+2,c
  1957  007B00  0E00               	movlw	0
  1958  007B02  6E18               	movwf	___lldiv@quotient+3,c
  1959  007B04  5011               	movf	___lldiv@divisor,w,c
  1960  007B06  1012               	iorwf	___lldiv@divisor+1,w,c
  1961  007B08  1013               	iorwf	___lldiv@divisor+2,w,c
  1962  007B0A  1014               	iorwf	___lldiv@divisor+3,w,c
  1963  007B0C  B4D8               	btfsc	status,2,c
  1964  007B0E  D02A               	goto	l598
  1965  007B10  0E01               	movlw	1
  1966  007B12  6E19               	movwf	___lldiv@counter,c
  1967  007B14  D006               	goto	l1208
  1968  007B16                     l1206:
  1969  007B16  90D8               	bcf	status,0,c
  1970  007B18  3611               	rlcf	___lldiv@divisor,f,c
  1971  007B1A  3612               	rlcf	___lldiv@divisor+1,f,c
  1972  007B1C  3613               	rlcf	___lldiv@divisor+2,f,c
  1973  007B1E  3614               	rlcf	___lldiv@divisor+3,f,c
  1974  007B20  2A19               	incf	___lldiv@counter,f,c
  1975  007B22                     l1208:
  1976  007B22  AE14               	btfss	___lldiv@divisor+3,7,c
  1977  007B24  D7F8               	goto	l1206
  1978  007B26                     l1210:
  1979  007B26  90D8               	bcf	status,0,c
  1980  007B28  3615               	rlcf	___lldiv@quotient,f,c
  1981  007B2A  3616               	rlcf	___lldiv@quotient+1,f,c
  1982  007B2C  3617               	rlcf	___lldiv@quotient+2,f,c
  1983  007B2E  3618               	rlcf	___lldiv@quotient+3,f,c
  1984  007B30  5011               	movf	___lldiv@divisor,w,c
  1985  007B32  5C0D               	subwf	___lldiv@dividend,w,c
  1986  007B34  5012               	movf	___lldiv@divisor+1,w,c
  1987  007B36  580E               	subwfb	___lldiv@dividend+1,w,c
  1988  007B38  5013               	movf	___lldiv@divisor+2,w,c
  1989  007B3A  580F               	subwfb	___lldiv@dividend+2,w,c
  1990  007B3C  5014               	movf	___lldiv@divisor+3,w,c
  1991  007B3E  5810               	subwfb	___lldiv@dividend+3,w,c
  1992  007B40  A0D8               	btfss	status,0,c
  1993  007B42  D009               	goto	l1218
  1994  007B44  5011               	movf	___lldiv@divisor,w,c
  1995  007B46  5E0D               	subwf	___lldiv@dividend,f,c
  1996  007B48  5012               	movf	___lldiv@divisor+1,w,c
  1997  007B4A  5A0E               	subwfb	___lldiv@dividend+1,f,c
  1998  007B4C  5013               	movf	___lldiv@divisor+2,w,c
  1999  007B4E  5A0F               	subwfb	___lldiv@dividend+2,f,c
  2000  007B50  5014               	movf	___lldiv@divisor+3,w,c
  2001  007B52  5A10               	subwfb	___lldiv@dividend+3,f,c
  2002  007B54  8015               	bsf	___lldiv@quotient,0,c
  2003  007B56                     l1218:
  2004  007B56  90D8               	bcf	status,0,c
  2005  007B58  3214               	rrcf	___lldiv@divisor+3,f,c
  2006  007B5A  3213               	rrcf	___lldiv@divisor+2,f,c
  2007  007B5C  3212               	rrcf	___lldiv@divisor+1,f,c
  2008  007B5E  3211               	rrcf	___lldiv@divisor,f,c
  2009  007B60  2E19               	decfsz	___lldiv@counter,f,c
  2010  007B62  D7E1               	goto	l1210
  2011  007B64                     l598:
  2012  007B64  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  2013  007B68  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  2014  007B6C  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  2015  007B70  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  2016  007B74  0012               	return		;funcret
  2017  007B76                     __end_of___lldiv:
  2018                           	opt stack 0
  2019  0000                     tblptru	equ	0xFF8
  2020                           wreg	equ	0xFE8
  2021                           status	equ	0xFD8
  2022                           tblptru	equ	0xFF8
  2023                           wreg	equ	0xFE8
  2024                           status	equ	0xFD8
  2025                           
  2026                           	psect	rparam
  2027  0000                     tblptru	equ	0xFF8
  2028                           wreg	equ	0xFE8
  2029                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      34
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sp__serial_rx_str	PTR unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _setup->_PWM1_Set_Duty
    _PWM1_Init->___aldiv
    _loop->_PWM1_Set_Duty
    _serial_rx->_atraso_ms
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2867
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1304
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                        _serial_init
 ---------------------------------------------------------------------------------
 (2) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Init                                            8     6      2     625
                                             14 COMRAM     8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     428
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _loop                                                 0     0      0    1563
                      _PWM1_Set_Duty
                          _serial_rx
 ---------------------------------------------------------------------------------
 (2) _serial_rx                                            4     2      2     884
                                              6 COMRAM     4     2      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            6     4      2     240
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_Set_Duty                                        5     5      0     679
                                             25 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     322
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     _PWM1_Set_Duty
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _serial_rx
       _atraso_ms
   _setup
     _PWM1_Init
       ___aldiv
     _PWM1_Set_Duty
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _PWM1_Start
     _serial_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      22       1       35.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      20        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Jun 30 17:28:38 2017

                      l1 7A26                       l40 7A8E                       l41 7A92  
                     l34 7A60        PWM1_Set_Duty@temp 001D              __CFG_BORV$3 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l211 79BE                      l140 7DE6  
                    l141 7DEA                      l150 7E50                      l142 7DEE  
                    l134 7DD2                      l151 7E54                      l143 7DF2  
                    l152 7E58                      l136 7DD6                      l208 79B8  
                    l161 7ED8                      l153 7E5C                      l137 7DDA  
                    l170 7EF8                      l154 7E60                      l138 7DDE  
                    l163 7EDC                      l155 7E64                      l147 7E48  
                    l139 7DE2                      l180 7F62                      l164 7EE0  
                    l156 7E68                      l181 7F66                      l165 7EE4  
                    l149 7E4C                      l182 7F6A                      l174 7F4E  
                    l166 7EE8                      l183 7F6E                      l167 7EEC  
                    l176 7F52                      l168 7EF0                      l177 7F56  
                    l169 7EF4                      l178 7F5A                      l179 7F5E  
                    l598 7B64             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      u535 7D00                      u565 7D8A  
           __CFG_BOR$OFF 000000                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1210 7B26  
                   l1140 7A22                     l1206 7B16                     l1302 7E04  
                   l1310 7EBE                     l1208 7B22                     l1152 7AC2  
                   l1144 7A42                     l1232 7A7A                     l1312 7F0A  
                   l1320 7FC4                     l1218 7B56                     l1242 7A9A  
                   l1306 7E7A                     l1170 7C3C                     l1148 7AAE  
                   l1228 7A66                     l1316 7F80                     l1324 7FDE  
                   l1180 7C6E                     l1164 7C24                     l1262 7D3A  
                   l1176 7C5E                     l1192 7CAC                     l1272 7DA0  
                   l1352 79E0                     l1178 7C6A                     l1196 7CC2  
                   l1188 7C9E                     l1268 7D7A                     l1298 7DAC  
                   _main 79C4                     _loop 7DAA                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000         serial_rx@timeout 0007  
           ___param_bank 000000            __CFG_PLLDIV$2 000000           __CFG_CCP2MX$ON 000000  
        __end_of___aldiv 7CD4                    ?_main 0001                    ?_loop 0001  
            atraso_ms@j1 0005              atraso_ms@j2 0006          __end_of___lldiv 7B76  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _PORTB 000F81  
                  _PORTD 000F83            __CFG_USBDIV$2 000000                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
    ___lmul@multiplicand 0005            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000       __size_of_PWM1_Init 00D6              ?_PWM1_Start 0001  
         __CFG_EBTRB$OFF 000000                    _value 001F                    _setup 79E6  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 7988             __end_of_main 79E6             __end_of_loop 8000  
                 ??_main 001F                   ??_loop 001F            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
                 ?_setup 0001           __CFG_XINST$OFF 000000             ?_serial_init 0001  
      __end_of_PWM1_Init 7DAA                   ___lmul 7A9E                ??___aldiv 0009  
    __size_of_PWM1_Start 0016                ??___lldiv 0015                   _valueh 0022  
                 _valuel 0021                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7990            ___rparam_used 000001           __pcstackCOMRAM 0001  
  __end_of_PWM1_Set_Duty 7C08            __end_of_setup 7A14                  ??_setup 001F  
     __size_of_atraso_ms 003C                  ?___lmul 0001                  _CCP1CON 000FBD  
         ___lmul@product 0009       __size_of_serial_rx 004E             ??_PWM1_Start 0001  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 7C08          __size_of___lmul 0056                  ___lldiv 7AF4  
     __end_of_PWM1_Start 79C4     __size_of_serial_init 0014        __end_of_atraso_ms 7A50  
        __CFG_STVREN$OFF 000000                  __pcinit 7988                  __ramtop 0800  
                __ptext0 79C4                  __ptext1 79E6                  __ptext2 799A  
                __ptext3 79AE                  __ptext4 7CD4                  __ptext5 7C08  
                __ptext6 7DAA                  __ptext7 7A50                  __ptext8 7A14  
                __ptext9 7B76                _T2CONbits 000FCA         ___aldiv@dividend 0001  
            serial_rx@to 0009     end_of_initialization 7990            __Lmediumconst 0000  
      __end_of_serial_rx 7A9E          ___lldiv@divisor 0011          ___lldiv@counter 0019  
              _RCSTAbits 000FAB         ___aldiv@quotient 000B                _PWM1_Init 7CD4  
              _PORTBbits 000F81                _PORTCbits 000F82                _PORTDbits 000F83  
              _TRISCbits 000F94           PWM1_Set_Duty@d 001C                _TXSTAbits 000FAC  
             atraso_ms@i 0003           __end_of___lmul 7AF4               ?_PWM1_Init 000F  
    start_initialization 7988                 ??___lmul 0009         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 001F   __size_of_PWM1_Set_Duty 0092                 ?___aldiv 0001  
               ?___lldiv 000D              ??_PWM1_Init 0011                _atraso_ms 7A14  
         __size_of_setup 002E               PWM1_Init@f 000F           atraso_ms@valor 0001  
        ___aldiv@divisor 0005          ___aldiv@counter 0009            PWM1_Init@temp 0015  
               _PIR1bits 000F9E            ??_serial_init 0001                _serial_rx 7A50  
       __CFG_WDTPS$32768 000000            _PWM1_Set_Duty 7B76               _ADCON0bits 000FC2  
             ?_atraso_ms 0001        ___lmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000               ?_serial_rx 0007           ?_PWM1_Set_Duty 0001  
       __size_of___aldiv 00CC         __size_of___lldiv 0082      __end_of_serial_init 79AE  
               __ptext10 7A9E                 __ptext11 7AF4            __size_of_main 0022  
          __size_of_loop 0256    __CFG_CPUDIV$OSC1_PLL2 000000              ??_atraso_ms 0003  
       ___lldiv@dividend 000D          ??_PWM1_Set_Duty 001A              ??_serial_rx 0009  
            _serial_init 799A         ___lldiv@quotient 0015             ___aldiv@sign 000A  
             _PWM1_Start 79AE  
